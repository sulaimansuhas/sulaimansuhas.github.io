{"version":3,"file":"e1f3c96338156bd25b8c286ac4111a3ee31ccc8e-8fd91b454bc15f0d8d6a.js","mappings":"iIAGA,MAAMA,GAAeC,EAAAA,EAAAA,SAAOC,EAAAA,IAAK,sFAAZD,CAAY,2CAIjC,K,sECFA,MAAME,GAAsB,IAAAC,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UCNbC,GAAgB,IAAAL,eAAc,CAAC,GCGrC,MAAM,GAAkB,IAAAA,eAAc,MCLhCM,EAAgC,oBAAbC,SCGnBC,EAA4BF,EAAY,EAAAG,gBAAkB,EAAAC,UCD1DC,GAAc,IAAAX,eAAc,CAAEY,QAAQ,ICK5C,SAASC,EAAiBC,EAAWC,EAAaC,EAAOC,GACrD,MAAMC,GLJC,IAAAC,YAAWd,GAAee,cKK3BC,GAAc,IAAAF,YAAWR,GACzBW,GAAkB,IAAAH,YAAW,GAC7BI,GAAsB,IAAAJ,YAAWpB,GAAqBK,cACtDoB,GAAmB,IAAAC,UAIzBR,EAAsBA,GAAuBI,EAAYK,UACpDF,EAAiBG,SAAWV,IAC7BO,EAAiBG,QAAUV,EAAoBH,EAAW,CACtDC,cACAG,SACAF,QACAY,WAAYN,EAAkBA,EAAgBO,QAAKC,EACnDC,wBAAuBT,IACW,IAA5BA,EAAgBU,QAEtBT,yBAGR,MAAMH,EAAgBI,EAAiBG,QAevC,OAdAnB,GAA0B,KACtBY,GAAiBA,EAAca,QAAQ,IAO3CzB,GAA0B,KAClBY,GAAiBA,EAAcc,gBAC/Bd,EAAcc,eAAeC,gBACjC,IAEJ3B,GAA0B,IAAM,IAAMY,GAAiBA,EAAcgB,OAAO,YAAY,IACjFhB,CACX,CC7CA,SAASiB,EAAYC,GACjB,MAAuB,iBAARA,GACXC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCAA,SAASK,EAAeC,GACpB,MAAoB,iBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,MAAoB,iBAANA,GAAqC,mBAAZA,EAAEI,KAC7C,CCCA,MAAMC,EAAe,CACjB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,eAEJ,SAASC,EAAsBlC,GAC3B,OAAQ+B,EAAoB/B,EAAMmC,UAC9BF,EAAaG,MAAMC,GAASV,EAAe3B,EAAMqC,KACzD,CACA,SAASC,EAActC,GACnB,OAAOuC,QAAQL,EAAsBlC,IAAUA,EAAMwC,SACzD,CCfA,SAASC,EAAuBzC,GAC5B,MAAM,QAAEgB,EAAO,QAAEmB,GCFrB,SAAgCnC,EAAO0C,GACnC,GAAIR,EAAsBlC,GAAQ,CAC9B,MAAM,QAAEgB,EAAO,QAAEmB,GAAYnC,EAC7B,MAAO,CACHgB,SAAqB,IAAZA,GAAqBW,EAAeX,GACvCA,OACAF,EACNqB,QAASR,EAAeQ,GAAWA,OAAUrB,EAErD,CACA,OAAyB,IAAlBd,EAAM2C,QAAoBD,EAAU,CAAC,CAChD,CDTiCE,CAAuB5C,GAAO,IAAAG,YAAWd,IACtE,OAAO,IAAAwD,UAAQ,KAAM,CAAG7B,UAASmB,aAAY,CAACW,EAA0B9B,GAAU8B,EAA0BX,IAChH,CACA,SAASW,EAA0BC,GAC/B,OAAOlB,MAAMC,QAAQiB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAoBC,IAAc,CACpCC,UAAYnD,GAAUkD,EAAUd,MAAMC,KAAWrC,EAAMqC,OAErDe,EAAqB,CACvBC,cAAeJ,EAAiB,CAAC,SAAU,WAAY,SACvDK,UAAWL,EAAiB,CACxB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,gBAEJM,KAAMN,EAAiB,CAAC,SACxBO,KAAMP,EAAiB,CAAC,OAAQ,iBAChCQ,MAAOR,EAAiB,CAAC,eACzBS,MAAOT,EAAiB,CAAC,aAAc,eAAgB,eACvDU,IAAKV,EAAiB,CAAC,WAAY,QAAS,aAAc,gBAC1DW,IAAKX,EAAiB,CAClB,QACA,aACA,oBACA,aAEJY,OAAQZ,EAAiB,CACrB,cACA,kBACA,qBCpBR,SAASa,EAAYC,GACjB,MAAMzC,GAAM,IAAAb,QAAO,MAInB,OAHoB,OAAhBa,EAAIX,UACJW,EAAIX,QAAUoD,KAEXzC,EAAIX,OACf,CCVA,MAAMqD,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZpB,IAAIrD,EAAK,ECDT,MAAMsD,GAAqB,IAAAnF,eAAc,CAAC,GCA1C,MAAMoF,UAA6B,YAI/BC,0BACI,MAAM,cAAEjE,EAAa,MAAEJ,GAAUsE,KAAKtE,MAGtC,OAFII,GACAA,EAAcmE,SAASvE,GACpB,IACX,CACAwE,qBAAuB,CACvBvD,SACI,OAAOqD,KAAKtE,MAAMyE,QACtB,ECVJ,MAAMC,GAA2B,IAAA1F,eAAc,CAAC,GCL1C2F,EAAwBC,OAAOC,IAAI,yBC0BzC,SAAS,GAAsB,kBAAEC,EAAiB,oBAAE7E,EAAmB,0BAAE8E,EAAyB,UAAEC,EAAS,eAAEC,EAAc,UAAEnF,IAC3HgF,GCzBJ,SAAsBI,GAClB,IAAK,MAAMC,KAAOD,EACF,8BAARC,EACA/B,EAAmB2B,0BAA4BG,EAASC,GAGxD/B,EAAmB+B,GAAKrF,UAAYoF,EAASC,EAGzD,CDgByBC,CAAaN,GAuDlC,MAAMO,GAAsB,IAAAC,aAtD5B,SAAyBtF,EAAOuF,GAC5B,MAAMC,EAAiB,KAChB,IAAArF,YAAWpB,MACXiB,EACHyF,SAAUC,EAAY1F,KAEpB,SAAEb,GAAaqG,EACrB,IAAIN,EAAW,KACf,MAAMxC,EAAUD,EAAuBzC,GAYjC2F,EAAexG,OAAW2B,EL3C7BgD,GAAY,KACf,GAAIE,EAAsBE,eACtB,OAAOrD,GACX,IK4CMd,EAAckF,EAAejF,EAAOb,GAC1C,IAAKA,GAAYG,EAAW,CAOxBoD,EAAQtC,cAAgBP,EAAiBC,EAAWC,EAAayF,EAAgBvF,GAKjF,MAAM2F,GAAiB,IAAAzF,YAAWR,GAAaC,OACzCiG,GAA2B,IAAA1F,YAAWuE,GACxChC,EAAQtC,gBACR8E,EAAWxC,EAAQtC,cAAcgF,aAEjCI,EAAgBI,EAAgBd,EAAmBa,EAAcZ,GAC7D3B,EAAmB2B,0BAA2Bc,GAE1D,CAKA,OAAQ,gBAAoBzB,EAAsB,CAAEhE,cAAesC,EAAQtC,cAAeJ,MAAOwF,GAC7FN,EACA,gBAAoB7F,EAAcyG,SAAU,CAAEC,MAAOrD,GAAWsC,EAAUlF,EAAWE,EAAO2F,EEzExG,SAAsB5F,EAAaK,EAAemF,GAC9C,OAAO,IAAAS,cAAaC,IAChBA,GAAYlG,EAAYmG,OAASnG,EAAYmG,MAAMD,GAC/C7F,IACA6F,EACM7F,EAAc8F,MAAMD,GACpB7F,EAAc+F,WAEpBZ,IAC2B,mBAAhBA,EACPA,EAAYU,GAEP5E,EAAYkE,KACjBA,EAAY5E,QAAUsF,GAE9B,GAOJ,CAAC7F,GACL,CFkDsHgG,CAAarG,EAAa2C,EAAQtC,cAAemF,GAAcxF,EAAaZ,EAAUuD,EAAQtC,gBAChN,IAGA,OADAiF,EAAoBV,GAAyB7E,EACtCuF,CACX,CACA,SAASK,GAAY,SAAED,IACnB,MAAMY,GAAgB,IAAAlG,YAAWgE,GAAoBtD,GACrD,OAAOwF,QAA8BvF,IAAb2E,EAClBY,EAAgB,IAAMZ,EACtBA,CACV,CG3EA,SAASa,EAAkBC,GACvB,SAASC,EAAO1G,EAAW2G,EAA8B,CAAC,GACtD,OAAO,EAAsBF,EAAazG,EAAW2G,GACzD,CACA,GAAqB,oBAAVC,MACP,OAAOF,EAMX,MAAMG,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBK,IAAK,CAACC,EAAS3B,KAINwB,EAAeI,IAAI5B,IACpBwB,EAAeK,IAAI7B,EAAKqB,EAAOrB,IAE5BwB,EAAeE,IAAI1B,KAGtC,CCxCA,MAAM8B,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAepH,GACpB,MAKqB,iBAAdA,IAIHA,EAAUqH,SAAS,SAOvBF,EAAqBG,QAAQtH,IAAc,GAIvC,QAAQuH,KAAKvH,GAIrB,CC3BA,MAAMwH,EAAkB,CAAC,ECGzB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBvC,GAAK,OAAEwC,EAAM,SAAElC,IACxC,OAAQ+B,EAAeT,IAAI5B,IACvBA,EAAIyC,WAAW,YACbD,QAAuB7G,IAAb2E,OACL6B,EAAgBnC,IAAgB,YAARA,EACvC,CCRA,MAAM0C,EAAiB9B,MAAaA,aAAqC,EAASA,EAAM+B,aCElFC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAKpBC,EAAqB,CAACC,EAAGC,IAAMf,EAAmBH,QAAQiB,GAAKd,EAAmBH,QAAQkB,GCRhG,SAASC,EAAcpD,GACnB,OAAOA,EAAIyC,WAAW,KAC1B,CCFA,MAAMY,EAAiB,CAACzC,EAAO0C,IACpBA,GAAyB,iBAAV1C,EAChB0C,EAAKC,UAAU3C,GACfA,ECNJ4C,EAAQ,CAACC,EAAKC,EAAKjH,IAAMkH,KAAKF,IAAIE,KAAKD,IAAIjH,EAAGgH,GAAMC,GCEpDE,EAAS,CACX1B,KAAOzF,GAAmB,iBAANA,EACpBoH,MAAOC,WACPP,UAAY9G,GAAMA,GAEhBsH,EAAQ,IACPH,EACHL,UAAY9G,GAAM+G,EAAM,EAAG,EAAG/G,IAE5BuH,EAAQ,IACPJ,EACHK,QAAS,GCPPC,EAAYzH,GAAMkH,KAAKQ,MAAU,IAAJ1H,GAAc,IAC3C2H,EAAa,uBACbC,EAAa,+HACbC,EAAmB,mHACzB,SAASC,EAAS9H,GACd,MAAoB,iBAANA,CAClB,CCVA,MAAM+H,EAAkBC,IAAS,CAC7BvC,KAAOzF,GAAM8H,EAAS9H,IAAMA,EAAEiI,SAASD,IAAiC,IAAxBhI,EAAEkI,MAAM,KAAKC,OAC7Df,MAAOC,WACPP,UAAY9G,GAAM,GAAGA,IAAIgI,MAEvBI,EAAUL,EAAe,OACzBM,EAAUN,EAAe,KACzBO,GAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,GAAKT,EAAe,MACpBU,GAAqB,IACpBJ,EACHjB,MAAQpH,GAAMqI,EAAQjB,MAAMpH,GAAK,IACjC8G,UAAY9G,GAAMqI,EAAQvB,UAAc,IAAJ9G,ICblC,GAAM,IACLmH,EACHL,UAAWI,KAAKQ,OCAdgB,GAAmB,CAErBC,YAAaL,GACbM,eAAgBN,GAChBO,iBAAkBP,GAClBQ,kBAAmBR,GACnBS,gBAAiBT,GACjBU,aAAcV,GACdW,OAAQX,GACRY,oBAAqBZ,GACrBa,qBAAsBb,GACtBc,wBAAyBd,GACzBe,uBAAwBf,GAExBgB,MAAOhB,GACPiB,SAAUjB,GACVkB,OAAQlB,GACRmB,UAAWnB,GACXoB,KAAMpB,GACNqB,IAAKrB,GACLsB,MAAOtB,GACPuB,OAAQvB,GACRwB,KAAMxB,GAENyB,QAASzB,GACT0B,WAAY1B,GACZ2B,aAAc3B,GACd4B,cAAe5B,GACf6B,YAAa7B,GACb8B,OAAQ9B,GACR+B,UAAW/B,GACXgC,YAAahC,GACbiC,aAAcjC,GACdkC,WAAYlC,GAEZmC,OAAQrC,EACRsC,QAAStC,EACTuC,QAASvC,EACTwC,QAASxC,EACTb,MAAK,EACLsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM5C,EACN6C,MAAO7C,EACP8C,MAAO9C,EACP+C,SAAU7C,GACV8C,WAAY9C,GACZ+C,WAAY/C,GACZgD,WAAYhD,GACZlC,EAAGkC,GACHjC,EAAGiC,GACHhC,EAAGgC,GACHiD,YAAajD,GACb/B,qBAAsB+B,GACtBkD,QAASlE,EACTmE,QAAShD,GACTiD,QAASjD,GACTkD,QAASrD,GAETsD,OAAQ,GAERC,YAAavE,EACbwE,cAAexE,EACfyE,WAAY,IC9DhB,SAASC,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,MAAM,MAAEC,EAAK,KAAEC,EAAI,UAAExF,EAAS,cAAEyF,EAAa,gBAAEC,GAAoBP,EACnEM,EAAcpE,OAAS,EAEvB,IAAIsE,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAMpJ,KAAO2I,EAAc,CAC5B,MAAM/H,EAAQ+H,EAAa3I,GAI3B,GAAIoD,EAAcpD,GAAM,CACpB+I,EAAK/I,GAAOY,EACZ,QACJ,CAEA,MAAMyI,EAAYlE,GAAiBnF,GAC7BsJ,EAAcjG,EAAezC,EAAOyI,GAC1C,GAAIhH,EAAeT,IAAI5B,GAAM,CAMzB,GAJAkJ,GAAe,EACf3F,EAAUvD,GAAOsJ,EACjBN,EAAcO,KAAKvJ,IAEdoJ,EACD,SAEAxI,KAAWyI,EAAUpF,SAAW,KAChCmF,GAAkB,EAC1B,MACSpJ,EAAIyC,WAAW,WAEpB0G,GAAqB,EACrBF,EAAgBjJ,GAAOsJ,GAGvBR,EAAM9I,GAAOsJ,CAErB,CAiBA,GAhBKX,EAAapF,YACV2F,GAAgBL,EAChBC,EAAMvF,UTrClB,UAAwB,UAAEA,EAAS,cAAEyF,IAAkB,2BAAEQ,GAA6B,EAAI,mBAAEC,GAAqB,GAASC,EAAoBb,GAE1I,IAAIc,EAAkB,GAEtBX,EAAcY,KAAK3G,GAEnB,IAAK,MAAMjD,KAAOgJ,EACdW,GAAmB,GAAG/G,EAAe5C,IAAQA,KAAOuD,EAAUvD,OAclE,OAZIwJ,IAA+BjG,EAAUR,IACzC4G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BhB,EACAc,EAAkBd,EAAkBtF,EAAWmG,EAAqB,GAAKC,GAEpEF,GAAsBC,IAC3BC,EAAkB,QAEfA,CACX,CSe8BG,CAAepB,EAAOE,EAASQ,EAAiBP,GAE7DC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB4F,EAAoB,CACpB,MAAM,QAAEjB,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOa,EAC3DH,EAAMG,gBAAkB,GAAGf,KAAWC,KAAWC,GACrD,CACJ,CCzEA,MAAM2B,GAAwB,KAAM,CAChCjB,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,ICCX,SAASiB,GAAkBC,EAAQC,EAAQrP,GACvC,IAAK,MAAMmF,KAAOkK,EACTxH,EAAcwH,EAAOlK,KAAUuC,EAAoBvC,EAAKnF,KACzDoP,EAAOjK,GAAOkK,EAAOlK,GAGjC,CAQA,SAASmK,GAAStP,EAAOD,EAAaZ,GAClC,MACM8O,EAAQ,CAAC,EAMf,OAFAkB,GAAkBlB,EALAjO,EAAMiO,OAAS,CAAC,EAKEjO,GACpCuB,OAAOgO,OAAOtB,EAdlB,UAAgC,kBAAED,GAAqBjO,EAAaZ,GAChE,OAAO,IAAA0D,UAAQ,KACX,MAAMgL,EDfsB,CAChCI,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,GCYH,OADAN,GAAgBC,EAAO9N,EAAa,CAAE4O,4BAA6BxP,GAAY6O,GACxEzM,OAAOgO,OAAO,CAAC,EAAG1B,EAAMK,KAAML,EAAMI,MAAM,GAClD,CAAClO,GACR,CAQyByP,CAAuBxP,EAAOD,EAAaZ,IACzDa,EAAMyP,gBAAkBzP,EAAMyP,gBAAgBxB,GAASA,CAClE,CACA,SAASyB,GAAa1P,EAAOD,EAAaZ,GAEtC,MAAMwQ,EAAY,CAAC,EACb1B,EAAQqB,GAAStP,EAAOD,EAAaZ,GAgB3C,OAfIa,EAAMwD,OAA+B,IAAvBxD,EAAM4P,eAEpBD,EAAUE,WAAY,EAEtB5B,EAAM6B,WACF7B,EAAM8B,iBACF9B,EAAM+B,mBACF,OAEZ/B,EAAMgC,aACa,IAAfjQ,EAAMwD,KACA,OACA,QAAsB,MAAfxD,EAAMwD,KAAe,IAAM,MAEhDmM,EAAU1B,MAAQA,EACX0B,CACX,CClDA,MAwBMO,GAAmB,IAAIzI,IAAI,CAC7B,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,SACA,WACA,mBACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,OACA,eACA,eACA,kBACA,oBACA,mBACA,SACA,SACA,cACA,eACA,kBACA,iBACA,eACA,aACA,eAnDA,cACA,kBACA,kBACA,WANc,WAAY,QAAS,aAAc,cATjD,UACA,OACA,WACA,aACA,WACA,aACA,YACA,cAGc,QAAS,aAAc,oBAAqB,aAmE9D,SAAS0I,GAAkBhL,GACvB,OAAO+K,GAAiBnJ,IAAI5B,EAChC,CC9EA,IAAIiL,GAAiBjL,IAASgL,GAAkBhL,GAoBhD,KAnBiCkL,GAyBLC,QAAQ,0BAA0BlH,WArB1DgH,GAAiBjL,GAAQA,EAAIyC,WAAW,OAASuI,GAAkBhL,GAAOkL,GAAYlL,GAyB1F,CAFA,MAAOoL,IAEP,CA7BA,IAAiCF,GCDjC,SAASG,GAAWC,EAAQC,EAAQpF,GAChC,MAAyB,iBAAXmF,EACRA,EACAvG,GAAGxB,UAAUgI,EAASpF,EAAOmF,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAAcjD,GAAO,MAAEkD,EAAK,MAAEC,EAAK,QAAE3D,EAAO,QAAEC,EAAO,WAAE2D,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAEvGC,GAAUrD,EAASsD,EAAUrD,GAM5B,GALAJ,GAAgBC,EAAOuD,EAAQrD,EAASC,GAKpCqD,EAIA,YAHIxD,EAAMI,MAAMqD,UACZzD,EAAM0D,MAAMD,QAAUzD,EAAMI,MAAMqD,UAI1CzD,EAAM0D,MAAQ1D,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,MAAM,MAAEsD,EAAK,MAAEtD,EAAK,WAAEuD,GAAe3D,EAKjC0D,EAAM7I,YACF8I,IACAvD,EAAMvF,UAAY6I,EAAM7I,kBACrB6I,EAAM7I,WAGb8I,SACa1Q,IAAZuM,QAAqCvM,IAAZwM,GAAyBW,EAAMvF,aACzDuF,EAAMG,gBFzBd,SAAgCoD,EAAYnE,EAASC,GAGjD,MAAO,GAFWkD,GAAWnD,EAASmE,EAAWxJ,EAAGwJ,EAAWtG,UAC7CsF,GAAWlD,EAASkE,EAAWvJ,EAAGuJ,EAAWpG,SAEnE,CEqBgCqG,CAAuBD,OAAwB1Q,IAAZuM,EAAwBA,EAAU,QAAiBvM,IAAZwM,EAAwBA,EAAU,UAG1HxM,IAAViQ,IACAQ,EAAMvJ,EAAI+I,QACAjQ,IAAVkQ,IACAO,EAAMtJ,EAAI+I,QAEKlQ,IAAfmQ,GD3BR,SAAsBM,EAAOxH,EAAQ2H,EAAU,EAAGhB,EAAS,EAAGiB,GAAc,GAExEJ,EAAMN,WAAa,EAGnB,MAAMW,EAAOD,EAAchB,GAAWE,GAEtCU,EAAMK,EAAKlB,QAAUxG,GAAGxB,WAAWgI,GAEnC,MAAMO,EAAa/G,GAAGxB,UAAUqB,GAC1BmH,EAAchH,GAAGxB,UAAUgJ,GACjCH,EAAMK,EAAKhB,OAAS,GAAGK,KAAcC,GACzC,CCgBQW,CAAaN,EAAON,EAAYC,EAAaC,GAAY,EAEjE,CC7CA,MAAMW,GAAuB,KAAM,CPD/B7D,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,EODPqD,MAAO,CAAC,ICJNF,GAAYU,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIC,cCMzD,SAASC,GAAYjS,EAAOD,EAAamS,EAAWpS,GAChD,MAAMqS,GAAc,IAAAtP,UAAQ,KACxB,MAAMgL,EFNqB,CPD/BI,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,EODPqD,MAAO,CAAC,GEMJ,OADAT,GAAcjD,EAAO9N,EAAa,CAAE4O,4BAA4B,GAAS0C,GAASvR,GAAYE,EAAMgO,mBAC7F,IACAH,EAAM0D,MACTtD,MAAO,IAAKJ,EAAMI,OACrB,GACF,CAAClO,IACJ,GAAIC,EAAMiO,MAAO,CACb,MAAMmE,EAAY,CAAC,EACnBjD,GAAkBiD,EAAWpS,EAAMiO,MAAOjO,GAC1CmS,EAAYlE,MAAQ,IAAKmE,KAAcD,EAAYlE,MACvD,CACA,OAAOkE,CACX,CCfA,SAASE,GAAgBC,GAAqB,GAiB1C,MAhBkB,CAACxS,EAAWE,EAAO2F,EAAcrE,GAAOwM,gBAAgB3O,KACtE,MAGMgT,GAHiBjL,EAAepH,GAChCmS,GACAvC,IAC6B1P,EAAO8N,EAAc3O,EAAUW,GAC5DyS,EPqBd,SAAqBvS,EAAOwS,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMpN,KAAOnF,GACVoQ,GAAcjL,KACU,IAAvBmN,GAA+BnC,GAAkBhL,KAChDqN,IAAUrC,GAAkBhL,IAE7BnF,EAAiB,WAAKmF,EAAIyC,WAAW,aACtC2K,EAAcpN,GAAOnF,EAAMmF,IAGnC,OAAOoN,CACX,COjC8BE,CAAYzS,EAA4B,iBAAdF,EAAwBwS,GAClEI,EAAe,IACdH,KACAJ,EACH7Q,OAKJ,OAHIqE,IACA+M,EAAa,sBAAwB/M,IAElC,IAAAgN,eAAc7S,EAAW4S,EAAa,CAGrD,CCrBA,MAAME,GAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAASd,cCHrE,SAASe,GAAWC,GAAS,MAAE/E,EAAK,KAAEC,GAAQ+E,EAAWC,GACrD3R,OAAOgO,OAAOyD,EAAQ/E,MAAOA,EAAOiF,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAM9N,KAAO+I,EACd8E,EAAQ/E,MAAMmF,YAAYjO,EAAK+I,EAAK/I,GAE5C,CCHA,MAAMkO,GAAsB,IAAI5L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS6L,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAazS,EAAWoS,GAC5C,IAAK,MAAM/N,KAAOoO,EAAYhC,MAC1ByB,EAAQS,aAAcJ,GAAoBtM,IAAI5B,GAA0BA,EAAnByN,GAAYzN,GAAYoO,EAAYhC,MAAMpM,GAEvG,CCNA,SAASuO,GAA4B1T,GACjC,MAAM,MAAEiO,GAAUjO,EACZ2T,EAAY,CAAC,EACnB,IAAK,MAAMxO,KAAO8I,GACVpG,EAAcoG,EAAM9I,KAASuC,EAAoBvC,EAAKnF,MACtD2T,EAAUxO,GAAO8I,EAAM9I,IAG/B,OAAOwO,CACX,CCTA,SAAS,GAA4B3T,GACjC,MAAM2T,EAAYD,GAA8B1T,GAChD,IAAK,MAAMmF,KAAOnF,EACd,GAAI6H,EAAc7H,EAAMmF,IAAO,CAE3BwO,EAD0B,MAARxO,GAAuB,MAARA,EAAc,OAASA,EAAIyO,cAAgBzO,GACrDnF,EAAMmF,EACjC,CAEJ,OAAOwO,CACX,CCZA,SAASE,GAAwB7T,EAAO8T,EAAYtN,EAAQuN,EAAgB,CAAC,EAAGC,EAAkB,CAAC,GAsB/F,MAlB0B,mBAAfF,IACPA,EAAaA,OAAsBhT,IAAX0F,EAAuBA,EAASxG,EAAMwG,OAAQuN,EAAeC,IAM/D,iBAAfF,IACPA,EAAa9T,EAAMwC,UAAYxC,EAAMwC,SAASsR,IAOxB,mBAAfA,IACPA,EAAaA,OAAsBhT,IAAX0F,EAAuBA,EAASxG,EAAMwG,OAAQuN,EAAeC,IAElFF,CACX,CCvBA,MAAMG,GAAqBrS,GAChBC,MAAMC,QAAQF,GCOzB,SAASsS,GAAmBnO,GACxB,MAAMoO,EAAiBtM,EAAc9B,GAASA,EAAMc,MAAQd,EAC5D,OCRmBnE,EDQEuS,ECPd5R,QAAQX,GAAkB,iBAANA,GAAkBA,EAAEwS,KAAOxS,EAAEyS,SDQlDF,EAAeE,UACfF,ECVY,IAACvS,CDWvB,CEMA,MAAM0S,GAAsBC,GAAW,CAACvU,EAAOb,KAC3C,MAAMuD,GAAU,IAAAvC,YAAWd,GACrBiB,GAAkB,IAAAH,YAAW,GAC7BqU,EAAO,IAbjB,UAAmB,4BAAEd,EAA2B,kBAAEe,EAAiB,QAAEC,GAAY1U,EAAO0C,EAASpC,GAC7F,MAAMuN,EAAQ,CACVC,aAAc6G,GAAiB3U,EAAO0C,EAASpC,EAAiBoT,GAChEH,YAAakB,KAKjB,OAHIC,IACA7G,EAAM3H,MAASD,GAAayO,EAAQ1U,EAAOiG,EAAU4H,IAElDA,CACX,CAIuB+G,CAAUL,EAAQvU,EAAO0C,EAASpC,GACrD,OAAOnB,EAAWqV,IAAS1Q,EAAY0Q,EAAK,EAEhD,SAASG,GAAiB3U,EAAO0C,EAASpC,EAAiBuU,GACvD,MAAMC,EAAS,CAAC,EACVC,EAAeF,EAAmB7U,GACxC,IAAK,MAAMmF,KAAO4P,EACdD,EAAO3P,GAAO+O,GAAmBa,EAAa5P,IAElD,IAAI,QAAEnE,EAAO,QAAEmB,GAAYnC,EAC3B,MAAMgV,EAA0B9S,EAAsBlC,GAChDiV,EAAkB3S,EAActC,GAClC0C,GACAuS,IACCD,IACiB,IAAlBhV,EAAM2C,eACU7B,IAAZE,IACAA,EAAU0B,EAAQ1B,cACNF,IAAZqB,IACAA,EAAUO,EAAQP,UAE1B,IAAI+S,IAA4B5U,IACE,IAA5BA,EAAgBU,QAEtBkU,EAA4BA,IAAyC,IAAZlU,EACzD,MAAMmU,EAAeD,EAA4B/S,EAAUnB,EAC3D,GAAImU,GACwB,kBAAjBA,IACNpT,EAAoBoT,GAAe,EACvBtT,MAAMC,QAAQqT,GAAgBA,EAAe,CAACA,IACtDC,SAAStB,IACV,MAAMuB,EAAWxB,GAAwB7T,EAAO8T,GAChD,IAAKuB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAEC,KAAenG,GAAWiG,EACjD,IAAK,MAAMlQ,KAAOiK,EAAQ,CACtB,IAAIoG,EAAcpG,EAAOjK,GACzB,GAAItD,MAAMC,QAAQ0T,GAAc,CAQ5BA,EAAcA,EAHAN,EACRM,EAAYzL,OAAS,EACrB,EAEV,CACoB,OAAhByL,IACAV,EAAO3P,GAAOqQ,EAEtB,CACA,IAAK,MAAMrQ,KAAOmQ,EACdR,EAAO3P,GAAOmQ,EAAcnQ,EAAI,GAE5C,CACA,OAAO2P,CACX,CCvEA,MAAMW,GAAkB,CACpBxQ,eAAgBqP,GAAmB,CAC/BZ,4BAA6B,GAC7Be,kBAAmB3C,GACnB4C,QAAS,CAAC1U,EAAOiG,GAAYsN,cAAazF,mBACtC,IACIyF,EAAY/B,WAEJ,mBADGvL,EAASyP,QAEVzP,EAASyP,UACTzP,EAAS0P,uBAUvB,CARA,MAAOC,GAEHrC,EAAY/B,WAAa,CACrBxJ,EAAG,EACHC,EAAG,EACHiD,MAAO,EACPE,OAAQ,EAEhB,CACA0F,GAAcyC,EAAazF,EAAc,CAAEa,4BAA4B,GAAS0C,GAASpL,EAAS4P,SAAU7V,EAAMgO,mBAClHsF,GAAUrN,EAAUsN,EAAY,KCzBtCuC,GAAmB,CACrB7Q,eAAgBqP,GAAmB,CAC/BZ,4BAA2B,GAC3Be,kBAAmBvF,MCP3B,IAAI6G,GCEJ,SAASC,GAAY5G,EAAQ6G,EAAWC,EAASnI,EAAU,CAAEoI,SAAS,IAElE,OADA/G,EAAOgH,iBAAiBH,EAAWC,EAASnI,GACrC,IAAMqB,EAAOiH,oBAAoBJ,EAAWC,EACvD,CAsBA,SAASI,GAAYhV,EAAK2U,EAAWC,EAASnI,IAC1C,IAAArO,YAAU,KACN,MAAMsT,EAAU1R,EAAIX,QACpB,GAAIuV,GAAWlD,EACX,OAAOgD,GAAYhD,EAASiD,EAAWC,EAASnI,EACpD,GACD,CAACzM,EAAK2U,EAAWC,EAASnI,GACjC,EDjCA,SAAWgI,GACPA,EAAuB,QAAI,UAC3BA,EAAqB,MAAI,aACzBA,EAAmB,IAAI,WACvBA,EAAoB,KAAI,YACxBA,EAAqB,MAAI,aACzBA,EAAsB,OAAI,cAC1BA,EAAoB,KAAI,MAC3B,CARD,CAQGA,KAAkBA,GAAgB,CAAC,IELtC,MAAMQ,GAAoBC,IAA8B,IAApBA,EAAMC,UCF1C,SAASC,GAAiBF,EAAOG,EAAY,QACzC,MAAO,CACHC,MAAO,CACH5O,EAAGwO,EAAMG,EAAY,KACrB1O,EAAGuO,EAAMG,EAAY,MAGjC,CACA,MAAME,GAAc,CAACX,EAASY,GAA6B,KACvD,MAAMC,EAAYP,GAAUN,EAAQM,EAAOE,GAAiBF,IAC5D,OAAOM,EACAN,GAAUD,GAAiBC,IAAUO,EAASP,GAC/CO,CAAQ,ECXlB,SAASC,GAAgB5H,EAAQ6G,EAAWC,EAASnI,GACjD,OAAOiI,GAAY5G,EAAQ6G,EAAWY,GAAYX,EAAuB,gBAAdD,GAA8BlI,EAC7F,CACA,SAASkJ,GAAgB3V,EAAK2U,EAAWC,EAASnI,GAC9C,OAAOuI,GAAYhV,EAAK2U,EAAWC,GAAWW,GAAYX,EAAuB,gBAAdD,GAA8BlI,EACrG,CCRA,SAASmJ,GAAW7U,GAChB,IAAI8U,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAO9U,EACA+U,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAc/T,GACnB,IAAI2T,GAAO,EACX,GAAa,MAAT3T,EACA2T,EAAOG,UAEN,GAAa,MAAT9T,EACL2T,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAO,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CC3CA,SAASC,GAAiBxX,EAAeyX,EAAUC,GAC/C,MAAO,CAACtB,EAAOuB,MAJnB,SAAsBvB,GAClB,MAAsB,QAAfA,EAAM/N,MAAiC,UAAf+N,EAAM/N,IACzC,EAGauP,CAAaxB,KAAUkB,OAKxBtX,EAAcc,gBACdd,EAAcc,eAAe+W,UAAUlC,GAAcmC,MAAOL,GAEhEC,GAAYA,EAAStB,EAAOuB,GAAK,CAEzC,CCZA,MAAMI,GAAgB,CAACjY,EAAQkY,MACtBA,IAGIlY,IAAWkY,GAITD,GAAcjY,EAAQkY,EAAMC,gBCb3C,SAASC,GAAiBR,GACtB,OAAO,IAAApY,YAAU,IAAM,IAAMoY,KAAY,GAC7C,CCGA,MAAMS,GAAmB,CAAClQ,EAAGC,IAAO1G,GAAM0G,EAAED,EAAEzG,IACxC4W,GAAO,IAAIC,IAAiBA,EAAaC,OAAOH,ICRvC,IAAI9Q,ICKnB,MAAMkR,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMjB,EAAWa,GAAkB9R,IAAIkS,EAAM3J,QAC7C0I,GAAYA,EAASiB,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQ7D,QAAQ0D,GAAqB,EAqBzC,SAASI,GAAoBlG,EAASjF,EAAS+J,GAC3C,MAAMqB,EApBV,UAAkC,KAAEC,KAASrL,IACzC,MAAMsL,EAAaD,GAAQ7Z,SAItBsZ,GAAU9R,IAAIsS,IACfR,GAAU7R,IAAIqS,EAAY,CAAC,GAE/B,MAAMC,EAAgBT,GAAUhS,IAAIwS,GAC9BlU,EAAMoU,KAAKC,UAAUzL,GAQ3B,OAHKuL,EAAcnU,KACfmU,EAAcnU,GAAO,IAAIsU,qBAAqBT,GAA0B,CAAEI,UAASrL,KAEhFuL,EAAcnU,EACzB,CAEsCuU,CAAyB3L,GAG3D,OAFA4K,GAAkB3R,IAAIgM,EAAS8E,GAC/BqB,EAA0BQ,QAAQ3G,GAC3B,KACH2F,GAAkBiB,OAAO5G,GACzBmG,EAA0BU,UAAU7G,EAAQ,CAEpD,CC3BA,MAAM8G,GAAiB,CACnB1X,KAAM,EACN2X,IAAK,GAET,SAASC,GAAwBC,EAAepM,EAAOzN,GAAe,KAAEgZ,EAAMpN,OAAQkO,EAAU,OAAEC,EAAS,OAAM,KAAEC,KAC/G,IAAA1a,YAAU,KACN,IAAKua,IAAkB7Z,EAAcO,QACjC,OACJ,MAAMoN,EAAU,CACZqL,KAAMA,aAAmC,EAASA,EAAKzY,QACvDuZ,aACAG,UAA6B,iBAAXF,EAAsBA,EAASL,GAAeK,IAiCpE,OAAOjB,GAAoB9Y,EAAcO,QAASoN,GA/BpBgL,IAC1B,MAAM,eAAEuB,GAAmBvB,EAI3B,GAAIlL,EAAM0M,WAAaD,EACnB,OAMJ,GALAzM,EAAM0M,SAAWD,EAKbF,IAASE,GAAkBzM,EAAM2M,eACjC,OAEKF,IACLzM,EAAM2M,gBAAiB,GAEvBpa,EAAcc,gBACdd,EAAcc,eAAe+W,UAAUlC,GAAc0E,OAAQH,GAMjE,MAAMta,EAAQI,EAAcsa,WACtB5C,EAAWwC,EACXta,EAAM2a,gBACN3a,EAAM4a,gBACZ9C,GAAYA,EAASiB,EAAM,GAEiD,GACjF,CAACkB,EAAeb,EAAMc,EAAYC,GACzC,CAMA,SAASU,GAA+BZ,EAAepM,EAAOzN,GAAe,SAAE0a,GAAW,KACtF,IAAApb,YAAU,KACDua,GAAkBa,GAavBC,uBAAsB,KAClBlN,EAAM2M,gBAAiB,EACvB,MAAM,gBAAEG,GAAoBva,EAAcsa,WAC1CC,GAAmBA,EAAgB,MAC/Bva,EAAcc,gBACdd,EAAcc,eAAe+W,UAAUlC,GAAc0E,QAAQ,EACjE,GACF,GACH,CAACR,GACR,CC/FA,MAAMe,GAA2BC,GAAUjb,IACvCib,EAAKjb,GACE,MCILkb,GAAoB,CACtBrX,OAAQmX,IFDZ,UAAqB,cAAE5a,EAAa,YAAE+a,EAAW,gBAAER,EAAe,gBAAEC,EAAe,SAAEQ,EAAW,CAAC,IAC7F,MAAMvN,GAAQ,IAAApN,QAAO,CACjB+Z,gBAAgB,EAChBD,UAAU,IAEd,IAAIN,EAAgB1X,QAAQ4Y,GAAeR,GAAmBC,GAC1DQ,EAAShB,MAAQvM,EAAMlN,QAAQ6Z,iBAC/BP,GAAgB,IACgC,oBAAzBR,qBACrBoB,GACAb,IACMC,EAAepM,EAAMlN,QAASP,EAAegb,EAC7D,IEVIzX,IAAKqX,ICIT,UAAuB,MAAEK,EAAK,WAAEC,EAAU,YAAEC,EAAW,SAAEC,EAAQ,cAAEpb,IAC/D,MAAMqb,EAAoBJ,GAASC,GAAcC,GAAeC,EAC1DE,GAAa,IAAAjb,SAAO,GACpBkb,GAA4B,IAAAlb,QAAO,MAInCmb,EAAe,CACjBzF,UAAWmF,GAAcD,GAASE,GAAeM,IAErD,SAASC,IACLH,EAA0Bhb,SAAWgb,EAA0Bhb,UAC/Dgb,EAA0Bhb,QAAU,IACxC,CACA,SAASob,IAKL,OAJAD,IACAJ,EAAW/a,SAAU,EACrBP,EAAcc,gBACVd,EAAcc,eAAe+W,UAAUlC,GAAciG,KAAK,IACtDtE,IACZ,CACA,SAASuE,EAAYzF,EAAOuB,GACnBgE,MAMJ5D,GAAc/X,EAAcO,QAAS6V,EAAMpH,QAEtCiM,GAASA,EAAM7E,EAAOuB,GADtBwD,GAAeA,EAAY/E,EAAOuB,GAE5C,CACA,SAASmE,EAAgB1F,EAAOuB,GACvBgE,KAELR,GAAeA,EAAY/E,EAAOuB,EACtC,CACA,SAAS8D,EAAcrF,EAAOuB,GAC1B+D,IACIJ,EAAW/a,UAEf+a,EAAW/a,SAAU,EACrBgb,EAA0Bhb,QAAU6X,GAAKxB,GAAgBmF,OAAQ,YAAaF,EAAaL,GAAe5E,GAAgBmF,OAAQ,gBAAiBD,EAAiBN,IAIpKxb,EAAcc,gBACVd,EAAcc,eAAe+W,UAAUlC,GAAciG,KAAK,GAC9DV,GAAcA,EAAW9E,EAAOuB,GACpC,CACAd,GAAgB7W,EAAe,cAAeqb,EAAoBI,OAAgB/a,EAAW8a,GAC7FtD,GAAiBwD,EACrB,IDvDIrY,MAAOuX,IEAX,UAAyB,WAAEoB,EAAU,cAAEhc,IACnC,MAAM,eAAEc,GAAmBd,EAO3BkW,GAAYlW,EAAe,QAASgc,EANpB,KACZlb,GAAkBA,EAAe+W,UAAUlC,GAAcsG,OAAO,EAAK,OAKdvb,GAC3DwV,GAAYlW,EAAe,OAAQgc,EAJpB,KACXlb,GAAkBA,EAAe+W,UAAUlC,GAAcsG,OAAO,EAAM,OAGjBvb,EAC7D,IFTI4C,MAAOsX,IRUX,UAAyB,aAAEsB,EAAY,WAAEC,EAAU,WAAEC,EAAU,cAAEpc,IAC7D6W,GAAgB7W,EAAe,eAAgBkc,GAAgBE,EACzD5E,GAAiBxX,GAAe,EAAMkc,QACtCxb,EAAW,CAAEqV,SAAUmG,IAC7BrF,GAAgB7W,EAAe,eAAgBmc,GAAcC,EACvD5E,GAAiBxX,GAAe,EAAOmc,QACvCzb,EAAW,CAAEqV,SAAUoG,GACjC,KWDA,SAASE,KACL,MAAM/Z,GAAU,IAAAvC,YAAW,GAC3B,GAAgB,OAAZuC,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEga,EAAS,eAAEC,EAAc,SAAEC,GAAala,EAI1C7B,GAAK,IAAAgc,UACX,IAAAnd,YAAU,IAAMkd,EAAS/b,IAAK,IAE9B,OAAQ6b,GAAaC,EAAiB,EAAC,EADlB,IAAMA,GAAkBA,EAAe9b,IACE,EAAC,EACnE,CCtCA,SAASic,GAAeC,EAAMC,GAC1B,IAAKnb,MAAMC,QAAQkb,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKjT,OACxB,GAAIkT,IAAeF,EAAKhT,OACpB,OAAO,EACX,IAAK,IAAImT,EAAI,EAAGA,EAAID,EAAYC,IAC5B,GAAIF,EAAKE,KAAOH,EAAKG,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,MCAMC,GAAqBvb,GAAM,aAAayF,KAAKzF,GCH7Cwb,GAAY,CACdC,MAAO,EACPC,UAAW,GCCTC,GAAmB,EAAI,GAAM,IAC7BC,GAAwC,oBAAhBC,YACxB,IAAMA,YAAYC,MAClB,IAAMC,KAAKD,MACXE,GAAgC,oBAAXzB,OACpBrE,GAAaqE,OAAOpB,sBAAsBjD,GAC1CA,GAAa+F,YAAW,IAAM/F,EAAS0F,OAAmBD,ICJjE,IAAIO,IAAoB,EACpBC,IAAe,EACfC,IAAe,EACnB,MAAMC,GAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,GAAQD,GAAWvF,QAAO,CAACyF,EAAKhZ,KAClCgZ,EAAIhZ,GChBR,SAA0B4Y,GAKtB,IAAIK,EAAQ,GACRC,EAAiB,GAIjBC,EAAW,EAKXN,GAAe,EACfO,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,CAAC7G,EAAU8G,GAAY,EAAOC,GAAY,KAChD,MAAMC,EAAoBD,GAAab,EACjCe,EAASD,EAAoBV,EAAQC,EAU3C,OATIO,GACAJ,EAAYQ,IAAIlH,IAEc,IAA9BiH,EAAO3X,QAAQ0Q,KACfiH,EAAOrQ,KAAKoJ,GAERgH,GAAqBd,IACrBM,EAAWF,EAAMrU,SAElB+N,CAAQ,EAKnBmH,OAASnH,IACL,MAAMoH,EAAQb,EAAejX,QAAQ0Q,IACtB,IAAXoH,GACAb,EAAec,OAAOD,EAAO,GACjCV,EAAY5E,OAAO9B,EAAS,EAKhCsH,QAAUhC,IAMN,GAAIY,EACAO,GAAiB,MADrB,CAUA,GANAP,GAAe,GACdI,EAAOC,GAAkB,CAACA,EAAgBD,GAE3CC,EAAetU,OAAS,EAExBuU,EAAWF,EAAMrU,OACbuU,EACA,IAAK,IAAIpB,EAAI,EAAGA,EAAIoB,EAAUpB,IAAK,CAC/B,MAAMpF,EAAWsG,EAAMlB,GACvBpF,EAASsF,GACLoB,EAAYzX,IAAI+Q,KAChB4G,EAAKC,SAAS7G,GACdiG,IAER,CAEJC,GAAe,EACXO,IACAA,GAAiB,EACjBG,EAAKU,QAAQhC,GApBjB,CAqBA,GAGR,OAAOsB,CACX,CDrEeW,EAAiB,IAAOtB,IAAe,IAC3CI,IACR,CAAC,GACEmB,GAAOrB,GAAWvF,QAAO,CAACyF,EAAKhZ,KACjC,MAAMuZ,EAAOR,GAAM/Y,GAMnB,OALAgZ,EAAIhZ,GAAO,CAACia,EAASR,GAAY,EAAOC,GAAY,KAC3Cd,IACDwB,KACGb,EAAKC,SAASS,EAASR,EAAWC,IAEtCV,CAAG,GACX,CAAC,GACEqB,GAAavB,GAAWvF,QAAO,CAACyF,EAAKhZ,KACvCgZ,EAAIhZ,GAAO+Y,GAAM/Y,GAAK8Z,OACfd,IACR,CAAC,GACEsB,GAAYxB,GAAWvF,QAAO,CAACyF,EAAKhZ,KACtCgZ,EAAIhZ,GAAO,IAAM+Y,GAAM/Y,GAAKia,QAAQhC,IAC7Be,IACR,CAAC,GACEuB,GAAeC,GAAWzB,GAAMyB,GAAQP,QAAQhC,IAChDwC,GAAgBtC,IAClBS,IAAe,EACfX,GAAUC,MAAQS,GACZP,GACAzU,KAAKD,IAAIC,KAAKF,IAAI0U,EAAYF,GAAUE,UArC/B,IAqCuD,GACtEF,GAAUE,UAAYA,EACtBU,IAAe,EACfC,GAAW7I,QAAQsK,IACnB1B,IAAe,EACXD,KACAD,IAAoB,EACpBF,GAAYgC,IAChB,EAEEL,GAAY,KACdxB,IAAe,EACfD,IAAoB,EACfE,IACDJ,GAAYgC,GAAa,EEvDjC,SAASC,GAAcC,EAAKC,IACG,IAAvBD,EAAI1Y,QAAQ2Y,IACZD,EAAIpR,KAAKqR,EACjB,CACA,SAASC,GAAWF,EAAKC,GACrB,MAAMb,EAAQY,EAAI1Y,QAAQ2Y,GACtBb,GAAS,GACTY,EAAIX,OAAOD,EAAO,EAC1B,CCNA,MAAMe,GACFC,cACI5b,KAAK6b,cAAgB,EACzB,CACAnB,IAAI9I,GAEA,OADA2J,GAAcvb,KAAK6b,cAAejK,GAC3B,IAAM8J,GAAW1b,KAAK6b,cAAejK,EAChD,CACA9U,OAAOiH,EAAGC,EAAG8X,GACT,MAAMC,EAAmB/b,KAAK6b,cAAcpW,OAC5C,GAAKsW,EAEL,GAAyB,IAArBA,EAIA/b,KAAK6b,cAAc,GAAG9X,EAAGC,EAAG8X,QAG5B,IAAK,IAAIlD,EAAI,EAAGA,EAAImD,EAAkBnD,IAAK,CAKvC,MAAMhH,EAAU5R,KAAK6b,cAAcjD,GACnChH,GAAWA,EAAQ7N,EAAGC,EAAG8X,EAC7B,CAER,CACAE,UACI,OAAOhc,KAAK6b,cAAcpW,MAC9B,CACAwW,QACIjc,KAAK6b,cAAcpW,OAAS,CAChC,EC9BJ,SAASyW,GAAkBC,EAAUC,GACjC,OAAOA,EAAgBD,GAAY,IAAOC,GAAiB,CAC/D,CCKA,MAAMC,GASFT,YAAYnc,EAAMgK,EAAU,CAAC,GAjBjB,IAAChI,EAsBTzB,KAAKsc,QAAU,QAMftc,KAAKuc,UAAY,EAMjBvc,KAAKwc,YAAc,EAQnBxc,KAAKyc,kBAAmB,EAIxBzc,KAAK0c,OAAS,CAAC,EACf1c,KAAK2c,gBAAkB,CAACrf,EAAGX,GAAS,KAChCqD,KAAK0Y,KAAO1Y,KAAK3D,QACjB2D,KAAK3D,QAAUiB,EAEf,MAAM,MAAEyb,EAAK,UAAEC,GAAcF,GACzB9Y,KAAKwc,cAAgBxD,IACrBhZ,KAAKuc,UAAYxD,EACjB/Y,KAAKwc,YAAcxD,EACnBgC,GAAK4B,WAAW5c,KAAK6c,wBAGrB7c,KAAK0Y,OAAS1Y,KAAK3D,SAAW2D,KAAK0c,OAAOI,QAC1C9c,KAAK0c,OAAOI,OAAOhgB,OAAOkD,KAAK3D,SAG/B2D,KAAK0c,OAAOK,gBACZ/c,KAAK0c,OAAOK,eAAejgB,OAAOkD,KAAKwD,eAGvC7G,GAAUqD,KAAK0c,OAAOM,eACtBhd,KAAK0c,OAAOM,cAAclgB,OAAOkD,KAAK3D,QAC1C,EAUJ2D,KAAK6c,sBAAwB,IAAM7B,GAAK4B,WAAW5c,KAAKid,eAUxDjd,KAAKid,cAAgB,EAAGjE,gBAChBA,IAAchZ,KAAKwc,cACnBxc,KAAK0Y,KAAO1Y,KAAK3D,QACb2D,KAAK0c,OAAOK,gBACZ/c,KAAK0c,OAAOK,eAAejgB,OAAOkD,KAAKwD,eAE/C,EAEJxD,KAAKkd,aAAc,EACnBld,KAAK0Y,KAAO1Y,KAAK3D,QAAUoD,EAC3BO,KAAKyc,kBAlGIhb,EAkGuBzB,KAAK3D,SAjGjC8gB,MAAMxY,WAAWlD,KAkGrBzB,KAAKod,MAAQ3T,EAAQ2T,KACzB,CAiDAC,SAASC,GACL,OAAOtd,KAAKud,GAAG,SAAUD,EAC7B,CACAC,GAAG5L,EAAW6B,GAIV,OAHKxT,KAAK0c,OAAO/K,KACb3R,KAAK0c,OAAO/K,GAAa,IAAIgK,IAE1B3b,KAAK0c,OAAO/K,GAAW+I,IAAIlH,EACtC,CACAgK,iBACI,IAAK,MAAMC,KAAiBzd,KAAK0c,OAC7B1c,KAAK0c,OAAOe,GAAexB,OAEnC,CAMAyB,OAAOC,GACH3d,KAAK2d,cAAgBA,CACzB,CAgBAjb,IAAIpF,EAAGX,GAAS,GACPA,GAAWqD,KAAK2d,cAIjB3d,KAAK2d,cAAcrgB,EAAG0C,KAAK2c,iBAH3B3c,KAAK2c,gBAAgBrf,EAAGX,EAKhC,CACAihB,gBAAgBlF,EAAMrc,EAAS0c,GAC3B/Y,KAAK0C,IAAIrG,GACT2D,KAAK0Y,KAAOA,EACZ1Y,KAAKuc,UAAYxD,CACrB,CAQAxW,MACI,OAAOvC,KAAK3D,OAChB,CAIAwhB,cACI,OAAO7d,KAAK0Y,IAChB,CAQAlV,cAEI,OAAOxD,KAAKyc,iBAEJP,GAAkBvX,WAAW3E,KAAK3D,SAC9BsI,WAAW3E,KAAK0Y,MAAO1Y,KAAKuc,WAClC,CACV,CAaA7e,MAAMsB,GAEF,OADAgB,KAAK8d,OACE,IAAIC,SAASC,IAChBhe,KAAKkd,aAAc,EACnBld,KAAKie,cAAgBjf,EAAUgf,GAC3Bhe,KAAK0c,OAAOwB,gBACZle,KAAK0c,OAAOwB,eAAephB,QAC/B,IACDqhB,MAAK,KACAne,KAAK0c,OAAO0B,mBACZpe,KAAK0c,OAAO0B,kBAAkBthB,SAElCkD,KAAKqe,gBAAgB,GAE7B,CAMAP,OACQ9d,KAAKie,gBACLje,KAAKie,gBACDje,KAAK0c,OAAO4B,iBACZte,KAAK0c,OAAO4B,gBAAgBxhB,UAGpCkD,KAAKqe,gBACT,CAMAE,cACI,QAASve,KAAKie,aAClB,CACAI,iBACIre,KAAKie,cAAgB,IACzB,CAUAO,UACIxe,KAAKwd,iBACLxd,KAAK8d,MACT,EAEJ,SAASW,GAAYhf,EAAMgK,GACvB,OAAO,IAAI4S,GAAY5c,EAAMgK,EACjC,CCzSA,MAAMiV,GAAgB,CAACva,EAAMwa,IAAcrhB,GAChCW,QAASmH,EAAS9H,IAAM6H,EAAiBpC,KAAKzF,IAAMA,EAAEgG,WAAWa,IACnEwa,GAAY1hB,OAAOC,UAAUC,eAAeC,KAAKE,EAAGqhB,IAEvDC,GAAa,CAACC,EAAOC,EAAOC,IAAWzhB,IACzC,IAAK8H,EAAS9H,GACV,OAAOA,EACX,MAAOyG,EAAGC,EAAG8X,EAAGlX,GAAStH,EAAE0hB,MAAM/Z,GACjC,MAAO,CACH,CAAC4Z,GAAQla,WAAWZ,GACpB,CAAC+a,GAAQna,WAAWX,GACpB,CAAC+a,GAAQpa,WAAWmX,GACpBlX,WAAiBpI,IAAVoI,EAAsBD,WAAWC,GAAS,EACpD,ECbCqa,GAAU,IACTxa,EACHL,UAAY9G,GAAMkH,KAAKQ,MAHN,CAAC1H,GAAM+G,EAAM,EAAG,IAAK/G,GAGT4hB,CAAa5hB,KAExC6hB,GAAO,CACTpc,KAAM2b,GAAc,MAAO,OAC3Bha,MAAOka,GAAW,MAAO,QAAS,QAClCxa,UAAW,EAAGgb,MAAKC,QAAOC,OAAM1a,MAAO2a,EAAU,KAAQ,QACrDN,GAAQ7a,UAAUgb,GAClB,KACAH,GAAQ7a,UAAUib,GAClB,KACAJ,GAAQ7a,UAAUkb,GAClB,KACAva,EAASH,EAAMR,UAAUmb,IACzB,KCYR,MAAMC,GAAM,CACRzc,KAAM2b,GAAc,KACpBha,MAhCJ,SAAkBpH,GACd,IAAImiB,EAAI,GACJC,EAAI,GACJ1b,EAAI,GACJD,EAAI,GAmBR,OAjBIzG,EAAEmI,OAAS,GACXga,EAAIniB,EAAEqiB,UAAU,EAAG,GACnBD,EAAIpiB,EAAEqiB,UAAU,EAAG,GACnB3b,EAAI1G,EAAEqiB,UAAU,EAAG,GACnB5b,EAAIzG,EAAEqiB,UAAU,EAAG,KAInBF,EAAIniB,EAAEqiB,UAAU,EAAG,GACnBD,EAAIpiB,EAAEqiB,UAAU,EAAG,GACnB3b,EAAI1G,EAAEqiB,UAAU,EAAG,GACnB5b,EAAIzG,EAAEqiB,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACL1b,GAAKA,EACLD,GAAKA,GAEF,CACHqb,IAAKQ,SAASH,EAAG,IACjBJ,MAAOO,SAASF,EAAG,IACnBJ,KAAMM,SAAS5b,EAAG,IAClBY,MAAOb,EAAI6b,SAAS7b,EAAG,IAAM,IAAM,EAE3C,EAIIK,UAAW+a,GAAK/a,WC/Bdyb,GAAO,CACT9c,KAAM2b,GAAc,MAAO,OAC3Bha,MAAOka,GAAW,MAAO,aAAc,aACvCxa,UAAW,EAAG0b,MAAKC,aAAYC,YAAWpb,MAAO2a,EAAU,KAC/C,QACJ/a,KAAKQ,MAAM8a,GACX,KACAna,EAAQvB,UAAUW,EAASgb,IAC3B,KACApa,EAAQvB,UAAUW,EAASib,IAC3B,KACAjb,EAASH,EAAMR,UAAUmb,IACzB,KCZNU,GAAQ,CACVld,KAAOzF,GAAM6hB,GAAKpc,KAAKzF,IAAMkiB,GAAIzc,KAAKzF,IAAMuiB,GAAK9c,KAAKzF,GACtDoH,MAAQpH,GACA6hB,GAAKpc,KAAKzF,GACH6hB,GAAKza,MAAMpH,GAEbuiB,GAAK9c,KAAKzF,GACRuiB,GAAKnb,MAAMpH,GAGXkiB,GAAI9a,MAAMpH,GAGzB8G,UAAY9G,GACD8H,EAAS9H,GACVA,EACAA,EAAEH,eAAe,OACbgiB,GAAK/a,UAAU9G,GACfuiB,GAAKzb,UAAU9G,ICnB3B4iB,GAAa,OACbC,GAAc,OASpB,SAASC,GAAoB9iB,GACR,iBAANA,IACPA,EAAI,GAAGA,KACX,MAAMkT,EAAS,GACf,IAAI6P,EAAY,EACZC,EAAa,EACjB,MAAMC,EAASjjB,EAAE0hB,MAAM9Z,GACnBqb,IACAF,EAAYE,EAAO9a,OAGnBnI,EAAIA,EAAEkR,QAAQtJ,EAAYgb,IAC1B1P,EAAOpG,QAAQmW,EAAOC,IAAIP,GAAMvb,SAEpC,MAAM+b,EAAUnjB,EAAE0hB,MAAM/Z,GAMxB,OALIwb,IACAH,EAAaG,EAAQhb,OACrBnI,EAAIA,EAAEkR,QAAQvJ,EAAYkb,IAC1B3P,EAAOpG,QAAQqW,EAAQD,IAAI/b,EAAOC,SAE/B,CAAE8L,SAAQ6P,YAAWC,aAAYI,UAAWpjB,EACvD,CACA,SAASoH,GAAMpH,GACX,OAAO8iB,GAAoB9iB,GAAGkT,MAClC,CACA,SAASmQ,GAAkB5V,GACvB,MAAM,OAAEyF,EAAM,UAAE6P,EAAS,UAAEK,GAAcN,GAAoBrV,GACvD6V,EAAYpQ,EAAO/K,OACzB,OAAQnI,IACJ,IAAIujB,EAASH,EACb,IAAK,IAAI9H,EAAI,EAAGA,EAAIgI,EAAWhI,IAC3BiI,EAASA,EAAOrS,QAAQoK,EAAIyH,EAAYH,GAAaC,GAAavH,EAAIyH,EAChEJ,GAAM7b,UAAU9G,EAAEsb,IAClB7T,EAASzH,EAAEsb,KAErB,OAAOiI,CAAM,CAErB,CACA,MAAMC,GAAwBxjB,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAMyjB,GAAU,CAAEhe,KApDlB,SAAczF,GACV,IAAI2O,EAAI+U,EACR,OAAQ7D,MAAM7f,IACV8H,EAAS9H,MACwB,QAA9B2O,EAAK3O,EAAE0hB,MAAM/Z,UAAgC,IAAPgH,OAAgB,EAASA,EAAGxG,SAAW,KAC3C,QAA9Bub,EAAK1jB,EAAE0hB,MAAM9Z,UAAgC,IAAP8b,OAAgB,EAASA,EAAGvb,SAAW,GAChF,CACZ,EA6CwBf,SAAOic,qBAAmBM,kBALlD,SAA2B3jB,GACvB,MAAM4jB,EAASxc,GAAMpH,GAErB,OADoBqjB,GAAkBrjB,EAC/B6jB,CAAYD,EAAOV,IAAIM,IAClC,GCnDMM,GAAc,IAAIje,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASke,GAAmB/jB,GACxB,MAAOS,EAAM0D,GAASnE,EAAEgkB,MAAM,GAAI,GAAG9b,MAAM,KAC3C,GAAa,gBAATzH,EACA,OAAOT,EACX,MAAOmH,GAAUhD,EAAMud,MAAM/Z,IAAe,GAC5C,IAAKR,EACD,OAAOnH,EACX,MAAMgI,EAAO7D,EAAM+M,QAAQ/J,EAAQ,IACnC,IAAI8c,EAAeH,GAAY3e,IAAI1E,GAAQ,EAAI,EAG/C,OAFI0G,IAAWhD,IACX8f,GAAgB,KACbxjB,EAAO,IAAMwjB,EAAejc,EAAO,GAC9C,CACA,MAAMkc,GAAgB,oBAChBC,GAAS,IACRV,GACHE,kBAAoB3jB,IAChB,MAAMokB,EAAYpkB,EAAE0hB,MAAMwC,IAC1B,OAAOE,EAAYA,EAAUlB,IAAIa,IAAoB3iB,KAAK,KAAOpB,CAAC,GClBpEqkB,GAAoB,IACnB3b,GAEHia,MAAK,GACL2B,gBAAiB3B,GACjB4B,aAAc5B,GACd6B,KAAM7B,GACN8B,OAAQ9B,GAER+B,YAAa/B,GACbgC,eAAgBhC,GAChBiC,iBAAkBjC,GAClBkC,kBAAmBlC,GACnBmC,gBAAiBnC,GACjBwB,OAAM,GACNY,aAAcZ,IAKZa,GAAuBzhB,GAAQ8gB,GAAkB9gB,GCvBvD,SAAS,GAAkBA,EAAKY,GAC5B,IAAIwK,EACJ,IAAIsW,EAAmBD,GAAoBzhB,GAI3C,OAHI0hB,IAAqBd,KACrBc,EAAmBxB,IAE8B,QAA7C9U,EAAKsW,EAAiBtB,yBAAsC,IAAPhV,OAAgB,EAASA,EAAG7O,KAAKmlB,EAAkB9gB,EACpH,CCRA,MAAM+gB,GAAiBllB,GAAO6G,GAASA,EAAKpB,KAAKzF,GCK3CmlB,GAAsB,CAAChe,EAAQmB,GAAID,EAASD,EAASI,GAAID,GCLlD,CACT9C,KAAOzF,GAAY,SAANA,EACboH,MAAQpH,GAAMA,IDOZolB,GAA0BplB,GAAMmlB,GAAoBE,KAAKH,GAAcllB,IEJvEslB,GAAa,IAAIH,GAAqBxC,GAAOc,IAI7C8B,GAAiBvlB,GAAMslB,GAAWD,KAAKH,GAAcllB,ICM3D,SAASwlB,GAAehnB,EAAe0T,EAAYtN,GAC/C,MAAMxG,EAAQI,EAAcsa,WAC5B,OAAO7G,GAAwB7T,EAAO8T,OAAuBhT,IAAX0F,EAAuBA,EAASxG,EAAMwG,OAf5F,SAAoBpG,GAChB,MAAMO,EAAU,CAAC,EAEjB,OADAP,EAAc0U,OAAOM,SAAQ,CAACrP,EAAOZ,IAASxE,EAAQwE,GAAOY,EAAMc,QAC5DlG,CACX,CAWoG0mB,CAAWjnB,GAP/G,SAAqBA,GACjB,MAAMqgB,EAAW,CAAC,EAElB,OADArgB,EAAc0U,OAAOM,SAAQ,CAACrP,EAAOZ,IAASsb,EAAStb,GAAOY,EAAM+B,gBAC7D2Y,CACX,CAG+H3Y,CAAY1H,GAC3I,CCRA,SAASknB,GAAelnB,EAAe+E,EAAKY,GACpC3F,EAAcmnB,SAASpiB,GACvB/E,EAAconB,SAASriB,GAAK6B,IAAIjB,GAGhC3F,EAAcqnB,SAAStiB,EAAK4d,GAAYhd,GAEhD,CACA,SAAS2hB,GAAUtnB,EAAe0T,GAC9B,MAAMuB,EAAW+R,GAAehnB,EAAe0T,GAC/C,IAAI,cAAEwB,EAAgB,CAAC,EAAC,WAAEC,EAAa,CAAC,KAAMnG,GAAWiG,EAAWjV,EAAcunB,qBAAqBtS,GAAU,GAAS,CAAC,EAC3HjG,EAAS,IAAKA,KAAWkG,GACzB,IAAK,MAAMnQ,KAAOiK,EAAQ,CAEtBkY,GAAelnB,EAAe+E,G/CtBAvD,E+CqBawN,EAAOjK,G/CnB/C8O,GAAkBrS,GAAKA,EAAEA,EAAEmI,OAAS,IAAM,EAAInI,G+CqBrD,C/CvBiC,IAACA,C+CwBtC,CAsEA,SAASgmB,GAAwBziB,EAAKoQ,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWpQ,IAAQoQ,EAAoB,SAAKA,GAC7CsS,IAC3B,CCtGA,SAASC,GAAwB/hB,GAC7B,OAAOxD,QAAQsF,EAAc9B,IAAUA,EAAMiZ,IACjD,CCAA,SAAS+I,GAAgClnB,EAAIwB,GACzC,MAAM,uBAAE2lB,GAA2B7L,OAC7B8L,ECNY,EAACpnB,EAAIkF,IAAU,GAAGlF,MAAOkF,IDMvBmiB,CAAcrnB,EAAI2G,EAAeT,IAAI1E,GAAQ,YAAcA,GACzEiB,EAAY0kB,GAA0BA,EAAuBnhB,IAAIohB,GACvE,OAAI3kB,GAQAgc,GAAKre,QAAO,KAIR,IACIqC,EAAU2b,SACV+I,EAAuBpO,OAAOqO,EAEtB,CAAZ,MAAOrS,GAAK,KAETtS,EAAU6kB,aAAe,GAGzB,CAEf,CE7BA,MACMC,GAA+B,QAAUxV,GADjB,kBCI9B,MAAMyV,GAAyBC,GAAsB,IAAVA,ECNrCC,IACO,ECCPC,GAAgBC,GAAYvpB,GAAMA,GAAK,GAAMupB,EAAO,EAAIvpB,GAAK,GAAK,EAAIupB,EAAO,GAAK,EAAIvpB,KAAO,ECA7FwpB,GAAiBD,GAAYvpB,GAAM,EAAIupB,EAAO,EAAIvpB,GCClDypB,GAAUzpB,GAAMA,EAAIA,EACpB0pB,GAAUF,GAAcC,IACxBE,GAAYL,GAAaG,ICgBzBvU,GAAM,CAACyT,EAAMiB,EAAIC,KAAcA,EAAWlB,EAAOkB,EAAWD,EAAKjB,ECpBvE,SAASmB,GAAS9pB,EAAG+pB,EAAGC,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDhqB,EAAc,GAAT+pB,EAAI/pB,GAASgqB,EACzBA,EAAI,GACGD,EACPC,EAAI,EAAI,EACDhqB,GAAK+pB,EAAI/pB,IAAM,EAAI,EAAIgqB,GAAK,EAChChqB,CACX,CCHA,MAAMiqB,GAAiB,CAACtB,EAAMiB,EAAIlnB,KAC9B,MAAMwnB,EAAWvB,EAAOA,EACxB,OAAO/e,KAAKugB,KAAKvgB,KAAKD,IAAI,EAAGjH,GAAKknB,EAAKA,EAAKM,GAAYA,GAAU,EAEhEE,GAAa,CAACxF,GAAKL,GAAMU,IAE/B,SAASoF,GAAOhF,GACZ,MAAM9b,GAFY7G,EAEQ2iB,EAFF+E,GAAWrC,MAAMxe,GAASA,EAAKpB,KAAKzF,MAA3C,IAACA,EAGRW,QAAQkG,GAClB,IAAI+gB,EAAQ/gB,EAAKO,MAAMub,GAKvB,OAJI9b,IAAS0b,KAETqF,EDRR,UAAoB,IAAEpF,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEpb,IAC9Ckb,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,MAAM4E,EAAI3E,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCnlB,EAAI,EAAIolB,EAAY2E,EAC1BvF,EAAMsF,GAAS9pB,EAAG+pB,EAAG7E,EAAM,EAAI,GAC/BT,EAAQqF,GAAS9pB,EAAG+pB,EAAG7E,GACvBR,EAAOoF,GAAS9pB,EAAG+pB,EAAG7E,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAK5a,KAAKQ,MAAY,IAANoa,GAChBC,MAAO7a,KAAKQ,MAAc,IAARqa,GAClBC,KAAM9a,KAAKQ,MAAa,IAAPsa,GACjB1a,QAER,CCjBgBugB,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAAC7B,EAAMiB,KACpB,MAAMa,EAAWJ,GAAO1B,GAClB+B,EAASL,GAAOT,GAChBe,EAAU,IAAKF,GACrB,OAAQ/nB,IACJioB,EAAQnG,IAAMyF,GAAeQ,EAASjG,IAAKkG,EAAOlG,IAAK9hB,GACvDioB,EAAQlG,MAAQwF,GAAeQ,EAAShG,MAAOiG,EAAOjG,MAAO/hB,GAC7DioB,EAAQjG,KAAOuF,GAAeQ,EAAS/F,KAAMgG,EAAOhG,KAAMhiB,GAC1DioB,EAAQ3gB,MAAQkL,GAAIuV,EAASzgB,MAAO0gB,EAAO1gB,MAAOtH,GAC3C6hB,GAAK/a,UAAUmhB,GACzB,EC7BL,SAASC,GAASrZ,EAAQrB,GACtB,MAAsB,iBAAXqB,EACC7O,GAAMwS,GAAI3D,EAAQrB,EAAQxN,GAE7B2iB,GAAMld,KAAKoJ,GACTiZ,GAASjZ,EAAQrB,GAGjB2a,GAAWtZ,EAAQrB,EAElC,CACA,MAAM4a,GAAW,CAACnC,EAAMiB,KACpB,MAAM3D,EAAS,IAAI0C,GACb3C,EAAYC,EAAOpb,OACnBkgB,EAAapC,EAAK/C,KAAI,CAACoF,EAAUhN,IAAM4M,GAASI,EAAUpB,EAAG5L,MACnE,OAAQtb,IACJ,IAAK,IAAIsb,EAAI,EAAGA,EAAIgI,EAAWhI,IAC3BiI,EAAOjI,GAAK+M,EAAW/M,GAAGtb,GAE9B,OAAOujB,CAAM,CAChB,EAECgF,GAAY,CAAC1Z,EAAQrB,KACvB,MAAM+V,EAAS,IAAK1U,KAAWrB,GACzB6a,EAAa,CAAC,EACpB,IAAK,MAAM9kB,KAAOggB,OACMrkB,IAAhB2P,EAAOtL,SAAsCrE,IAAhBsO,EAAOjK,KACpC8kB,EAAW9kB,GAAO2kB,GAASrZ,EAAOtL,GAAMiK,EAAOjK,KAGvD,OAAQvD,IACJ,IAAK,MAAMuD,KAAO8kB,EACd9E,EAAOhgB,GAAO8kB,EAAW9kB,GAAKvD,GAElC,OAAOujB,CAAM,CAChB,EAEC4E,GAAa,CAACtZ,EAAQrB,KACxB,MAAMgb,EAAW/E,GAAQJ,kBAAkB7V,GACrCib,EAAc3F,GAAoBjU,GAClC6Z,EAAc5F,GAAoBtV,GAGxC,OAFuBib,EAAY1F,YAAc2F,EAAY3F,WACzD0F,EAAYzF,YAAc0F,EAAY1F,WAE/BpM,GAAKwR,GAASK,EAAYvV,OAAQwV,EAAYxV,QAASsV,GAItDlrB,GAAM,GAAGA,EAAI,EAAIkQ,EAASqB,GACtC,EC5CEsY,GAAW,CAAClB,EAAMiB,EAAI/iB,KACxB,MAAMwkB,EAAmBzB,EAAKjB,EAC9B,OAA4B,IAArB0C,EAAyB,GAAKxkB,EAAQ8hB,GAAQ0C,CAAgB,ECLnEC,GAAY,CAAC3C,EAAMiB,IAAQ5pB,GAAMkV,GAAIyT,EAAMiB,EAAI5pB,GAqBrD,SAASurB,GAAatF,EAAQuF,EAAMC,GAChC,MAAMC,EAAS,GACTC,EAAeF,IArBJ,iBADO/oB,EAsB+BujB,EAAO,IApBnDqF,GAEW,iBAAN5oB,EACR2iB,GAAMld,KAAKzF,GACJ8nB,GAGAK,GAGNloB,MAAMC,QAAQF,GACZooB,GAEW,iBAANpoB,EACLuoB,GAEJK,IAlBX,IAA4B5oB,EAuBxB,MAAMkpB,EAAY3F,EAAOpb,OAAS,EAClC,IAAK,IAAImT,EAAI,EAAGA,EAAI4N,EAAW5N,IAAK,CAChC,IAAI6N,EAAQF,EAAa1F,EAAOjI,GAAIiI,EAAOjI,EAAI,IAC/C,GAAIwN,EAAM,CACN,MAAMM,EAAiBnpB,MAAMC,QAAQ4oB,GAAQA,EAAKxN,GAAKwN,EACvDK,EAAQvS,GAAKwS,EAAgBD,EACjC,CACAH,EAAOlc,KAAKqc,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO/F,GAAUxc,MAAOwiB,GAAU,EAAI,KAAET,EAAI,MAAEK,GAAU,CAAC,GAC1E,MAAMK,EAAcF,EAAMnhB,OACAob,EAAOpb,QACtB2gB,IAAS7oB,MAAMC,QAAQ4oB,IAASA,EAAK3gB,OAE5CmhB,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnBlG,EAAS,IAAIA,GAAQkG,WAEzB,MAAMT,EAASH,GAAatF,EAAQuF,EAAMK,GACpCD,EAAYF,EAAO7gB,OACnBuhB,EAAgB1pB,IAClB,IAAIsb,EAAI,EACR,GAAI4N,EAAY,EACZ,KAAO5N,EAAIgO,EAAMnhB,OAAS,KAClBnI,EAAIspB,EAAMhO,EAAI,IADOA,KAKjC,MAAMqO,EAAkBxC,GAASmC,EAAMhO,GAAIgO,EAAMhO,EAAI,GAAItb,GACzD,OAAOgpB,EAAO1N,GAAGqO,EAAgB,EAErC,OAAOJ,EACAvpB,GAAM0pB,EAAa3iB,EAAMuiB,EAAM,GAAIA,EAAME,EAAc,GAAIxpB,IAC5D0pB,CACV,CCxFA,MAAME,GAAQC,GAAQA,ECoBhBC,GAAa,CAACxC,EAAGyC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMzC,GAAK,EAAM0C,EAAK,EAAMD,IAAOzC,EAAI,EAAMyC,GACrGzC,EAoBJ,SAAS2C,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOT,GACX,MAAMU,EAAYC,GArBtB,SAAyBnkB,EAAGokB,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACArP,EAAI,EACR,GACIqP,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWZ,GAAWa,EAAUT,EAAKE,GAAOhkB,EACxCskB,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZzjB,KAAK0jB,IAAIF,GAfO,QAgBnBpP,EAfuB,IAgB7B,OAAOqP,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQ9C,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAIwC,GAAWQ,EAAShD,GAAI6C,EAAKE,EACxE,CC7CA,MAAMS,GAAUxtB,GAAM,EAAI4J,KAAK6jB,IAAI7jB,KAAK8jB,KAAK1tB,IACvC2tB,GAAUnE,GAAcgE,IACxBI,GAAYtE,GAAaqE,ICDzBE,GAAUlB,GAAY,IAAM,KAAM,IAAM,KACxCmB,GAAStE,GAAcqE,IACvBE,GAAYzE,GAAawE,ICEzBE,GAAe,CACjBC,OAAQ3B,GACR7C,OAAM,GACNE,UAAS,GACTD,QAAO,GACP8D,OAAM,GACNI,UAAS,GACTD,QAAO,GACPG,OAAM,GACNC,UAAS,GACTF,QAAO,GACPK,WCjBgBluB,IAAOA,GAAK,GAAK,EAAI,GAAM8tB,GAAO9tB,GAAK,IAAO,EAAI4J,KAAKukB,IAAI,GAAI,IAAMnuB,EAAI,MDmBvFouB,GAA8BxZ,IAChC,GAAIjS,MAAMC,QAAQgS,GAAa,CAEjBA,EAAW/J,OACrB,MAAOwjB,EAAIC,EAAIC,EAAIC,GAAM5Z,EACzB,OAAO+X,GAAY0B,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,iBAAf5Z,EAGLoZ,GAAapZ,GAEjBA,CAAU,EEnBrB,SAAS6Z,IAAYA,UAAWC,EAAc,KAAElD,EAAO7B,GAAS,MAAEgF,EAAK,SAAEC,EAAW,MAChFF,EAAiB,IAAIA,GACrB,MAAMnd,EAASkd,GAAU,GAKnBI,EFcY,CAACrD,GACZ7oB,MAAMC,QAAQ4oB,IAA4B,iBAAZA,EAAK,GEflBsD,CAActD,GAChCA,EAAK5F,IAAIwI,IACTA,GAA2B5C,GAK3B7c,EAAQ,CAAEogB,MAAM,EAAOloB,MAAO0K,GAI9Byd,EArBV,SAA8Bxd,EAAQod,GAClC,OAAOpd,EAAOoU,KAAKqJ,GAAMA,EAAIL,GACjC,CAmB0BM,CAGtBP,GAASA,EAAM9jB,SAAW4jB,GAAU5jB,OAC9B8jB,EA7BV,SAAuB/Y,GACnB,MAAMoQ,EAAYpQ,EAAO/K,OACzB,OAAO+K,EAAOgQ,KAAI,CAACuJ,EAAQnR,IAAY,IAANA,EAAUA,GAAKgI,EAAY,GAAK,GACrE,CA2BUoJ,CAAcV,GAAiBE,GACrC,SAASS,IACL,OAAOtD,GAAYiD,EAAeN,EAAgB,CAC9ClD,KAAM7oB,MAAMC,QAAQisB,GACdA,GArCKjZ,EAsCS8Y,EAtCDnF,EAsCiBsF,EArCrCjZ,EAAOgQ,KAAI,IAAM2D,GAAUI,KAAW1J,OAAO,EAAGrK,EAAO/K,OAAS,MAD3E,IAAuB+K,EAAQ2T,CAwC3B,CACA,IAAI6C,EAAeiD,IACnB,MAAO,CACHxR,KAAOmM,IACHrb,EAAM9H,MAAQulB,EAAapC,GAC3Brb,EAAMogB,KAAO/E,GAAK4E,EACXjgB,GAEX2gB,WAAY,KACRZ,EAAevC,UACfC,EAAeiD,GAAoB,EAG/C,CCtDA,MAAME,GAAU,KAKhB,SAASC,IAAW,SAAEZ,EAAW,IAAG,OAAEa,EAAS,IAAI,SAAElO,EAAW,EAAC,KAAEmO,EAAO,IACtE,IAAIC,EACAC,EAEAC,EAAe,EAAIJ,EAIvBI,EAAepmB,EAVA,IACA,EAS8BomB,GAC7CjB,EAAWnlB,EAbK,IACA,GAY2BmlB,EAAW,KAClDiB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClC1R,EAAQ4R,EAAmBnB,EAC3BzlB,EAAI4mB,EAAmBxO,EACvBnY,EAAI4mB,GAAgBF,EAAcD,GAClC3O,EAAItX,KAAKqmB,KAAK9R,GACpB,OAAOoR,GAAWpmB,EAAIC,EAAK8X,CAAC,EAEhC0O,EAAcE,IACV,MACM3R,EADmB2R,EAAeD,EACPjB,EAC3BsB,EAAI/R,EAAQoD,EAAWA,EACvB7K,EAAI9M,KAAKukB,IAAI0B,EAAc,GAAKjmB,KAAKukB,IAAI2B,EAAc,GAAKlB,EAC5DuB,EAAIvmB,KAAKqmB,KAAK9R,GACd2G,EAAIkL,GAAgBpmB,KAAKukB,IAAI2B,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBP,GAAU,GAAK,EAAI,KACzCW,EAAIxZ,GAAKyZ,GAAMrL,CAAC,IAOvC6K,EAAYG,GACElmB,KAAKqmB,KAAKH,EAAelB,KACxBkB,EAAevO,GAAYqN,EAAW,GAC1C,KAEXgB,EAAcE,GACAlmB,KAAKqmB,KAAKH,EAAelB,IACIA,EAAWA,GAAvCrN,EAAWuO,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYQ,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIpS,EAAI,EAAGA,EAHG,GAGiBA,IAChCqS,GAAkBV,EAASU,GAAUT,EAAWS,GAEpD,OAAOA,CACX,CAzByBC,CAAgBX,EAAUC,EAD1B,EAAIhB,GAGzB,GADAA,GAAsB,IAClBrM,MAAMuN,GACN,MAAO,CACHS,UAAW,IACXC,QAAS,GACT5B,YAGH,CACD,MAAM2B,EAAY3mB,KAAKukB,IAAI2B,EAAc,GAAKJ,EAC9C,MAAO,CACHa,YACAC,QAAwB,EAAfX,EAAmBjmB,KAAKugB,KAAKuF,EAAOa,GAC7C3B,WAER,CACJ,CASA,SAASoB,GAAgBF,EAAcD,GACnC,OAAOC,EAAelmB,KAAKugB,KAAK,EAAI0F,EAAeA,EACvD,CClFA,MAAMY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa9hB,EAAS6D,GAC3B,OAAOA,EAAKxP,MAAM+C,QAAyBrE,IAAjBiN,EAAQ5I,IACtC,CA4BA,SAAS2qB,IAAO,UAAEnC,EAAS,UAAEoC,EAAY,EAAC,UAAEC,EAAY,OAASjiB,IAC7D,IAAI0C,EAASkd,EAAU,GACnBve,EAASue,EAAUA,EAAU5jB,OAAS,GAK1C,MAAM8D,EAAQ,CAAEogB,MAAM,EAAOloB,MAAO0K,IAC9B,UAAEgf,EAAS,QAAEC,EAAO,KAAEd,EAAI,SAAEnO,EAAQ,SAAEqN,EAAQ,uBAAEmC,GAnC1D,SAA0BliB,GACtB,IAAImiB,EAAgB,CAChBzP,SAAU,EACVgP,UAAW,IACXC,QAAS,GACTd,KAAM,EACNqB,wBAAwB,KACrBliB,GAGP,IAAK8hB,GAAa9hB,EAAS6hB,KACvBC,GAAa9hB,EAAS4hB,IAAe,CACrC,MAAMQ,EAAUzB,GAAW3gB,GAC3BmiB,EAAgB,IACTA,KACAC,EACH1P,SAAU,EACVmO,KAAM,GAEVsB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CAasFE,CAAiBriB,GACnG,IAAIsiB,EAAgBC,GAChBC,EAAkB9P,GAAaA,EAAW,IAAQ,EACtD,MAAMsO,EAAeW,GAAW,EAAI5mB,KAAKugB,KAAKoG,EAAYb,IAC1D,SAAS4B,IACL,MAAMC,EAAerhB,EAASqB,EACxBigB,EAAsB5nB,KAAKugB,KAAKoG,EAAYb,GAAQ,IAQ1D,QAHkB9tB,IAAdkvB,IACAA,EAAYlnB,KAAKF,IAAIE,KAAK0jB,IAAIpd,EAASqB,GAAU,IAAK,KAEtDse,EAAe,EAAG,CAClB,MAAM4B,EAAczB,GAAgBwB,EAAqB3B,GAEzDsB,EAAiBnH,IACb,MAAM2F,EAAW/lB,KAAKqmB,KAAKJ,EAAe2B,EAAsBxH,GAChE,OAAQ9Z,EACJyf,IACO0B,EACCxB,EAAe2B,EAAsBD,GACrCE,EACA7nB,KAAK6jB,IAAIgE,EAAczH,GACvBuH,EAAe3nB,KAAK8nB,IAAID,EAAczH,GAAI,CAE9D,MACK,GAAqB,IAAjB6F,EAELsB,EAAiBnH,GAAM9Z,EACnBtG,KAAKqmB,KAAKuB,EAAsBxH,IAC3BuH,GACIF,EAAkBG,EAAsBD,GACrCvH,OAEf,CAED,MAAM2H,EAAoBH,EAAsB5nB,KAAKugB,KAAK0F,EAAeA,EAAe,GACxFsB,EAAiBnH,IACb,MAAM2F,EAAW/lB,KAAKqmB,KAAKJ,EAAe2B,EAAsBxH,GAE1D4H,EAAWhoB,KAAKF,IAAIioB,EAAoB3H,EAAG,KACjD,OAAQ9Z,EACHyf,IACK0B,EACExB,EAAe2B,EAAsBD,GACrC3nB,KAAKioB,KAAKD,GACVD,EACIJ,EACA3nB,KAAKkoB,KAAKF,IAClBD,CAAkB,CAElC,CACJ,CAEA,OADAL,IACO,CACHzT,KAAOmM,IACH,MAAMvoB,EAAU0vB,EAAcnH,GAC9B,GAAK+G,EAsBDpiB,EAAMogB,KAAO/E,GAAK4E,MAtBO,CACzB,IAAI9Z,EAAkBuc,EACtB,GAAU,IAANrH,EAMA,GAAI6F,EAAe,EAAG,CAClB,MAAMkC,EAAQnoB,KAAKD,IAAI,EAAGqgB,EAhFnB,GAiFPlV,EAAkBwM,GAAkB7f,EAAU0vB,EAAcY,GAAQ/H,EAAI+H,EAC5E,MAEIjd,EAAkB,EAG1B,MAAMkd,EAA2BpoB,KAAK0jB,IAAIxY,IAAoB+b,EACxDoB,EAA+BroB,KAAK0jB,IAAIpd,EAASzO,IAAYqvB,EACnEniB,EAAMogB,KACFiD,GAA4BC,CACpC,CAKA,OADAtjB,EAAM9H,MAAQ8H,EAAMogB,KAAO7e,EAASzO,EAC7BkN,CAAK,EAEhB2gB,WAAY,KACR+B,GAAmBA,GAClB9f,EAAQrB,GAAU,CAACA,EAAQqB,GAC5B+f,GAAc,EAG1B,CACAV,GAAOsB,mBAAqB,CAAC/oB,EAAGC,IAAmB,iBAAND,GAA+B,iBAANC,EACtE,MAAMgoB,GAAQe,GAAO,ECnIrB,MAAMC,GAAQ,CACVC,MCPJ,UAAe,UAMf5D,EAAY,CAAC,GAAE,SAAElN,EAAW,EAAC,MAAE+Q,EAAQ,GAAG,aAAEC,EAAe,IAAG,UAAEzB,EAAY,GAAG,aAAE0B,IAC7E,MAAMjhB,EAASkd,EAAU,GAKnB9f,EAAQ,CAAEogB,MAAM,EAAOloB,MAAO0K,GACpC,IAAIkhB,EAAYH,EAAQ/Q,EACxB,MAAMmR,EAAQnhB,EAASkhB,EACjBviB,OAA0BtO,IAAjB4wB,EAA6BE,EAAQF,EAAaE,GAOjE,OAFIxiB,IAAWwiB,IACXD,EAAYviB,EAASqB,GAClB,CACHsM,KAAOmM,IACH,MAAM7L,GAASsU,EAAY7oB,KAAKqmB,KAAKjG,EAAIuI,GAGzC,OAFA5jB,EAAMogB,OAAS5Q,EAAQ2S,GAAa3S,GAAS2S,GAC7CniB,EAAM9H,MAAQ8H,EAAMogB,KAAO7e,EAASA,EAASiO,EACtCxP,CAAK,EAEhB2gB,WAAY,OAEpB,EDvBIb,UAAWA,GACXkE,MAAOlE,GACPmC,OAAM,IAEV,SAASgC,GAAYC,EAASjE,EAAUkE,EAAQ,GAC5C,OAAOD,EAAUjE,EAAWkE,CAChC,CASA,MAAMC,GAAaC,IACf,MAAMC,EAAgB,EAAG9U,WAAY6U,EAAO7U,GAC5C,MAAO,CACHrb,MAAO,IAAMsd,GAAK4S,OAAOC,GAAe,GACxC/P,KAAM,IAAM5C,GAAW0S,OAAOC,GACjC,EAEL,SAAShwB,IAAQ,SAAE2rB,EAAQ,OAAEsE,EAASH,GAAS,QAAEF,EAAU,EAAGM,OAAQC,EAAY,EAAC,WAAEC,EAAa,OAAM,YAAEC,EAAc,EAAC,UAAE7E,EAAS,SAAE8E,GAAW,EAAI,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,EAAQ,SAAEC,EAAQ,KAAErqB,EAAO,eAAgBsF,IAC1N,IAAIwC,EAAI+U,EACR,IAAIyN,EAGA3hB,EAGA4hB,EALAC,EAAc,EACdC,EAAmBpF,EAEnBqF,GAAa,EACbC,GAAoB,EAExB,MAAMC,EAAW/B,GAAM3D,EAAU5jB,OAAS,EAAI,YAActB,GACtDgI,EAASkd,EAAU,GACnBve,EAASue,EAAUA,EAAU5jB,OAAS,IACM,QAA7Cub,GAAM/U,EAAK8iB,GAAUjC,0BAAuC,IAAP9L,OAAgB,EAASA,EAAG5jB,KAAK6O,EAAIE,EAAQrB,MACnG4jB,EAAwB/H,GAAY,CAAC,EAAG,KAAM,CAACxa,EAAQrB,GAAS,CAC5DzG,OAAO,IAEXglB,EAAY,CAAC,EAAG,MAEpB,MAAMrqB,EAAY+vB,EAAS,IACpBtlB,EACH+f,WACAH,cAEJ,SAAS0E,IACLY,IACmB,YAAfV,GACAa,EAAoBH,EAAc,GAAM,EACxClB,EA1CZ,SAAwBA,EAASjE,EAAW,EAAGkE,EAAQ,EAAGoB,GAAoB,GAC1E,OAAOA,EACDtB,GAAYhE,GAAYiE,EAASjE,EAAUkE,GAC3ClE,GAAYiE,EAAUjE,GAAYkE,CAC5C,CAsCsBsB,CAAevB,EAASmB,EAAkBV,EAAaY,KAGjErB,EAAUD,GAAYC,EAASmB,EAAkBV,GAC9B,WAAfD,GACAjvB,EAAUkrB,cAElB2E,GAAa,EACbN,GAAYA,GAChB,CAKA,SAASX,EAAO7U,GAIZ,GAHK+V,IACD/V,GAASA,GACb0U,GAAW1U,GACN8V,EAAY,CACb,MAAMtlB,EAAQvK,EAAUyZ,KAAKjU,KAAKD,IAAI,EAAGkpB,IACzC3gB,EAASvD,EAAM9H,MACXitB,IACA5hB,EAAS4hB,EAAsB5hB,IACnC+hB,EAAaC,EAAoBvlB,EAAMogB,KAAO8D,GAAW,CAC7D,CACAe,GAAYA,EAAS1hB,GACjB+hB,IACoB,IAAhBF,IACAC,OACyBpyB,IAArBoyB,EAAiCA,EAAmBnB,GAExDkB,EAAcX,EApE9B,SAA+BP,EAASjE,EAAUkE,EAAOoB,GACrD,OAAOA,EAAoBrB,GAAWjE,EAAWkE,EAAQD,IAAYC,CACzE,CAmEgBuB,CAAsBxB,EAASmB,EAAkBV,EAAaY,IAAsBf,KArB5FU,EAAe3Q,OACfwQ,GAAcA,KA0BlB,CAOA,OADAH,IAJIC,GAAUA,IACVK,EAAiBX,EAAOF,GACxBa,EAAe/wB,SAGZ,CACHogB,KAAM,KACFuQ,GAAUA,IACVI,EAAe3Q,MAAM,EAEzBoR,OAAStK,GACE5lB,EAAUyZ,KAAKjU,KAAKD,IAAI,EAAGqgB,IAG9C,CE1GA,MAAMuK,GAAsB,EAAEprB,EAAGC,EAAG8X,EAAGgP,KAAO,gBAAgB/mB,MAAMC,MAAM8X,MAAMgP,KAC1EsE,GAAuB,CACzBvG,OAAQ,SACRzC,KAAM,OACN/B,OAAQ,UACRC,QAAS,WACTC,UAAW,cACX6D,OAAQ+G,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5C5G,QAAS4G,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CzG,OAAQyG,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChD1G,QAAS0G,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASE,GAAwBlL,GAC7B,GAAKA,EAEL,OAAO5mB,MAAMC,QAAQ2mB,GACfgL,GAAoBhL,GACpBiL,GAAqBjL,EAC/B,CCZA,SAASmL,GAA2B7tB,EAAO8tB,GAAW,SAAEf,EAAQ,WAAEF,KAAe7kB,IAC7E,IAAI,UAAE4f,EAAS,SAAEG,EAAW,IAAG,QAAEiE,EAAU,EAAC,KAAErH,GAAS3c,EAIvD,GAAqB,WAAjBA,EAAQtF,UDhBgBggB,ECgB6B1a,EAAQ2c,ODd7D7oB,MAAMC,QAAQ2mB,IACK,iBAAXA,GAAuBiL,GAAqBjL,ICagB,CACpE,MAAMqL,EAAkB3xB,GAAQ4L,GAChC,IAAIF,EAAQ,CAAEogB,MAAM,EAAOloB,MAAO4nB,EAAU,IAC5C,MAAMoG,EAAwB,GAC9B,IAAI7K,EAAI,EACR,MAAQrb,EAAMogB,MACVpgB,EAAQimB,EAAgBN,OAAOtK,GAC/B6K,EAAsBrlB,KAAKb,EAAM9H,OACjCmjB,GAdQ,GAgBZyE,EAAYoG,EACZjG,EAAW5E,EAjBC,GAkBZwB,EAAO,QACX,CD7BJ,IAAgCjC,EC8B5B,MAAMnlB,EC5BV,SAAsB0P,EAAS6gB,EAAWlG,GAAW,MAAEqE,EAAQ,EAAC,SAAElE,EAAQ,OAAEuE,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAE7H,EAAI,MAAEmD,GAAW,CAAC,GAC3H,OAAO7a,EAAQ7Q,QAAQ,CAAE,CAAC0xB,GAAYlG,EAAWjd,OAAQmd,GAAS,CAC9DmE,QACAlE,WACArF,OAAQkL,GAAwBjJ,GAChCtE,KAAM,OACN4N,WAAY3B,EAAS,EACrB4B,UAA0B,YAAf1B,EAA2B,YAAc,UAE5D,CDmBsB2B,CAAanuB,EAAM2b,MAAM/gB,QAASkzB,EAAWlG,EAAW,IACnE5f,EACHikB,OAAQD,EACRjE,WASApD,KAAMA,IAiBV,OAPApnB,EAAU6wB,SAAW,KACjBpuB,EAAMiB,IAAI2mB,EAAUA,EAAU5jB,OAAS,IACvC6oB,GAAcA,GAAY,EAKvB,KASH,MAAM,YAAEzK,GAAgB7kB,EACxB,GAAI6kB,EAAa,CACb,MAAM2L,EAAkB3xB,GAAQ4L,GAChChI,EAAMmc,gBAAgB4R,EAAgBN,OAAOrL,EA7DrC,IA6DgEpiB,MAAO+tB,EAAgBN,OAAOrL,GAAapiB,MA7D3G,GA8DZ,CACAuZ,GAAK4S,QAAO,IAAM5uB,EAAU2b,UAAS,CAE7C,CEtEA,SAAS+S,GAAMla,EAAUsc,GACrB,MAAMpyB,EAAQyb,YAAYC,MACpB2W,EAAe,EAAG/W,gBACpB,MAAMyU,EAAUzU,EAAYtb,EACxB+vB,GAAWqC,IACX5U,GAAW8U,KAAKD,GAChBvc,EAASia,EAAUqC,GACvB,EAGJ,OADA9U,GAAKgV,KAAKD,GAAc,GACjB,IAAM7U,GAAW8U,KAAKD,EACjC,CCdA,SAASE,IAAuB,UAAE5G,EAAS,QAAEoE,EAAO,SAAEe,EAAQ,WAAEF,IAC5D,MAAM4B,EAAW,KACb1B,GAAYA,EAASnF,EAAUA,EAAU5jB,OAAS,IAClD6oB,GAAcA,IACP,QAEX,OAAOb,EAAUC,GAAMwC,GAAWzC,GAAWyC,GACjD,CCTA,MAAMC,GAAoB,KAAM,CAC5BhsB,KAAM,SACNgnB,UAAW,IACXC,QAAS,GACTK,UAAW,KAET2E,GAA0BtlB,IAAW,CACvC3G,KAAM,SACNgnB,UAAW,IACXC,QAAoB,IAAXtgB,EAAe,EAAItG,KAAKugB,KAAK,KAAO,GAC7C0G,UAAW,KAET4E,GAAc,KAAM,CACtBlsB,KAAM,YACNiiB,KAAM,SACNoD,SAAU,KAER8G,GAAsB,CACxBnsB,KAAM,YACNqlB,SAAU,IAER+G,GAAqB,CACvB7sB,EAAGysB,GACHxsB,EAAGwsB,GACHvsB,EAAGusB,GACHpoB,OAAQooB,GACRnoB,QAASmoB,GACTloB,QAASkoB,GACTjoB,QAASioB,GACThoB,OAAQioB,GACRhoB,OAAQgoB,GACRvrB,MAAOurB,GACPtnB,QAASunB,GACTzO,gBAAiByO,GACjBpQ,MAAOoQ,GACPvrB,QAASsrB,IAEPI,GAAuB,CAACC,GAAYpH,gBACtC,GAAIA,EAAU5jB,OAAS,EACnB,OAAO6qB,GAIP,OADgBC,GAAmBE,IAAaF,GAAmBzrB,SACpDukB,EAAU,GAC7B,ECjCEqH,GAAe,CAAC7vB,EAAKY,IAEX,WAARZ,MAKiB,iBAAVY,IAAsBlE,MAAMC,QAAQiE,OAE1B,iBAAVA,IACPsf,GAAQhe,KAAKtB,IACZA,EAAM6B,WAAW,UCZ1B,SAASqtB,GAAOlvB,GACZ,OAAkB,IAAVA,GACc,iBAAVA,GACkB,IAAtBkD,WAAWlD,KACa,IAAxBA,EAAMqB,QAAQ,IAC1B,CACA,SAAS8tB,GAAYC,GACjB,MAAoC,iBAAtBA,EACR,EACA,GAAkB,GAAIA,EAChC,CACA,SAASC,GAAmB7f,EAAYpQ,GACpC,OAAOoQ,EAAWpQ,IAAQoQ,EAAoB,SAAKA,CACvD,CCvBA,MAAM8f,GAAe,CACjBC,MAAO,IAAM/zB,OAAOE,eAAeC,KAAK6zB,QAAQ/zB,UAAW,YAEzDg0B,GAAU,CAAC,EACXC,GAAW,CAAC,EAIlB,IAAK,MAAMtwB,MAAOkwB,GACdI,GAAStwB,IAAO,UACSrE,IAAjB00B,GAAQrwB,MACRqwB,GAAQrwB,IAAOkwB,GAAalwB,OACzBqwB,GAAQrwB,KCIvB,MAAMuwB,GAAoB,IAAIjuB,IAAI,CAAC,YAC7BkuB,GAA6B,CAAC9B,EAAW9tB,EAAOqJ,EAAQmG,EAAa,CAAC,IAChEqd,IACJ,MAAMgD,EAAkBR,GAAmB7f,EAAYse,IAAc,CAAC,EAMhE7B,EAAQ4D,EAAgB5D,OAASzc,EAAWyc,OAAS,EAK3D,IAAI,QAAED,EAAU,GAAMxc,EACtBwc,GAAoB1J,GAAsB2J,GAC1C,MAAMrE,EC5Bd,SAAsB5nB,EAAO8tB,EAAWzkB,EAAQmG,GAC5C,MAAMsgB,EAAqBb,GAAanB,EAAWzkB,GACnD,IAAIqB,OAA6B3P,IAApByU,EAAWsS,KAAqBtS,EAAWsS,KAAO9hB,EAAMc,MAmBrE,MAlBe,SAAX4J,GAAqBolB,GAAwC,iBAAXzmB,EAKlDqB,EAAS,GAAkBojB,EAAWzkB,GAEjC6lB,GAAOxkB,IAA6B,iBAAXrB,EAC9BqB,EAASykB,GAAY9lB,IAEfvN,MAAMC,QAAQsN,IACpB6lB,GAAO7lB,IACW,iBAAXqB,IACPrB,EAAS8lB,GAAYzkB,IAKrB5O,MAAMC,QAAQsN,IAKI,OAAdA,EAAO,KACPA,EAAO,GAAKqB,GAETrB,GAGA,CAACqB,EAAQrB,EAExB,CDN0B0mB,CAAa/vB,EAAO8tB,EAAWzkB,EAAQwmB,GAMnDG,EAAiBpI,EAAU,GAC3BqI,EAAiBrI,EAAUA,EAAU5jB,OAAS,GAC9CksB,EAAqBjB,GAAanB,EAAWkC,GAC7CF,EAAqBb,GAAanB,EAAWmC,GAEnD,IAAIjoB,EAAU,CACV4f,YACAlN,SAAU1a,EAAM+B,iBACb8tB,EACH7D,UACAe,SAAWlxB,IACPmE,EAAMiB,IAAIpF,GACVg0B,EAAgB9C,UAAY8C,EAAgB9C,SAASlxB,EAAE,EAE3DgxB,WAAY,KACRA,IACAgD,EAAgBhD,YAAcgD,EAAgBhD,YAAY,GAGlE,IAAKqD,IACAJ,GACDtN,KACyB,IAAzBqN,EAAgBntB,KAKhB,OAAO8rB,GAAuBxmB,GAE7B,GAA6B,YAAzB6nB,EAAgBntB,KAAoB,CAKzC,MAAMnF,EEpElB,UAAiB,UAAEqqB,EAAS,SAAElN,EAAW,EAAC,IAAE7X,EAAG,IAAEC,EAAG,MAAE2oB,EAAQ,GAAG,aAAEC,EAAe,IAAG,gBAAEyE,EAAkB,IAAG,cAAEC,EAAgB,GAAE,UAAEnG,EAAY,EAAC,aAAE0B,EAAY,OAAEU,EAAM,SAAEU,EAAQ,WAAEF,EAAU,OAAED,IACzL,MAAMliB,EAASkd,EAAU,GACzB,IAAIyI,EACJ,SAASC,EAAcz0B,GACnB,YAAgBd,IAAR8H,GAAqBhH,EAAIgH,QAAiB9H,IAAR+H,GAAqBjH,EAAIiH,CACvE,CACA,SAASytB,EAAoB10B,GACzB,YAAYd,IAAR8H,EACOC,OACC/H,IAAR+H,GAEGC,KAAK0jB,IAAI5jB,EAAMhH,GAAKkH,KAAK0jB,IAAI3jB,EAAMjH,GAD/BgH,EAC0CC,CACzD,CACA,SAAS0tB,EAAexoB,GACpBqoB,SAAoEA,EAAiBhU,OACrFgU,EAAmBj0B,GAAQ,CACvBwrB,UAAW,CAAC,EAAG,GACflN,SAAU,KACP1S,EACHqkB,SACAU,SAAWlxB,IACP,IAAI2O,EACJuiB,SAAoDA,EAASlxB,GACjC,QAA3B2O,EAAKxC,EAAQ+kB,gBAA6B,IAAPviB,GAAyBA,EAAG7O,KAAKqM,EAASnM,EAAE,EAEpFgxB,aACAD,UAER,CACA,SAAS6D,EAAYzoB,GACjBwoB,EAAe,CACX9tB,KAAM,SACNgnB,UAAWyG,EACXxG,QAASyG,EACTnG,eACGjiB,GAEX,CACA,GAAIsoB,EAAc5lB,GAEd+lB,EAAY,CACR/V,WACAkN,UAAW,CAACld,EAAQ6lB,EAAoB7lB,UAG3C,CASD,IAAIrB,EAASoiB,EAAQ/Q,EAAWhQ,OACJ,IAAjBihB,IACPtiB,EAASsiB,EAAatiB,IAC1B,MAAMqnB,EAAWH,EAAoBlnB,GAC/BsnB,EAAUD,IAAa7tB,GAAO,EAAI,EACxC,IAAIoU,EACArc,EACJ,MAAMg2B,EAAiB/0B,IACnBob,EAAOrc,EACPA,EAAUiB,EACV6e,EAAWD,GAAkB5e,EAAIob,EAAMI,GAAUC,QAChC,IAAZqZ,GAAiB90B,EAAI60B,IACR,IAAbC,GAAkB90B,EAAI60B,IACvBD,EAAY,CAAE7I,UAAW,CAAC/rB,EAAG60B,GAAWhW,YAC5C,EAEJ8V,EAAe,CACX9tB,KAAM,QACNklB,UAAW,CAACld,EAAQ,GACpBgQ,WACAgR,eACAD,QACAxB,YACA0B,eACAoB,SAAUuD,EAAcjnB,GAAUunB,OAAgB71B,GAE1D,CACA,MAAO,CACHshB,KAAM,IAAMgU,aAA2D,EAASA,EAAiBhU,OAEzG,CFhB8BwU,CAAQ7oB,GAC1B,MAAO,IAAMzK,EAAU8e,MAC3B,EFnER,UAA6B,KAAEyU,EAAM7E,MAAO8E,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE5E,EAAM,WAAEE,EAAU,YAAEC,EAAW,KAAE3K,EAAI,QAAEkK,KAAYxc,IACrJ,QAAShU,OAAOqQ,KAAK2D,GAAYxL,MACrC,EEsEamtB,CAAoBtB,KACrB7nB,EAAU,IACHA,KACA+mB,GAAqBjB,EAAW9lB,KAQvCA,EAAQ+f,WACR/f,EAAQ+f,SAAWzF,GAAsBta,EAAQ+f,WAEjD/f,EAAQykB,cACRzkB,EAAQykB,YAAcnK,GAAsBta,EAAQykB,cAExD,MAAMpyB,EAAgB2F,EAAM2b,MACtB1O,EAAU5S,GAAiBA,EAAcO,QAS/C,GAR+B80B,GAASH,SACpCI,GAAkB3uB,IAAI8sB,KACrB9lB,EAAQykB,aACc,WAAvBzkB,EAAQwkB,YACY,IAApBxkB,EAAQ2hB,SACRtvB,GACA4S,aAAmBmkB,cAClB/2B,EAAcsa,WAAWoY,SAK1B,OAAOc,GAA2B7tB,EAAO8tB,EAAW9lB,GAEnD,CAID,MAAMzK,EAAYnB,GAAQ4L,GAC1B,MAAO,IAAMzK,EAAU8e,MAC3B,GG5FR,SAASgV,GAAeh3B,EAAei3B,EAAStpB,EAAU,CAAC,GACvD,IAAIwC,EACJ,MAAM8E,EAAW+R,GAAehnB,EAAei3B,EAAStpB,EAAQvH,QAChE,IAAI,WAAE+O,EAAanV,EAAc00B,wBAA0B,CAAC,GAAMzf,GAAY,CAAC,EAC3EtH,EAAQupB,qBACR/hB,EAAaxH,EAAQupB,oBAMzB,MAAMC,EAAeliB,EACf,IAAMmiB,GAAcp3B,EAAeiV,EAAUtH,GAC7C,IAAMsU,QAAQC,UAKdmV,GAA+D,QAAxClnB,EAAKnQ,EAAcs3B,uBAAoC,IAAPnnB,OAAgB,EAASA,EAAGjF,MACnG,CAACqsB,EAAe,KACd,MAAM,cAAEZ,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsB1hB,EAClE,OAsEZ,SAAyBnV,EAAei3B,EAASN,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAGlpB,GAC3G,MAAM6pB,EAAa,GACbC,GAAsBz3B,EAAcs3B,gBAAgBpsB,KAAO,GAAK0rB,EAChEc,EAA+C,IAArBb,EAC1B,CAAC/Z,EAAI,IAAMA,EAAI8Z,EACf,CAAC9Z,EAAI,IAAM2a,EAAqB3a,EAAI8Z,EAS1C,OARAn1B,MAAMgmB,KAAKznB,EAAcs3B,iBACpB3oB,KAAKgpB,IACL3iB,SAAQ,CAACgD,EAAO8E,KACjB0a,EAAWlpB,KAAK0oB,GAAehf,EAAOif,EAAS,IACxCtpB,EACHikB,MAAO+E,EAAgBe,EAAwB5a,KAChDuF,MAAK,IAAMrK,EAAMhX,OAAO,oBAAqBi2B,KAAU,IAEvDhV,QAAQtI,IAAI6d,EACvB,CArFmBI,CAAgB53B,EAAei3B,EAASN,EAAgBY,EAAcX,EAAiBC,EAAkBlpB,EAAQ,EAE1H,IAAMsU,QAAQC,WAKd,KAAEuU,GAASthB,EACjB,GAAIshB,EAAM,CACN,MAAOoB,EAAOC,GAAiB,mBAATrB,EAChB,CAACU,EAAcE,GACf,CAACA,EAAoBF,GAC3B,OAAOU,IAAQxV,KAAKyV,EACxB,CAEI,OAAO7V,QAAQtI,IAAI,CAACwd,IAAgBE,EAAmB1pB,EAAQikB,QAEvE,CAIA,SAASwF,GAAcp3B,EAAe0T,GAAY,MAAEke,EAAQ,EAAC,mBAAEsF,EAAkB,KAAE7uB,GAAS,CAAC,GACzF,IAAI8H,EACJ,IAAI,WAAEgF,EAAanV,EAAc00B,uBAAsB,cAAExf,KAAkBlG,GAAWhP,EAAcunB,qBAAqB7T,GACzH,MAAMqkB,EAAa/3B,EAAconB,SAAS,cACtC8P,IACA/hB,EAAa+hB,GACjB,MAAMM,EAAa,GACbQ,EAAqB3vB,IAAiD,QAAvC8H,EAAKnQ,EAAcc,sBAAmC,IAAPqP,OAAgB,EAASA,EAAG8nB,WAAW5vB,IAC3H,IAAK,MAAMtD,KAAOiK,EAAQ,CACtB,MAAMrJ,EAAQ3F,EAAconB,SAASriB,GAC/BqQ,EAAcpG,EAAOjK,GAC3B,IAAKY,QACejF,IAAhB0U,GACC4iB,GACGE,GAAqBF,EAAoBjzB,GAC7C,SAEJ,IAAIywB,EAAkB,CAAE5D,QAAOD,QAAS,KAAMxc,GAe9C,GAXInV,EAAcm4B,oBAAsB/wB,EAAeT,IAAI5B,KACvDywB,EAAkB,IACXA,EACHntB,MAAM,EACNupB,MAAO,KAOVjsB,EAAMyb,YAAa,CACpB,MAAMgX,EAAWp4B,EAAcsa,WAAW0N,IACtCoQ,IACA5C,EAAgB7D,QAAUhK,GAAgCyQ,EAAUrzB,GAE5E,CACA,IAAI7B,EAAYyC,EAAM/D,MAAM2zB,GAA2BxwB,EAAKY,EAAOyP,EAAaogB,IAC5E9N,GAAwBqQ,KACxBA,EAAWnZ,IAAI7Z,GACf7B,EAAYA,EAAUmf,MAAK,IAAM0V,EAAWM,OAAOtzB,MAEvDyyB,EAAWlpB,KAAKpL,EACpB,CACA,OAAO+e,QAAQtI,IAAI6d,GAAYnV,MAAK,KAChCnN,GAAiBoS,GAAUtnB,EAAekV,EAAc,GAEhE,CAoBA,SAASyiB,GAAgB1vB,EAAGC,GACxB,OAAOD,EAAEqwB,iBAAiBpwB,EAC9B,CAOA,SAASgwB,IAAqB,cAAEK,EAAa,eAAEC,GAAkBzzB,GAC7D,MAAM0zB,EAAcF,EAAcl3B,eAAe0D,KAAgC,IAAxByzB,EAAezzB,GAExE,OADAyzB,EAAezzB,IAAO,EACf0zB,CACX,CC7IA,MAAMC,GAAuB,CACzB/iB,GAAcgjB,QACdhjB,GAAc0E,OACd1E,GAAcsG,MACdtG,GAAcmC,MACdnC,GAAciG,IACdjG,GAAcijB,KACdjjB,GAAckjB,MAEZC,GAAuB,IAAIJ,IAAsBzN,UACjD8N,GAAoBL,GAAqB/uB,OAC/C,SAASqvB,GAAYh5B,GACjB,OAAQw3B,GAAevV,QAAQtI,IAAI6d,EAAW9S,KAAI,EAAGxhB,YAAWyK,aDZpE,SAA8B3N,EAAe0T,EAAY/F,EAAU,CAAC,GAEhE,IAAIzK,EACJ,GAFAlD,EAAcgB,OAAO,iBAAkB0S,GAEnCjS,MAAMC,QAAQgS,GAAa,CAC3B,MAAM8jB,EAAa9jB,EAAWgR,KAAKuS,GAAYD,GAAeh3B,EAAei3B,EAAStpB,KACtFzK,EAAY+e,QAAQtI,IAAI6d,EAC5B,MACK,GAA0B,iBAAf9jB,EACZxQ,EAAY8zB,GAAeh3B,EAAe0T,EAAY/F,OAErD,CACD,MAAMsrB,EAA2C,mBAAfvlB,EAC5BsT,GAAehnB,EAAe0T,EAAY/F,EAAQvH,QAClDsN,EACNxQ,EAAYk0B,GAAcp3B,EAAei5B,EAAoBtrB,EACjE,CACA,OAAOzK,EAAUmf,MAAK,IAAMriB,EAAcgB,OAAO,oBAAqB0S,IAC1E,CCLkFwlB,CAAqBl5B,EAAekD,EAAWyK,KACjI,CACA,SAASwrB,GAAqBn5B,GAC1B,IAAI+B,EAAUi3B,GAAYh5B,GAC1B,MAAMyN,EAoSC,CACH,CAACkI,GAAcgjB,SAAUS,IAAgB,GACzC,CAACzjB,GAAc0E,QAAS+e,KACxB,CAACzjB,GAAcmC,OAAQshB,KACvB,CAACzjB,GAAciG,KAAMwd,KACrB,CAACzjB,GAAcijB,MAAOQ,KACtB,CAACzjB,GAAcsG,OAAQmd,KACvB,CAACzjB,GAAckjB,MAAOO,MA1S1B,IAAIC,GAAkB,EAKtB,MAAMC,EAA0B,CAACvb,EAAKrK,KAClC,MAAMuB,EAAW+R,GAAehnB,EAAe0T,GAC/C,GAAIuB,EAAU,CACV,MAAM,WAAEE,EAAU,cAAED,KAAkBlG,GAAWiG,EACjD8I,EAAM,IAAKA,KAAQ/O,KAAWkG,EAClC,CACA,OAAO6I,CAAG,EAmBd,SAAShd,EAAe4M,EAAS4rB,GAC7B,MAAM35B,EAAQI,EAAcsa,WACtBhY,EAAUtC,EAAcw5B,mBAAkB,IAAS,CAAC,EAKpDhC,EAAa,GAKbiC,EAAc,IAAIpyB,IAMxB,IAAIqyB,EAAkB,CAAC,EAKnBC,EAAsBC,IAO1B,IAAK,IAAI9c,EAAI,EAAGA,EAAIic,GAAmBjc,IAAK,CACxC,MAAMzU,EAAOywB,GAAqBhc,GAC5B+c,EAAYpsB,EAAMpF,GAClB1F,OAAuBjC,IAAhBd,EAAMyI,GAAsBzI,EAAMyI,GAAQ/F,EAAQ+F,GACzDyxB,EAAgBv4B,EAAeoB,GAK/Bo3B,EAAc1xB,IAASkxB,EAAoBM,EAAUpiB,SAAW,MAClD,IAAhBsiB,IACAJ,EAAsB7c,GAO1B,IAAIkd,EAAcr3B,IAASL,EAAQ+F,IAAS1F,IAAS/C,EAAMyI,IAASyxB,EAepE,GAXIE,GACAX,GACAr5B,EAAci6B,yBACdD,GAAc,GAMlBH,EAAUtB,cAAgB,IAAKmB,IAI7BG,EAAUpiB,UAA4B,OAAhBsiB,IAElBp3B,IAASk3B,EAAUK,UAErBv4B,EAAoBgB,IACJ,kBAATA,EACP,SAOJ,MAAMw3B,EAAmBC,GAAuBP,EAAUK,SAAUv3B,GACpE,IAAI03B,EAAoBF,GAEnB9xB,IAASkxB,GACNM,EAAUpiB,WACTuiB,GACDF,GAEHhd,EAAI6c,GAAuBG,EAKhC,MAAMQ,EAAiB74B,MAAMC,QAAQiB,GAAQA,EAAO,CAACA,GAKrD,IAAI43B,EAAiBD,EAAehiB,OAAOghB,EAAyB,CAAC,IACjD,IAAhBS,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiB31B,IACnBs1B,GAAoB,EACpBZ,EAAYjgB,OAAOzU,GACnB80B,EAAUrB,eAAezzB,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAO01B,EAAS,CACvB,MAAM9d,EAAO4d,EAAex1B,GACtB6X,EAAO4d,EAAmBz1B,GAE5B20B,EAAgBr4B,eAAe0D,KAK/B4X,IAASC,EAKL/I,GAAkB8I,IAAS9I,GAAkB+I,IACxCF,GAAeC,EAAMC,IAASud,EAC/BO,EAAc31B,GAOd80B,EAAUtB,cAAcxzB,IAAO,OAGrBrE,IAATic,EAEL+d,EAAc31B,GAId00B,EAAY7a,IAAI7Z,QAGNrE,IAATic,GAAsB8c,EAAY9yB,IAAI5B,GAK3C21B,EAAc31B,GAOd80B,EAAUtB,cAAcxzB,IAAO,EAEvC,CAKA80B,EAAUK,SAAWv3B,EACrBk3B,EAAUW,mBAAqBD,EAI3BV,EAAUpiB,WACViiB,EAAkB,IAAKA,KAAoBa,IAE3ClB,GAAmBr5B,EAAcW,wBACjC05B,GAAoB,GAOpBA,IAAsBL,GACtBxC,EAAWlpB,QAAQgsB,EAAe5V,KAAKxhB,IAAc,CACjDA,UAAWA,EACXyK,QAAS,CAAEtF,UAASsF,OAGhC,CAMA,GAAI8rB,EAAYvuB,KAAM,CAClB,MAAMyvB,EAAoB,CAAC,EAC3BlB,EAAYzkB,SAASjQ,IACjB,MAAM61B,EAAiB56B,EAAc66B,cAAc91B,QAC5BrE,IAAnBk6B,IACAD,EAAkB51B,GAAO61B,EAC7B,IAEJpD,EAAWlpB,KAAK,CAAEpL,UAAWy3B,GACjC,CACA,IAAIG,EAAgB34B,QAAQq1B,EAAW7tB,QAOvC,OANI0vB,IACkB,IAAlBz5B,EAAMgB,UACLZ,EAAci6B,yBACfa,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgB/4B,EAAQy1B,GAAcvV,QAAQC,SACzD,CAkBA,MAAO,CACHnhB,iBACA8W,UAhBJ,SAAmBxP,EAAMoP,EAAU9J,GAC/B,IAAIwC,EAEJ,GAAI1C,EAAMpF,GAAMoP,WAAaA,EACzB,OAAOwK,QAAQC,UAEsB,QAAxC/R,EAAKnQ,EAAcs3B,uBAAoC,IAAPnnB,GAAyBA,EAAG6E,SAASgD,IAAY,IAAI7H,EAAI,OAAuC,QAA/BA,EAAK6H,EAAMlX,sBAAmC,IAAPqP,OAAgB,EAASA,EAAG0H,UAAUxP,EAAMoP,EAAS,IAC9MhK,EAAMpF,GAAMoP,SAAWA,EACvB,MAAM+f,EAAaz2B,EAAe4M,EAAStF,GAC3C,IAAK,MAAMtD,KAAO0I,EACdA,EAAM1I,GAAKwzB,cAAgB,CAAC,EAEhC,OAAOf,CACX,EAIIuD,mBA5PJ,SAA4BC,GACxBj5B,EAAUi5B,EAAah7B,EAC3B,EA2PIi4B,SAAU,IAAMxqB,EAExB,CACA,SAAS2sB,GAAuBxd,EAAMD,GAClC,MAAoB,iBAATA,EACAA,IAASC,IAEXnb,MAAMC,QAAQib,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAASwc,GAAgB3hB,GAAW,GAChC,MAAO,CACHA,WACA8gB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBgC,mBAAoB,CAAC,EAE7B,CClTA,MAAMhD,GAAa,CACft0B,UAAW0X,IAAwB,EAAG5a,gBAAe+B,cAMjD/B,EAAcc,iBAAmBd,EAAcc,eAAiBq4B,GAAqBn5B,IAIjF2B,EAAoBI,KACpB,IAAAzC,YAAU,IAAMyC,EAAQk5B,UAAUj7B,IAAgB,CAAC+B,GACvD,IAEJoB,KAAMyX,IAAyBhb,IAC3B,MAAM,OAAEwG,EAAM,cAAEpG,GAAkBJ,GAC3B0c,EAAW4e,GAAgB7e,KAC5Bnc,GAAkB,IAAAH,YAAW,IACnC,IAAAT,YAAU,KACNU,EAAcsc,UAAYA,EAC1B,MAAMpZ,EAAYlD,EAAcc,gBAC5Bd,EAAcc,eAAe+W,UAAUlC,GAAckjB,MAAOvc,EAAW,CACnElW,OAASlG,GAAmBA,EAAgBkG,QACxCA,IAERlD,IAAcoZ,GACdpZ,EAAUmf,KAAK6Y,EACnB,GACD,CAAC5e,GAAW,KCrCjB3P,GAAW,CAAC1E,EAAGC,IAAMQ,KAAK0jB,IAAInkB,EAAIC,GCYxC,MAAMizB,GACFrb,YAAY1J,EAAOglB,GAAU,mBAAEv8B,GAAuB,CAAC,GA0DnD,GAtDAqF,KAAKm3B,WAAa,KAIlBn3B,KAAKo3B,cAAgB,KAIrBp3B,KAAKq3B,kBAAoB,KAIzBr3B,KAAKk3B,SAAW,CAAC,EACjBl3B,KAAKs3B,YAAc,KACf,IAAMt3B,KAAKo3B,gBAAiBp3B,KAAKq3B,kBAC7B,OACJ,MAAM5jB,EAAO8jB,GAAWv3B,KAAKq3B,kBAAmBr3B,KAAKw3B,SAC/CC,EAAmC,OAApBz3B,KAAKm3B,WAIpBO,EDrClB,SAAoB3zB,EAAGC,GAEnB,MAAM2zB,EAASlvB,GAAS1E,EAAEL,EAAGM,EAAEN,GACzBk0B,EAASnvB,GAAS1E,EAAEJ,EAAGK,EAAEL,GAC/B,OAAOa,KAAKugB,KAAK4S,GAAU,EAAIC,GAAU,EAC7C,CCgC4CC,CAAWpkB,EAAKrH,OAAQ,CAAE1I,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAK8zB,IAAiBC,EAClB,OACJ,MAAM,MAAEplB,GAAUmB,GACZ,UAAEuF,GAAcF,GACtB9Y,KAAKw3B,QAAQptB,KAAK,IAAKkI,EAAO0G,cAC9B,MAAM,QAAE8e,EAAO,OAAEC,GAAW/3B,KAAKk3B,SAC5BO,IACDK,GAAWA,EAAQ93B,KAAKo3B,cAAe3jB,GACvCzT,KAAKm3B,WAAan3B,KAAKo3B,eAE3BW,GAAUA,EAAO/3B,KAAKo3B,cAAe3jB,EAAK,EAE9CzT,KAAKg4B,kBAAoB,CAAC9lB,EAAOuB,KACxBxB,GAAiBC,KAEtBlS,KAAKo3B,cAAgBllB,EACrBlS,KAAKq3B,kBAAoBY,GAAexkB,EAAMzT,KAAKrF,oBAEnDqgB,GAAK4S,OAAO5tB,KAAKs3B,aAAa,GAAK,EAEvCt3B,KAAKk4B,gBAAkB,CAAChmB,EAAOuB,KAC3B,IAAKxB,GAAiBC,GAClB,OACJlS,KAAKm4B,MACL,MAAM,MAAEC,EAAK,aAAEC,GAAiBr4B,KAAKk3B,SAC/BoB,EAAUf,GAAWU,GAAexkB,EAAMzT,KAAKrF,oBAAqBqF,KAAKw3B,SAC3Ex3B,KAAKm3B,YAAciB,GACnBA,EAAMlmB,EAAOomB,GAEjBD,GAAgBA,EAAanmB,EAAOomB,EAAQ,GAG3CrmB,GAAiBC,GAClB,OACJlS,KAAKk3B,SAAWA,EAChBl3B,KAAKrF,mBAAqBA,EAC1B,MACM49B,EAAcN,GADP7lB,GAAiBF,GACWlS,KAAKrF,qBACxC,MAAE2X,GAAUimB,GACZ,UAAEvf,GAAcF,GACtB9Y,KAAKw3B,QAAU,CAAC,IAAKllB,EAAO0G,cAC5B,MAAM,eAAEwf,GAAmBtB,EAC3BsB,GACIA,EAAetmB,EAAOqlB,GAAWgB,EAAav4B,KAAKw3B,UACvDx3B,KAAKy4B,gBAAkBvkB,GAAKxB,GAAgBmF,OAAQ,cAAe7X,KAAKg4B,mBAAoBtlB,GAAgBmF,OAAQ,YAAa7X,KAAKk4B,iBAAkBxlB,GAAgBmF,OAAQ,gBAAiB7X,KAAKk4B,iBAC1M,CACAQ,eAAexB,GACXl3B,KAAKk3B,SAAWA,CACpB,CACAiB,MACIn4B,KAAKy4B,iBAAmBz4B,KAAKy4B,kBAC7Bvd,GAAW0S,OAAO5tB,KAAKs3B,YAC3B,EAEJ,SAASW,GAAexkB,EAAM9Y,GAC1B,OAAOA,EAAqB,CAAE2X,MAAO3X,EAAmB8Y,EAAKnB,QAAWmB,CAC5E,CACA,SAASklB,GAAc50B,EAAGC,GACtB,MAAO,CAAEN,EAAGK,EAAEL,EAAIM,EAAEN,EAAGC,EAAGI,EAAEJ,EAAIK,EAAEL,EACtC,CACA,SAAS4zB,IAAW,MAAEjlB,GAASklB,GAC3B,MAAO,CACHllB,QACAyG,MAAO4f,GAAcrmB,EAAOsmB,GAAgBpB,IAC5CprB,OAAQusB,GAAcrmB,EAAOumB,GAAiBrB,IAC9Crb,SAAU,GAAYqb,EAAS,IAEvC,CACA,SAASqB,GAAiBrB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASoB,GAAgBpB,GACrB,OAAOA,EAAQA,EAAQ/xB,OAAS,EACpC,CACA,SAAS,GAAY+xB,EAASjb,GAC1B,GAAIib,EAAQ/xB,OAAS,EACjB,MAAO,CAAE/B,EAAG,EAAGC,EAAG,GAEtB,IAAIiV,EAAI4e,EAAQ/xB,OAAS,EACrBqzB,EAAmB,KACvB,MAAMC,EAAYH,GAAgBpB,GAClC,KAAO5e,GAAK,IACRkgB,EAAmBtB,EAAQ5e,KACvBmgB,EAAU/f,UAAY8f,EAAiB9f,UACvC+K,GAAsBxH,MAG1B3D,IAEJ,IAAKkgB,EACD,MAAO,CAAEp1B,EAAG,EAAGC,EAAG,GAEtB,MAAMq1B,GAAQD,EAAU/f,UAAY8f,EAAiB9f,WAAa,IAClE,GAAa,IAATggB,EACA,MAAO,CAAEt1B,EAAG,EAAGC,EAAG,GAEtB,MAAM+L,EAAkB,CACpBhM,GAAIq1B,EAAUr1B,EAAIo1B,EAAiBp1B,GAAKs1B,EACxCr1B,GAAIo1B,EAAUp1B,EAAIm1B,EAAiBn1B,GAAKq1B,GAQ5C,OANItpB,EAAgBhM,IAAMgyB,MACtBhmB,EAAgBhM,EAAI,GAEpBgM,EAAgB/L,IAAM+xB,MACtBhmB,EAAgB/L,EAAI,GAEjB+L,CACX,CChJA,SAASupB,GAAWC,GAChB,OAAOA,EAAK30B,IAAM20B,EAAK50B,GAC3B,CACA,SAAS60B,GAAO13B,EAAOqJ,EAAS,EAAGsuB,EAAc,KAC7C,OAAO50B,KAAK0jB,IAAIzmB,EAAQqJ,IAAWsuB,CACvC,CACA,SAASC,GAActgB,EAAOhO,EAAQD,EAAQqB,EAAS,IACnD4M,EAAM5M,OAASA,EACf4M,EAAMugB,YAAcxpB,GAAI/E,EAAOzG,IAAKyG,EAAOxG,IAAKwU,EAAM5M,QACtD4M,EAAMlU,MAAQo0B,GAAWnuB,GAAUmuB,GAAWluB,IAC1CouB,GAAOpgB,EAAMlU,MAAO,EAAG,OAAWsY,MAAMpE,EAAMlU,UAC9CkU,EAAMlU,MAAQ,GAClBkU,EAAMwgB,UACFzpB,GAAIhF,EAAOxG,IAAKwG,EAAOvG,IAAKwU,EAAM5M,QAAU4M,EAAMugB,aAClDH,GAAOpgB,EAAMwgB,YAAcpc,MAAMpE,EAAMwgB,cACvCxgB,EAAMwgB,UAAY,EAC1B,CACA,SAASC,GAAazgB,EAAOhO,EAAQD,EAAQqB,GACzCktB,GAActgB,EAAMrV,EAAGqH,EAAOrH,EAAGoH,EAAOpH,EAAGyI,aAAuC,EAASA,EAAOpD,SAClGswB,GAActgB,EAAMpV,EAAGoH,EAAOpH,EAAGmH,EAAOnH,EAAGwI,aAAuC,EAASA,EAAOnD,QACtG,CACA,SAASywB,GAAiB3uB,EAAQ4uB,EAAU99B,GACxCkP,EAAOxG,IAAM1I,EAAO0I,IAAMo1B,EAASp1B,IACnCwG,EAAOvG,IAAMuG,EAAOxG,IAAM20B,GAAWS,EACzC,CAKA,SAASC,GAAyB7uB,EAAQzH,EAAQzH,GAC9CkP,EAAOxG,IAAMjB,EAAOiB,IAAM1I,EAAO0I,IACjCwG,EAAOvG,IAAMuG,EAAOxG,IAAM20B,GAAW51B,EACzC,CACA,SAASu2B,GAAqB9uB,EAAQzH,EAAQzH,GAC1C+9B,GAAyB7uB,EAAOpH,EAAGL,EAAOK,EAAG9H,EAAO8H,GACpDi2B,GAAyB7uB,EAAOnH,EAAGN,EAAOM,EAAG/H,EAAO+H,EACxD,CCZA,SAASk2B,GAA4BX,EAAM50B,EAAKC,GAC5C,MAAO,CACHD,SAAa9H,IAAR8H,EAAoB40B,EAAK50B,IAAMA,OAAM9H,EAC1C+H,SAAa/H,IAAR+H,EACC20B,EAAK30B,IAAMA,GAAO20B,EAAK30B,IAAM20B,EAAK50B,UAClC9H,EAEd,CAcA,SAASs9B,GAA4BC,EAAYC,GAC7C,IAAI11B,EAAM01B,EAAgB11B,IAAMy1B,EAAWz1B,IACvCC,EAAMy1B,EAAgBz1B,IAAMw1B,EAAWx1B,IAO3C,OAJIy1B,EAAgBz1B,IAAMy1B,EAAgB11B,IACtCy1B,EAAWx1B,IAAMw1B,EAAWz1B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAM01B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH/1B,IAAKg2B,GAAoBH,EAAaC,GACtC71B,IAAK+1B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,SAASC,GAAShnB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASinB,IAAwB,IAAExzB,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,IACjD,MAAO,CACHzD,EAAG,CAAEY,IAAK8C,EAAM7C,IAAK2C,GACrBvD,EAAG,CAAEW,IAAK2C,EAAK1C,IAAK4C,GAE5B,CCVA,SAASuzB,GAAgB71B,GACrB,YAAiBrI,IAAVqI,GAAiC,IAAVA,CAClC,CACA,SAAS81B,IAAS,MAAE91B,EAAK,OAAEsD,EAAM,OAAEC,IAC/B,OAASsyB,GAAgB71B,KACpB61B,GAAgBvyB,KAChBuyB,GAAgBtyB,EACzB,CACA,SAAS2B,GAAayG,GAClB,OAAQmqB,GAASnqB,IACboqB,GAAepqB,IACfA,EAAO5M,GACP4M,EAAOzI,QACPyI,EAAOxI,SACPwI,EAAOvI,OACf,CACA,SAAS2yB,GAAepqB,GACpB,OAAOqqB,GAAcrqB,EAAO9M,IAAMm3B,GAAcrqB,EAAO7M,EAC3D,CACA,SAASk3B,GAAcp5B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASq5B,GAAWxoB,EAAOzN,EAAOy0B,GAG9B,OAAOA,EADQz0B,GADYyN,EAAQgnB,EAGvC,CAIA,SAASyB,GAAgBzoB,EAAOinB,EAAW10B,EAAOy0B,EAAa0B,GAI3D,YAHiBx+B,IAAbw+B,IACA1oB,EAAQwoB,GAAWxoB,EAAO0oB,EAAU1B,IAEjCwB,GAAWxoB,EAAOzN,EAAOy0B,GAAeC,CACnD,CAIA,SAAS0B,GAAe/B,EAAMK,EAAY,EAAG10B,EAAQ,EAAGy0B,EAAa0B,GACjE9B,EAAK50B,IAAMy2B,GAAgB7B,EAAK50B,IAAKi1B,EAAW10B,EAAOy0B,EAAa0B,GACpE9B,EAAK30B,IAAMw2B,GAAgB7B,EAAK30B,IAAKg1B,EAAW10B,EAAOy0B,EAAa0B,EACxE,CAIA,SAASE,GAAcC,GAAK,EAAEz3B,EAAC,EAAEC,IAC7Bs3B,GAAeE,EAAIz3B,EAAGA,EAAE61B,UAAW71B,EAAEmB,MAAOnB,EAAE41B,aAC9C2B,GAAeE,EAAIx3B,EAAGA,EAAE41B,UAAW51B,EAAEkB,MAAOlB,EAAE21B,YAClD,CAgDA,SAAS8B,GAAcv2B,GACnB,OAAIw2B,OAAOC,UAAUz2B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS02B,GAAcrC,EAAMzwB,GACzBywB,EAAK50B,IAAM40B,EAAK50B,IAAMmE,EACtBywB,EAAK30B,IAAM20B,EAAK30B,IAAMkE,CAC1B,CAMA,SAAS+yB,GAActC,EAAMuC,GAAa56B,EAAK66B,EAAUC,IACrD,MAAMC,OAAuCp/B,IAA1Bi/B,EAAWE,GAA2BF,EAAWE,GAAa,GAC3ErC,EAAcxpB,GAAIopB,EAAK50B,IAAK40B,EAAK30B,IAAKq3B,GAE5CX,GAAe/B,EAAMuC,EAAW56B,GAAM46B,EAAWC,GAAWpC,EAAamC,EAAW52B,MACxF,CAIA,MAAMg3B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAK/2B,GACvBo3B,GAAcL,EAAIz3B,EAAGU,EAAWy3B,IAChCL,GAAcL,EAAIx3B,EAAGS,EAAW03B,GACpC,CC7GA,SAASE,GAAmBr6B,EAAUs2B,GAClC,OAAOwC,GHeX,SAA4BnoB,EAAO2lB,GAC/B,IAAKA,EACD,OAAO3lB,EACX,MAAM2pB,EAAUhE,EAAe,CAAEv0B,EAAG4O,EAAMlL,KAAMzD,EAAG2O,EAAMrL,MACnDi1B,EAAcjE,EAAe,CAAEv0B,EAAG4O,EAAMpL,MAAOvD,EAAG2O,EAAMnL,SAC9D,MAAO,CACHF,IAAKg1B,EAAQt4B,EACbyD,KAAM60B,EAAQv4B,EACdyD,OAAQ+0B,EAAYv4B,EACpBuD,MAAOg1B,EAAYx4B,EAE3B,CG1BmCy4B,CAAmBx6B,EAAS0P,wBAAyB4mB,GACxF,CCaA,MAAMmE,GAAsB,IAAI9nB,QAKhC,MAAM+nB,GACFzgB,YAAY9f,GAIRkE,KAAKs8B,eAAiB,KACtBt8B,KAAKu8B,YAAa,EAClBv8B,KAAKw8B,iBAAmB,KACxBx8B,KAAKs5B,YAAc,CAAE51B,EAAG,EAAGC,EAAG,GAI9B3D,KAAKy8B,aAAc,EACnBz8B,KAAK08B,uBAAwB,EAI7B18B,KAAK28B,QC7BW,CACpBj5B,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,ID+BjCvE,KAAKlE,cAAgBA,CACzB,CACA4B,MAAMk/B,GAAa,aAAEC,GAAe,GAAU,CAAC,GAI3C,IAAqC,IAAjC78B,KAAKlE,cAAcsc,UACnB,OAmFJpY,KAAK88B,WAAa,IAAI7F,GAAW2F,EAAa,CAC1CpE,eAnFoBtmB,IAGpBlS,KAAKie,gBACD4e,GACA78B,KAAK68B,aAAazqB,GAAiBF,EAAO,QAAQI,MACtD,EA8EAwlB,QA5EY,CAAC5lB,EAAOuB,KACpB,IAAIxH,EAEJ,MAAM,KAAE/M,EAAI,gBAAE69B,EAAe,YAAEC,GAAgBh9B,KAAKoW,aAChDlX,GAAS69B,IACL/8B,KAAKs8B,gBACLt8B,KAAKs8B,iBACTt8B,KAAKs8B,eAAiBrpB,GAAc/T,GAE/Bc,KAAKs8B,mBAGdt8B,KAAKu8B,YAAa,EAClBv8B,KAAKw8B,iBAAmB,KACxBx8B,KAAKi9B,qBACDj9B,KAAKlE,cAAc8S,aACnB5O,KAAKlE,cAAc8S,WAAWsuB,oBAAqB,EACnDl9B,KAAKlE,cAAc8S,WAAW9D,YAAStO,GAK3Cg+B,IAAUtB,IACN,IAAIjtB,EAAI+U,EACR,IAAI3kB,EAAU2D,KAAKm9B,mBAAmBjE,GAAM32B,OAAS,EAIrD,GAAIoD,EAAQ5C,KAAK1G,GAAU,CACvB,MAAM+gC,EAA8G,QAA9Fpc,EAA8C,QAAxC/U,EAAKjM,KAAKlE,cAAc8S,kBAA+B,IAAP3C,OAAgB,EAASA,EAAG5I,cAA2B,IAAP2d,OAAgB,EAASA,EAAGqc,UAAUnE,GAClK,GAAIkE,EAAc,CAEd/gC,EADe48B,GAAWmE,IACNz4B,WAAWtI,GAAW,IAC9C,CACJ,CACA2D,KAAKs5B,YAAYJ,GAAQ78B,CAAO,IAGpC2gC,SAA0DA,EAAY9qB,EAAOuB,GAChC,QAA5CxH,EAAKjM,KAAKlE,cAAcc,sBAAmC,IAAPqP,GAAyBA,EAAG0H,UAAUlC,GAAcijB,MAAM,GAAK,EAsCpHqD,OApCW,CAAC7lB,EAAOuB,KAEnB,MAAM,gBAAEspB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAYx9B,KAAKoW,WAE9E,IAAK2mB,IAAoB/8B,KAAKs8B,eAC1B,OACJ,MAAM,OAAElwB,GAAWqH,EAEnB,GAAI6pB,GAA+C,OAA1Bt9B,KAAKw8B,iBAM1B,OALAx8B,KAAKw8B,iBA6UrB,SAA6BpwB,EAAQqxB,EAAgB,IACjD,IAAI9N,EAAY,KACZnrB,KAAK0jB,IAAI9b,EAAOzI,GAAK85B,EACrB9N,EAAY,IAEPnrB,KAAK0jB,IAAI9b,EAAO1I,GAAK+5B,IAC1B9N,EAAY,KAEhB,OAAOA,CACX,CAtVwC+N,CAAoBtxB,QAEd,OAA1BpM,KAAKw8B,mBACLe,SAAkEA,EAAgBv9B,KAAKw8B,oBAK/Fx8B,KAAK29B,WAAW,IAAKlqB,EAAKnB,MAAOlG,GACjCpM,KAAK29B,WAAW,IAAKlqB,EAAKnB,MAAOlG,GAOjCpM,KAAKlE,cAAca,SAKnB6gC,SAAgDA,EAAOtrB,EAAOuB,EAAK,EAOnE4kB,aALiB,CAACnmB,EAAOuB,IAASzT,KAAK8d,KAAK5L,EAAOuB,IAMpD,CAAE9Y,mBAAoBqF,KAAKlE,cAAc8hC,yBAChD,CACA9f,KAAK5L,EAAOuB,GACR,MAAM8oB,EAAav8B,KAAKu8B,WAExB,GADAv8B,KAAK2a,UACA4hB,EACD,OACJ,MAAM,SAAEpgB,GAAa1I,EACrBzT,KAAKiyB,eAAe9V,GACpB,MAAM,UAAE0hB,GAAc79B,KAAKoW,WAC3BynB,SAAsDA,EAAU3rB,EAAOuB,EAC3E,CACAkH,SACI,IAAI1O,EAAI+U,EACRhhB,KAAKu8B,YAAa,EACdv8B,KAAKlE,cAAc8S,aACnB5O,KAAKlE,cAAc8S,WAAWsuB,oBAAqB,GAE5B,QAA1BjxB,EAAKjM,KAAK88B,kBAA+B,IAAP7wB,GAAyBA,EAAGksB,MAC/Dn4B,KAAK88B,gBAAatgC,EAClB,MAAM,gBAAEugC,GAAoB/8B,KAAKoW,YAC5B2mB,GAAmB/8B,KAAKs8B,iBACzBt8B,KAAKs8B,iBACLt8B,KAAKs8B,eAAiB,MAEmB,QAA5Ctb,EAAKhhB,KAAKlE,cAAcc,sBAAmC,IAAPokB,GAAyBA,EAAGrN,UAAUlC,GAAcijB,MAAM,EACnH,CACAiJ,WAAWzE,EAAM4E,EAAQ1xB,GACrB,MAAM,KAAElN,GAASc,KAAKoW,WAEtB,IAAKhK,IAAW2xB,GAAW7E,EAAMh6B,EAAMc,KAAKw8B,kBACxC,OACJ,MAAMwB,EAAYh+B,KAAKm9B,mBAAmBjE,GAC1C,IAAIzgB,EAAOzY,KAAKs5B,YAAYJ,GAAQ9sB,EAAO8sB,GAEvCl5B,KAAKy8B,aAAez8B,KAAKy8B,YAAYvD,KACrCzgB,ENlKZ,SAA0BnG,GAAO,IAAEhO,EAAG,IAAEC,GAAOo4B,GAS3C,YARYngC,IAAR8H,GAAqBgO,EAAQhO,EAE7BgO,EAAQqqB,EAAU7sB,GAAIxL,EAAKgO,EAAOqqB,EAAQr4B,KAAOE,KAAKD,IAAI+N,EAAOhO,QAEpD9H,IAAR+H,GAAqB+N,EAAQ/N,IAElC+N,EAAQqqB,EAAU7sB,GAAIvL,EAAK+N,EAAOqqB,EAAQp4B,KAAOC,KAAKF,IAAIgO,EAAO/N,IAE9D+N,CACX,CMwJmB2rB,CAAiBxlB,EAAMzY,KAAKy8B,YAAYvD,GAAOl5B,KAAK28B,QAAQzD,KAEvE8E,EAAUt7B,IAAI+V,EAClB,CACAwkB,qBACI,MAAM,gBAAEiB,EAAe,YAAE/D,GAAgBn6B,KAAKoW,YACxC,OAAE/S,GAAWrD,KAAKlE,cAAc8S,YAAc,CAAC,EAC/CuvB,EAAkBn+B,KAAKy8B,YACzByB,GAAmBnhC,EAAYmhC,GAC1Bl+B,KAAKy8B,cACNz8B,KAAKy8B,YAAcz8B,KAAKo+B,yBAKxBp+B,KAAKy8B,eADLyB,IAAmB76B,INpJnC,SAAiCg6B,GAAW,IAAEp2B,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,IAC7D,MAAO,CACHxD,EAAGm2B,GAA4BwD,EAAU35B,EAAG0D,EAAMF,GAClDvD,EAAGk2B,GAA4BwD,EAAU15B,EAAGsD,EAAKE,GAEzD,CMgJmCk3B,CAAwBh7B,EAAOg6B,UAAWa,GAMrEl+B,KAAK28B,QN7Fb,SAA4BxC,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHv2B,EAAGw2B,GAAmBC,EAAa,OAAQ,SAC3Cx2B,EAAGu2B,GAAmBC,EAAa,MAAO,UAElD,CMkFuBmE,CAAmBnE,GAK9BgE,IAAoBn+B,KAAKy8B,aACzBp5B,GACArD,KAAKy8B,cACJz8B,KAAK08B,uBACNlC,IAAUtB,IACFl5B,KAAKm9B,mBAAmBjE,KACxBl5B,KAAKy8B,YAAYvD,GNtHrC,SAA+B71B,EAAQo5B,GACnC,MAAM8B,EAAsB,CAAC,EAO7B,YANwB/hC,IAApBigC,EAAYn4B,MACZi6B,EAAoBj6B,IAAMm4B,EAAYn4B,IAAMjB,EAAOiB,UAE/B9H,IAApBigC,EAAYl4B,MACZg6B,EAAoBh6B,IAAMk4B,EAAYl4B,IAAMlB,EAAOiB,KAEhDi6B,CACX,CM6G6CC,CAAsBn7B,EAAOg6B,UAAUnE,GAAOl5B,KAAKy8B,YAAYvD,IAC5F,GAGZ,CACAkF,wBACI,MAAQF,gBAAiBzB,EAAW,yBAAEgC,GAA6Bz+B,KAAKoW,WACxE,IAAKqmB,IAAgB1/B,EAAY0/B,GAC7B,OAAO,EACX,MAAMiC,EAAqBjC,EAAYpgC,SAEjC,WAAEuS,GAAe5O,KAAKlE,cAE5B,IAAK8S,IAAeA,EAAWvL,OAC3B,OAAO,EACX,MAAMs7B,EDrNd,SAAwBjwB,EAASkwB,EAAoBjkC,GACjD,MAAMkkC,EAAc7C,GAAmBttB,EAAS/T,IAC1C,OAAEmkC,GAAWF,EAKnB,OAJIE,IACAvD,GAAcsD,EAAYn7B,EAAGo7B,EAAO1yB,OAAO1I,GAC3C63B,GAAcsD,EAAYl7B,EAAGm7B,EAAO1yB,OAAOzI,IAExCk7B,CACX,CC6M+BE,CAAeL,EAAoB9vB,EAAWkG,KAAM9U,KAAKlE,cAAc8hC,yBAC9F,IAAIoB,EN/JZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACHj7B,EAAGo2B,GAA4BuD,EAAU35B,EAAGi7B,EAAej7B,GAC3DC,EAAGm2B,GAA4BuD,EAAU15B,EAAGg7B,EAAeh7B,GAEnE,CM0JkCs7B,CAAwBrwB,EAAWvL,OAAOg6B,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EJvNpC,UAAiC,EAAE/6B,EAAC,EAAEC,IAClC,MAAO,CAAEsD,IAAKtD,EAAEW,IAAK4C,MAAOxD,EAAEa,IAAK4C,OAAQxD,EAAEY,IAAK6C,KAAM1D,EAAEY,IAC9D,CIqN6D66B,CAAwBH,IACzEh/B,KAAK08B,wBAA0BwC,EAC3BA,IACAF,EAAsBvE,GAAwByE,GAEtD,CACA,OAAOF,CACX,CACA/M,eAAe9V,GACX,MAAM,KAAEjd,EAAI,aAAEkgC,EAAY,YAAEjF,EAAW,eAAEkF,EAAc,iBAAEC,EAAgB,oBAAEC,GAAyBv/B,KAAKoW,WACnGqmB,EAAcz8B,KAAKy8B,aAAe,CAAC,EACnC+C,EAAqBhF,IAAUtB,IACjC,IAAK6E,GAAW7E,EAAMh6B,EAAMc,KAAKw8B,kBAC7B,OAEJ,IAAIvrB,GAAcwrB,aAAiD,EAASA,EAAYvD,KAAU,CAAC,EAC/FoG,IACAruB,EAAa,CAAE3M,IAAK,EAAGC,IAAK,IAOhC,MAAMqtB,EAAkBuI,EAAc,IAAM,IACtCtI,EAAgBsI,EAAc,GAAK,IACnC7H,EAAU,CACZnuB,KAAM,UACNgY,SAAUijB,EAAejjB,EAAS+c,GAAQ,EAC1CtH,kBACAC,gBACA1E,aAAc,IACdzB,UAAW,EACXD,UAAW,MACR4T,KACApuB,GAKP,OAAOjR,KAAKy/B,wBAAwBvG,EAAM5G,EAAQ,IAGtD,OAAOvU,QAAQtI,IAAI+pB,GAAoBrhB,KAAKohB,EAChD,CACAE,wBAAwBvG,EAAMjoB,GAC1B,MAAM+sB,EAAYh+B,KAAKm9B,mBAAmBjE,GAC1C,OAAO8E,EAAUtgC,MAAM2zB,GAA2B6H,EAAM8E,EAAW,EAAG/sB,GAC1E,CACAgN,gBACIuc,IAAUtB,GAASl5B,KAAKm9B,mBAAmBjE,GAAMpb,QACrD,CAOAqf,mBAAmBjE,GACf,IAAIjtB,EACJ,MAAMyzB,EAAU,QAAUxG,EAAK5pB,cACzBqwB,EAAsB3/B,KAAKlE,cAAcsa,WAAWspB,GAC1D,OAAOC,GAED3/B,KAAKlE,cAAconB,SAASgW,GAAwD,QAAhDjtB,EAAKjM,KAAKlE,cAAcsa,WAAW1Z,eAA4B,IAAPuP,OAAgB,EAASA,EAAGitB,KAAU,EAC5I,CACA2D,aAAavqB,GACTkoB,IAAUtB,IACN,MAAM,KAAEh6B,GAASc,KAAKoW,WAEtB,IAAK2nB,GAAW7E,EAAMh6B,EAAMc,KAAKw8B,kBAC7B,OACJ,MAAM,WAAE5tB,GAAe5O,KAAKlE,cACtBkiC,EAAYh+B,KAAKm9B,mBAAmBjE,GAC1C,GAAItqB,GAAcA,EAAWvL,OAAQ,CACjC,MAAM,IAAEiB,EAAG,IAAEC,GAAQqK,EAAWvL,OAAOg6B,UAAUnE,GACjD8E,EAAUt7B,IAAI4P,EAAM4mB,GAAQppB,GAAIxL,EAAKC,EAAK,IAC9C,IAER,CAMAq7B,iCACI,IAAI3zB,EACJ,IAAKjM,KAAKlE,cAAcO,QACpB,OACJ,MAAM,KAAE6C,EAAI,gBAAEg/B,GAAoBl+B,KAAKoW,YACjC,WAAExH,GAAe5O,KAAKlE,cAC5B,IAAKiB,EAAYmhC,KAAqBtvB,IAAe5O,KAAKy8B,YACtD,OAKJz8B,KAAKie,gBAKL,MAAM4hB,EAAc,CAAEn8B,EAAG,EAAGC,EAAG,GAC/B62B,IAAUtB,IACN,MAAM8E,EAAYh+B,KAAKm9B,mBAAmBjE,GAC1C,GAAI8E,EAAW,CACX,MAAMlxB,EAASkxB,EAAUz7B,MACzBs9B,EAAY3G,GNtQ5B,SAAoBnuB,EAAQD,GACxB,IAAIqB,EAAS,GACb,MAAM2zB,EAAe7G,GAAWluB,GAC1Bg1B,EAAe9G,GAAWnuB,GAOhC,OANIi1B,EAAeD,EACf3zB,EAASsY,GAAS3Z,EAAOxG,IAAKwG,EAAOvG,IAAMu7B,EAAc/0B,EAAOzG,KAE3Dw7B,EAAeC,IACpB5zB,EAASsY,GAAS1Z,EAAOzG,IAAKyG,EAAOxG,IAAMw7B,EAAcj1B,EAAOxG,MAE7DD,EAAM,EAAG,EAAG8H,EACvB,CM2PoC,CAAW,CAAE7H,IAAKwI,EAAQvI,IAAKuI,GAAU9M,KAAKy8B,YAAYvD,GAClF,KAKJ,MAAM,kBAAExvB,GAAsB1J,KAAKlE,cAAcsa,WACjDpW,KAAKlE,cAAcO,QAAQsN,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACqB,QAA1BuC,EAAK2C,EAAWkG,YAAyB,IAAP7I,GAAyBA,EAAG+zB,eAC/DpxB,EAAWqxB,eACXjgC,KAAKi9B,qBAKLzC,IAAUtB,IACN,IAAK6E,GAAW7E,EAAMh6B,EAAM,MACxB,OAIJ,MAAM8+B,EAAYh+B,KAAKm9B,mBAAmBjE,IACpC,IAAE50B,EAAG,IAAEC,GAAQvE,KAAKy8B,YAAYvD,GACtC8E,EAAUt7B,IAAIoN,GAAIxL,EAAKC,EAAKs7B,EAAY3G,IAAO,GAEvD,CACAgH,eACI,IAAIj0B,EACJ,IAAKjM,KAAKlE,cAAcO,QACpB,OACJ+/B,GAAoB15B,IAAI1C,KAAKlE,cAAekE,MAC5C,MAIMmgC,EAAsBztB,GAJZ1S,KAAKlE,cAAcO,QAIkB,eAAgB6V,IACjE,MAAM,KAAEhT,EAAI,aAAEoM,GAAe,GAAStL,KAAKoW,WAC3ClX,GAAQoM,GAAgBtL,KAAKtC,MAAMwU,EAAM,IAEvCkuB,EAAyB,KAC3B,MAAM,gBAAElC,GAAoBl+B,KAAKoW,WAC7BrZ,EAAYmhC,KACZl+B,KAAKy8B,YAAcz8B,KAAKo+B,wBAC5B,GAEE,WAAExvB,GAAe5O,KAAKlE,cACtBukC,EAA4BzxB,EAAWkD,iBAAiB,UAAWsuB,GACrExxB,IAAeA,EAAWvL,SACC,QAA1B4I,EAAK2C,EAAWkG,YAAyB,IAAP7I,GAAyBA,EAAG+zB,eAC/DpxB,EAAWqxB,gBAEfG,IAKA,MAAME,EAAqB5uB,GAAYmG,OAAQ,UAAU,IAAM7X,KAAK4/B,mCAK9DW,EAA2B3xB,EAAWkD,iBAAiB,aAAa,EAAIiH,QAAOynB,uBAC7ExgC,KAAKu8B,YAAciE,IACnBhG,IAAUtB,IACN,MAAMza,EAAcze,KAAKm9B,mBAAmBjE,GACvCza,IAELze,KAAKs5B,YAAYJ,IAASngB,EAAMmgB,GAAMK,UACtC9a,EAAY/b,IAAI+b,EAAYlc,MAAQwW,EAAMmgB,GAAMK,WAAU,IAE9Dv5B,KAAKlE,cAAca,SAE1B,IACD,MAAO,KACH2jC,IACAH,IACAE,IACAE,SAAoFA,GAA0B,CAEtH,CACAnqB,WACI,MAAM1a,EAAQsE,KAAKlE,cAAcsa,YAC3B,KAAElX,GAAO,EAAK,kBAAEo+B,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEmB,GAAkB,EAAK,YAAE/D,EAAcF,GAAc,aAAEmF,GAAe,GAAU1jC,EAC1J,MAAO,IACAA,EACHwD,OACAo+B,oBACAP,kBACAmB,kBACA/D,cACAiF,eAER,EAEJ,SAASrB,GAAWpO,EAAWzwB,EAAMs9B,GACjC,SAAkB,IAATt9B,GAAiBA,IAASywB,GACT,OAArB6M,GAA6BA,IAAqB7M,EAC3D,CE5aA,MAAMzwB,GAAO,CACTI,IAAKoX,ICaT,UAAuB,MAAE+pB,EAAK,WAAEC,EAAU,SAAEC,EAAQ,kBAAEC,EAAiB,cAAE9kC,IACrE,MAAM+kC,EAAeJ,GAASC,GAAcC,GAAYC,EAClD9D,GAAa,IAAA3gC,QAAO,OACpB,mBAAExB,IAAuB,IAAAkB,YAAWpB,GACpCy8B,EAAW,CACbsB,eAAgBoI,EAChB9I,QAAS4I,EACT3I,OAAQ0I,EACRrI,MAAO,CAAClmB,EAAOuB,KACXqpB,EAAWzgC,QAAU,KACrBskC,GAAYA,EAASzuB,EAAOuB,EAAK,IAGzC,IAAArY,YAAU,KACqB,OAAvB0hC,EAAWzgC,SACXygC,EAAWzgC,QAAQq8B,eAAexB,EACtC,IAOJvkB,GAAgB7W,EAAe,cAAe+kC,GAL9C,SAAuB3uB,GACnB4qB,EAAWzgC,QAAU,IAAI46B,GAAW/kB,EAAOglB,EAAU,CACjDv8B,sBAER,GAEAqZ,IAAiB,IAAM8oB,EAAWzgC,SAAWygC,EAAWzgC,QAAQ87B,OACpE,IDrCIj5B,KAAMwX,IEGV,SAAiBhb,GACb,MAAQolC,aAAcC,EAAiB,cAAEjlC,GAAkBJ,EACrDolC,EAAethC,GAAY,IAAM,IAAI68B,GAA0BvgC,MAGrE,IAAAV,YAAU,IAAM2lC,GAAqBA,EAAkBhK,UAAU+J,IAAe,CAACA,EAAcC,KAE/F,IAAA3lC,YAAU,IAAM0lC,EAAaZ,gBAAgB,CAACY,GAClD,KCfA,SAAS,GAAcr/B,GACnB,MAAwB,iBAAVA,GAAsBA,EAAM6B,WAAW,SACzD,CAUA,MAAM09B,GAAmB,uDASzB,SAASC,GAAiB5kC,EAASqS,EAASwyB,EAAQ,GAEhD,MAAOC,EAAO3qB,GAVlB,SAA0Bna,GACtB,MAAM2iB,EAAQgiB,GAAiBI,KAAK/kC,GACpC,IAAK2iB,EACD,MAAO,CAAC,GACZ,MAAO,CAAEmiB,EAAO3qB,GAAYwI,EAC5B,MAAO,CAACmiB,EAAO3qB,EACnB,CAI8B6qB,CAAiBhlC,GAE3C,IAAK8kC,EACD,OAEJ,MAAMpwB,EAAW8G,OAAOypB,iBAAiB5yB,GAAS6yB,iBAAiBJ,GACnE,OAAIpwB,EACOA,EAASrG,OAEX,GAAc8L,GAEZyqB,GAAiBzqB,EAAU9H,EAASwyB,EAAQ,GAG5C1qB,CAEf,CCjCA,MAAMgrB,GAAiB,IAAIr+B,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEEs+B,GAAmB5gC,GAAQ2gC,GAAe/+B,IAAI5B,GAI9C6gC,GAAsB,CAACjgC,EAAO+iB,KAGhC/iB,EAAMiB,IAAI8hB,GAAI,GACd/iB,EAAMiB,IAAI8hB,EAAG,EAEXmd,GAAiBrkC,GAAMA,IAAMmH,GAAUnH,IAAMsI,GACnD,IAAIg8B,IACJ,SAAWA,GACPA,EAA4B,MAAI,QAChCA,EAA6B,OAAI,SACjCA,EAA2B,KAAI,OAC/BA,EAA4B,MAAI,QAChCA,EAA0B,IAAI,MAC9BA,EAA6B,OAAI,QACpC,CAPD,CAOGA,KAAyBA,GAAuB,CAAC,IACpD,MAAMC,GAAmB,CAACC,EAAQC,IAAQp9B,WAAWm9B,EAAOt8B,MAAM,MAAMu8B,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAAS/9B,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAMg+B,EAAWh+B,EAAU4a,MAAM,sBACjC,GAAIojB,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAS19B,EAAU4a,MAAM,oBAC/B,OAAI8iB,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEp4B,GAAgB,IAAI1G,IAAI,CAAC,IAAK,IAAK,MACnCk/B,GAAgCp/B,EAAmBwe,QAAQ5gB,IAASgJ,GAAcpH,IAAI5B,KAe5F,MAAMyhC,GAAmB,CAErB17B,MAAO,EAAGlD,MAAO+D,cAAc,IAAKF,eAAe,OAAU7D,EAAEa,IAAMb,EAAEY,IAAMK,WAAW8C,GAAe9C,WAAW4C,GAClHT,OAAQ,EAAGnD,MAAO2D,aAAa,IAAKE,gBAAgB,OAAU7D,EAAEY,IAAMZ,EAAEW,IAAMK,WAAW2C,GAAc3C,WAAW6C,GAClHP,IAAK,CAACk7B,GAASl7B,SAAUtC,WAAWsC,GACpCG,KAAM,CAAC+6B,GAAS/6B,UAAWzC,WAAWyC,GACtCD,OAAQ,EAAGxD,MAAOsD,SAAUtC,WAAWsC,IAAQtD,EAAEY,IAAMZ,EAAEW,KACzD4C,MAAO,EAAGxD,MAAO0D,UAAWzC,WAAWyC,IAAS1D,EAAEa,IAAMb,EAAEY,KAE1DZ,EAAGs+B,GAAuB,EAAG,IAC7Br+B,EAAGq+B,GAAuB,EAAG,KA+B3BO,GAAmC,CAACzmC,EAAegP,EAAQqB,EAAS,CAAC,EAAG6E,EAAgB,CAAC,KAC3FlG,EAAS,IAAKA,GACdkG,EAAgB,IAAKA,GACrB,MAAMwxB,EAAuBvlC,OAAOqQ,KAAKxC,GAAQ2W,OAAOggB,IAGxD,IAAIgB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GA4E7B,GA3EAH,EAAqB1xB,SAASjQ,IAC1B,MAAMY,EAAQ3F,EAAconB,SAASriB,GACrC,IAAK/E,EAAcmnB,SAASpiB,GACxB,OACJ,IAAI0iB,EAAOpX,EAAOtL,GACd+hC,EAAWlgB,GAAuBa,GACtC,MAAMiB,EAAK1Z,EAAOjK,GAClB,IAAIgiC,EAKJ,GAAIlzB,GAAkB6U,GAAK,CACvB,MAAMse,EAAete,EAAG/e,OAClBs9B,EAAsB,OAAVve,EAAG,GAAc,EAAI,EACvCjB,EAAOiB,EAAGue,GACVH,EAAWlgB,GAAuBa,GAClC,IAAK,IAAI3K,EAAImqB,EAAWnqB,EAAIkqB,EAAclqB,IACjCiqB,EAMSngB,GAAuB8B,EAAG5L,KALpCiqB,EAASngB,GAAuB8B,EAAG5L,IACzBiqB,IAAWD,GAChBjB,GAAciB,IAAajB,GAAckB,GAM1D,MAEIA,EAASngB,GAAuB8B,GAEpC,GAAIoe,IAAaC,EAGb,GAAIlB,GAAciB,IAAajB,GAAckB,GAAS,CAClD,MAAMxmC,EAAUoF,EAAMc,MACC,iBAAZlG,GACPoF,EAAMiB,IAAIiC,WAAWtI,IAEP,iBAAPmoB,EACP1Z,EAAOjK,GAAO8D,WAAW6f,GAEpBjnB,MAAMC,QAAQgnB,IAAOqe,IAAWj9B,KACrCkF,EAAOjK,GAAO2jB,EAAGhE,IAAI7b,YAE7B,MACUi+B,aAA2C,EAASA,EAASx+B,aAClEy+B,aAAuC,EAASA,EAAOz+B,aAC9C,IAATmf,GAAqB,IAAPiB,GAGF,IAATjB,EACA9hB,EAAMiB,IAAImgC,EAAOz+B,UAAUmf,IAG3BzY,EAAOjK,GAAO+hC,EAASx+B,UAAUogB,IAMhCke,IACDD,EA9HpB,SAAyC3mC,GACrC,MAAMknC,EAAoB,GAW1B,OAVAX,GAA8BvxB,SAASjQ,IACnC,MAAMY,EAAQ3F,EAAconB,SAASriB,QACvBrE,IAAViF,IACAuhC,EAAkB54B,KAAK,CAACvJ,EAAKY,EAAMc,QACnCd,EAAMiB,IAAI7B,EAAIyC,WAAW,SAAW,EAAI,GAC5C,IAGA0/B,EAAkBv9B,QAClB3J,EAAca,SACXqmC,CACX,CAkHwBC,CAAgCnnC,GACpC4mC,GAAsC,GAE1CC,EAAqBv4B,KAAKvJ,GAC1BmQ,EAAcnQ,QACarE,IAAvBwU,EAAcnQ,GACRmQ,EAAcnQ,GACdiK,EAAOjK,GACjB6gC,GAAoBjgC,EAAO+iB,GAEnC,IAEAme,EAAqBl9B,OAAQ,CAC7B,MAAMy9B,EAAUP,EAAqB7/B,QAAQ,WAAa,EACpD+U,OAAOsrB,YACP,KACAC,EArHmB,EAACt4B,EAAQhP,EAAeunC,KACrD,MAAMC,EAAaxnC,EAAckgC,qBAC3BttB,EAAU5S,EAAcO,QACxBknC,EAAuBjC,iBAAiB5yB,IACxC,QAAE80B,GAAYD,EACdp3B,EAAS,CAAC,EAGA,SAAZq3B,GACA1nC,EAAc2nC,eAAe,UAAW34B,EAAO04B,SAAW,SAK9DH,EAAYvyB,SAASjQ,IACjBsL,EAAOtL,GAAOyhC,GAAiBzhC,GAAKyiC,EAAYC,EAAqB,IAGzEznC,EAAca,SACd,MAAM+mC,EAAa5nC,EAAckgC,qBAQjC,OAPAqH,EAAYvyB,SAASjQ,IAGjB,MAAMY,EAAQ3F,EAAconB,SAASriB,GACrC6gC,GAAoBjgC,EAAO0K,EAAOtL,IAClCiK,EAAOjK,GAAOyhC,GAAiBzhC,GAAK6iC,EAAYH,EAAqB,IAElEz4B,CAAM,EA0Fe64B,CAAyB74B,EAAQhP,EAAe6mC,GAaxE,OAXIF,EAAuBh9B,QACvBg9B,EAAuB3xB,SAAQ,EAAEjQ,EAAKY,MAClC3F,EAAconB,SAASriB,GAAK6B,IAAIjB,EAAM,IAI9C3F,EAAca,SAEV3B,GAAyB,OAAZkoC,GACbrrB,OAAO+rB,SAAS,CAAE38B,IAAKi8B,IAEpB,CAAEp4B,OAAQs4B,EAAiBpyB,gBACtC,CAEI,MAAO,CAAElG,SAAQkG,gBACrB,EASJ,SAAS6yB,GAAe/nC,EAAegP,EAAQqB,EAAQ6E,GACnD,MAjNqB,CAAClG,GACf7N,OAAOqQ,KAAKxC,GAAQhN,KAAK2jC,IAgNzBqC,CAAiBh5B,GAClBy3B,GAAiCzmC,EAAegP,EAAQqB,EAAQ6E,GAChE,CAAElG,SAAQkG,gBACpB,CChOA,MAAM+yB,GAAkB,CAACjoC,EAAegP,EAAQqB,EAAQ6E,KACpD,MAAMD,EFuCV,SAA6BjV,MAAoBgP,GAAUkG,GACvD,MAAMtC,EAAU5S,EAAcO,QAC9B,KAAMqS,aAAmBuiB,SACrB,MAAO,CAAEnmB,SAAQkG,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzBlV,EAAc0U,OAAOM,SAASrP,IAC1B,MAAMpF,EAAUoF,EAAMc,MACtB,IAAK,GAAclG,GACf,OACJ,MAAM0U,EAAWkwB,GAAiB5kC,EAASqS,GACvCqC,GACAtP,EAAMiB,IAAIqO,EAAS,IAI3B,IAAK,MAAMlQ,KAAOiK,EAAQ,CACtB,MAAMzO,EAAUyO,EAAOjK,GACvB,IAAK,GAAcxE,GACf,SACJ,MAAM0U,EAAWkwB,GAAiB5kC,EAASqS,GACtCqC,IAGLjG,EAAOjK,GAAOkQ,EAIVC,QAAwCxU,IAAvBwU,EAAcnQ,KAC/BmQ,EAAcnQ,GAAOxE,GAE7B,CACA,MAAO,CAAEyO,SAAQkG,gBACrB,CE5EqBgzB,CAAoBloC,EAAegP,EAAQkG,GAG5D,OAAO6yB,GAAe/nC,EAFtBgP,EAASiG,EAASjG,OAE2BqB,EAD7C6E,EAAgBD,EAASC,cAC0C,ECVjEizB,GAAuB,CAAE5nC,QAAS,MAClC6nC,GAA2B,CAAE7nC,SAAS,GCkB5C,MAAM8nC,GAAelnC,OAAOqQ,KAAKxO,GAC3BslC,GAAcD,GAAa1+B,OAC3B4+B,GAAoB,CACtB,iBACA,oBACA,SACA,UACA,sBACA,gBACA,uBACA,2BAwbJ,MAAM,GAAe,CAAC,aAAc7P,IAC9B8P,GAAkB,GAAa7+B,OCndrC,MAAM8+B,WDgCN,MACI3oB,aAAY,OAAEhgB,EAAM,MAAEF,EAAK,oBAAEO,EAAmB,YAAER,GAAgBgO,EAAU,CAAC,GAKzEzJ,KAAK3D,QAAU,KAIf2D,KAAKG,SAAW,IAAIgD,IAIpBnD,KAAKhC,eAAgB,EACrBgC,KAAKpC,uBAAwB,EAQ7BoC,KAAKi0B,mBAAqB,KAM1Bj0B,KAAKwQ,OAAS,IAAIlO,IAKlBtC,KAAKoY,WAAY,EAKjBpY,KAAKwkC,mBAAqB,IAAIliC,IAM9BtC,KAAKykC,iBAAmB,CAAC,EAIzBzkC,KAAK0c,OAAS,CAAC,EAMf1c,KAAK0kC,uBAAyB,CAAC,EAC/B1kC,KAAK2kC,aAAe,IAAM3kC,KAAKlD,OAAO,SAAUkD,KAAKwJ,cACrDxJ,KAAKrD,OAAS,KACLqD,KAAK3D,UAEV2D,KAAK4kC,eACL5kC,KAAK6kC,eAAe7kC,KAAK3D,QAAS2D,KAAKiP,YAAajP,KAAKtE,MAAMiO,MAAO3J,KAAK4O,YAAW,EAE1F5O,KAAK8kC,eAAiB,IAAM9pB,GAAKre,OAAOqD,KAAKrD,QAAQ,GAAO,GAC5D,MAAM,aAAE6M,EAAY,YAAEyF,GAAgBxT,EACtCuE,KAAKwJ,aAAeA,EACpBxJ,KAAK+kC,WAAa,IAAKv7B,GACvBxJ,KAAKglC,cAAgBtpC,EAAMgB,QAAU,IAAK8M,GAAiB,CAAC,EAC5DxJ,KAAKiP,YAAcA,EACnBjP,KAAKpE,OAASA,EACdoE,KAAKtE,MAAQA,EACbsE,KAAKkhC,MAAQtlC,EAASA,EAAOslC,MAAQ,EAAI,EACzClhC,KAAK/D,oBAAsBA,EAC3B+D,KAAKyJ,QAAUA,EACfzJ,KAAKpC,sBAAwBA,EAAsBlC,GACnDsE,KAAKhC,cAAgBA,EAActC,GAC/BsE,KAAKhC,gBACLgC,KAAKozB,gBAAkB,IAAIjwB,KAE/BnD,KAAK+1B,uBAAyB93B,QAAQrC,GAAUA,EAAOS,SAWvD,MAAM,WAAEw3B,KAAeoR,GAAwBjlC,KAAKoP,4BAA4B1T,GAChF,IAAK,MAAMmF,KAAOokC,EAAqB,CACnC,MAAMxjC,EAAQwjC,EAAoBpkC,QACRrE,IAAtBgN,EAAa3I,IAAsB0C,EAAc9B,KACjDA,EAAMiB,IAAI8G,EAAa3I,IAAM,GACzB2iB,GAAwBqQ,IACxBA,EAAWnZ,IAAI7Z,GAG3B,CACJ,CAQAuO,4BAA4B81B,GACxB,MAAO,CAAC,CACZ,CACAtjC,MAAMD,GACF,IAAIsK,EACJjM,KAAK3D,QAAUsF,EACX3B,KAAK4O,YACL5O,KAAK4O,WAAWhN,MAAMD,GAEtB3B,KAAKpE,QAAUoE,KAAKhC,gBAAkBgC,KAAKpC,wBAC3CoC,KAAKmlC,sBAA+C,QAAtBl5B,EAAKjM,KAAKpE,cAA2B,IAAPqQ,OAAgB,EAASA,EAAGm5B,gBAAgBplC,OAE5GA,KAAKwQ,OAAOM,SAAQ,CAACrP,EAAOZ,IAAQb,KAAKqlC,kBAAkBxkC,EAAKY,KAC3DyiC,GAAyB7nC,SE1JtC,WAEI,GADA6nC,GAAyB7nC,SAAU,EAC9BrB,EAEL,GAAI6c,OAAOytB,WAAY,CACnB,MAAMC,EAAmB1tB,OAAOytB,WAAW,4BACrCE,EAA8B,IAAOvB,GAAqB5nC,QAAUkpC,EAAiBE,QAC3FF,EAAiBG,YAAYF,GAC7BA,GACJ,MAEIvB,GAAqB5nC,SAAU,CAEvC,CF8IYspC,GAEJ3lC,KAAKi0B,mBAC4B,UAA7Bj0B,KAAK/D,sBAE8B,WAA7B+D,KAAK/D,qBAEDgoC,GAAqB5nC,SAC/B2D,KAAKpE,QACLoE,KAAKpE,OAAOuE,SAASua,IAAI1a,MAC7BA,KAAKC,SAASD,KAAKtE,MACvB,CACAmG,UACI,IAAIoK,EAAI+U,EAAI4kB,EACe,QAA1B35B,EAAKjM,KAAK4O,kBAA+B,IAAP3C,GAAyBA,EAAGpK,UAC/DqZ,GAAW0S,OAAO5tB,KAAK2kC,cACvBzpB,GAAWve,OAAOqD,KAAKrD,QACvBqD,KAAKwkC,mBAAmB1zB,SAASqjB,GAAWA,MACN,QAArCnT,EAAKhhB,KAAKmlC,6BAA0C,IAAPnkB,GAAyBA,EAAG5jB,KAAK4C,MACxD,QAAtB4lC,EAAK5lC,KAAKpE,cAA2B,IAAPgqC,GAAyBA,EAAGzlC,SAASmV,OAAOtV,MAC3E,IAAK,MAAMa,KAAOb,KAAK0c,OACnB1c,KAAK0c,OAAO7b,GAAKob,QAErBjc,KAAK3D,QAAU,IACnB,CACAgpC,kBAAkBxkC,EAAKY,GACnB,MAAMokC,EAAmB3iC,EAAeT,IAAI5B,GACtCilC,EAAiBrkC,EAAM8b,GAAG,UAAWwoB,IACvC/lC,KAAKwJ,aAAa3I,GAAOklC,EACzB/lC,KAAKtE,MAAM8yB,UACPxT,GAAK4S,OAAO5tB,KAAK2kC,cAAc,GAAO,GACtCkB,GAAoB7lC,KAAK4O,aACzB5O,KAAK4O,WAAWo3B,kBAAmB,EACvC,IAEEC,EAAwBxkC,EAAM8b,GAAG,gBAAiBvd,KAAK8kC,gBAC7D9kC,KAAKwkC,mBAAmB9hC,IAAI7B,GAAK,KAC7BilC,IACAG,GAAuB,GAE/B,CACA7R,iBAAiB8R,GAIb,OAAKlmC,KAAK3D,SACL2D,KAAKmmC,0BACNnmC,KAAKmE,OAAS+hC,EAAM/hC,KAEjBnE,KAAKmmC,yBAAyBnmC,KAAK3D,QAAS6pC,EAAM7pC,SAD9C,CAEf,CACAyE,aAAaslC,EAAeC,EAAU7lC,EAAmBa,EAAcilC,EAA2B/kC,GAC9F,MAAMX,EAAW,GAQjB,IAAK,IAAIgY,EAAI,EAAGA,EAAIwrB,GAAaxrB,IAAK,CAClC,MAAM7a,EAAOomC,GAAavrB,IACpB,UAAE/Z,EAAS,UAAErD,GAAcsD,EAAmBf,GAMhDc,EAAUunC,IAAkB5qC,GAC5BoF,EAASwJ,MAAK,IAAAiE,eAAc7S,EAAW,CACnCqF,IAAK9C,KACFqoC,EACHtqC,cAAekE,OAG3B,CACA,IAAKA,KAAK4O,YAAc03B,EAA2B,CAC/CtmC,KAAK4O,WAAa,IAAI03B,EAA0BjlC,EAAcrB,KAAKwJ,aAAcxJ,KAAKpE,QAAUoE,KAAKpE,OAAOgT,YAC5G,MAAM,SAAEzN,EAAQ,OAAEkC,EAAM,KAAEnE,EAAI,gBAAEg/B,EAAe,aAAEqI,GAAiBH,EAClEpmC,KAAK4O,WAAW43B,WAAW,CACvBrlC,WACAkC,SACAojC,oBAAqBxoC,QAAQiB,IACxBg/B,GAAmBnhC,EAAYmhC,GACpCpiC,cAAekE,KACf8kC,eAAgB,IAAM9kC,KAAK8kC,iBAQ3B4B,cAAiC,iBAAXrjC,EAAsBA,EAAS,OACrDsjC,uBAAwBplC,EACxBglC,gBAER,CACA,OAAO3lC,CACX,CACAgkC,eACI5kC,KAAK4mC,MAAM5mC,KAAKiP,YAAajP,KAAKwJ,aAAcxJ,KAAKyJ,QAASzJ,KAAKtE,MACvE,CAMAsgC,qBACI,OAAOh8B,KAAK3D,QACN2D,KAAK6mC,2BAA2B7mC,KAAK3D,QAAS2D,KAAKtE,ORjQzC,CACpBgI,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,GQoQrC,CACAuiC,eAAejmC,GACX,OAAOb,KAAKwJ,aAAa3I,EAC7B,CACA4iC,eAAe5iC,EAAKY,GAChBzB,KAAKwJ,aAAa3I,GAAOY,CAC7B,CAQA4hB,qBAAqBvY,EAAQi8B,GAAY,GACrC,OAAO/mC,KAAKgnC,iCAAiCl8B,EAAQ9K,KAAKtE,MAAOqrC,EACrE,CAKA9mC,SAASvE,IACDA,EAAMgO,mBAAqB1J,KAAKtE,MAAMgO,oBACtC1J,KAAK8kC,iBAET9kC,KAAKtE,MAAQA,EAIb,IAAK,IAAIkd,EAAI,EAAGA,EAAIyrB,GAAkB5+B,OAAQmT,IAAK,CAC/C,MAAM/X,EAAMwjC,GAAkBzrB,GAC1B5Y,KAAK0kC,uBAAuB7jC,KAC5Bb,KAAK0kC,uBAAuB7jC,YACrBb,KAAK0kC,uBAAuB7jC,IAEvC,MAAM4R,EAAW/W,EAAM,KAAOmF,GAC1B4R,IACAzS,KAAK0kC,uBAAuB7jC,GAAOb,KAAKud,GAAG1c,EAAK4R,GAExD,CACAzS,KAAKykC,iBGjTb,SAAqC/1B,EAAS+J,EAAMC,GAChD,MAAM,WAAEmb,GAAepb,EACvB,IAAK,MAAM5X,KAAO4X,EAAM,CACpB,MAAMwuB,EAAYxuB,EAAK5X,GACjBqmC,EAAYxuB,EAAK7X,GACvB,GAAI0C,EAAc0jC,GAKdv4B,EAAQyU,SAAStiB,EAAKomC,GAClBzjB,GAAwBqQ,IACxBA,EAAWnZ,IAAI7Z,QAUlB,GAAI0C,EAAc2jC,GAKnBx4B,EAAQyU,SAAStiB,EAAK4d,GAAYwoB,EAAW,CAAE7pB,MAAO1O,KAClD8U,GAAwBqQ,IACxBA,EAAWM,OAAOtzB,QAGrB,GAAIqmC,IAAcD,EAMnB,GAAIv4B,EAAQuU,SAASpiB,GAAM,CACvB,MAAMsmC,EAAgBz4B,EAAQwU,SAASriB,IAEtCsmC,EAAcjqB,aAAeiqB,EAAczkC,IAAIukC,EACpD,KACK,CACD,MAAMlB,EAAcr3B,EAAQo4B,eAAejmC,GAC3C6N,EAAQyU,SAAStiB,EAAK4d,QAA4BjiB,IAAhBupC,EAA4BA,EAAckB,GAChF,CAER,CAEA,IAAK,MAAMpmC,KAAO6X,OACIlc,IAAdic,EAAK5X,IACL6N,EAAQ04B,YAAYvmC,GAE5B,OAAO4X,CACX,CH0PgC4uB,CAA4BrnC,KAAMA,KAAKoP,4BAA4B1T,GAAQsE,KAAKykC,iBAC5G,CACAruB,WACI,OAAOpW,KAAKtE,KAChB,CAIA4rC,WAAWvpC,GACP,IAAIkO,EACJ,OAAsC,QAA9BA,EAAKjM,KAAKtE,MAAMwC,gBAA6B,IAAP+N,OAAgB,EAASA,EAAGlO,EAC9E,CAIAyyB,uBACI,OAAOxwB,KAAKtE,MAAMuV,UACtB,CACA2sB,wBACI,OAAO59B,KAAKtE,MAAMf,kBACtB,CACA4sC,wBACI,IAAIt7B,EACJ,OAAOjM,KAAKhC,cAAgBgC,KAA8B,QAAtBiM,EAAKjM,KAAKpE,cAA2B,IAAPqQ,OAAgB,EAASA,EAAGs7B,uBAClG,CACAjS,kBAAkBkS,GAAgB,GAC9B,IAAIv7B,EAAI+U,EACR,GAAIwmB,EACA,OAA8B,QAAtBv7B,EAAKjM,KAAKpE,cAA2B,IAAPqQ,OAAgB,EAASA,EAAGqpB,oBACtE,IAAKt1B,KAAKpC,sBAAuB,CAC7B,MAAMQ,GAAkC,QAAtB4iB,EAAKhhB,KAAKpE,cAA2B,IAAPolB,OAAgB,EAASA,EAAGsU,sBAAwB,CAAC,EAIrG,YAH2B94B,IAAvBwD,KAAKtE,MAAMgB,UACX0B,EAAQ1B,QAAUsD,KAAKtE,MAAMgB,SAE1B0B,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIwa,EAAI,EAAGA,EAAI0rB,GAAiB1rB,IAAK,CACtC,MAAM7a,EAAO,GAAa6a,GACpBna,EAAOuB,KAAKtE,MAAMqC,IACpBV,EAAeoB,KAAkB,IAATA,KACxBL,EAAQL,GAAQU,EAExB,CACA,OAAOL,CACX,CAIAgnC,gBAAgBtxB,GACZ,IAAI7H,EACJ,MAAMw7B,EAAqBznC,KAAKunC,wBAChC,GAAIE,EAEA,OAD8C,QAA7Cx7B,EAAKw7B,EAAmBrU,uBAAoC,IAAPnnB,GAAyBA,EAAGyO,IAAI5G,GAC/E,IAAM2zB,EAAmBrU,gBAAgB9d,OAAOxB,EAE/D,CAIAqP,SAAStiB,EAAKY,GAENzB,KAAKijB,SAASpiB,IACdb,KAAKonC,YAAYvmC,GACrBb,KAAKwQ,OAAO9N,IAAI7B,EAAKY,GACrBzB,KAAKwJ,aAAa3I,GAAOY,EAAMc,MAC/BvC,KAAKqlC,kBAAkBxkC,EAAKY,EAChC,CAIA2lC,YAAYvmC,GACR,IAAIoL,EACJjM,KAAKwQ,OAAO8E,OAAOzU,GACyB,QAA3CoL,EAAKjM,KAAKwkC,mBAAmBjiC,IAAI1B,UAAyB,IAAPoL,GAAyBA,IAC7EjM,KAAKwkC,mBAAmBlvB,OAAOzU,UACxBb,KAAKwJ,aAAa3I,GACzBb,KAAK0nC,2BAA2B7mC,EAAKb,KAAKiP,YAC9C,CAIAgU,SAASpiB,GACL,OAAOb,KAAKwQ,OAAO/N,IAAI5B,EAC3B,CAKAqiB,SAASriB,EAAK0gB,GACV,GAAIvhB,KAAKtE,MAAM8U,QAAUxQ,KAAKtE,MAAM8U,OAAO3P,GACvC,OAAOb,KAAKtE,MAAM8U,OAAO3P,GAE7B,IAAIY,EAAQzB,KAAKwQ,OAAOjO,IAAI1B,GAK5B,YAJcrE,IAAViF,QAAwCjF,IAAjB+kB,IACvB9f,EAAQgd,GAAY8C,EAAc,CAAEnE,MAAOpd,OAC3CA,KAAKmjB,SAAStiB,EAAKY,IAEhBA,CACX,CAMAkmC,UAAU9mC,GACN,YAAkCrE,IAA3BwD,KAAKwJ,aAAa3I,IAAuBb,KAAK3D,QAE/C2D,KAAK4nC,sBAAsB5nC,KAAK3D,QAASwE,EAAKb,KAAKyJ,SADnDzJ,KAAKwJ,aAAa3I,EAE5B,CAKAgnC,cAAchnC,EAAKY,GACfzB,KAAK+kC,WAAWlkC,GAAOY,CAC3B,CAKAk1B,cAAc91B,GACV,IAAIoL,EACJ,MAAM,QAAEvP,GAAYsD,KAAKtE,MACnBosC,EAAsC,iBAAZprC,GAA2C,iBAAZA,EACD,QAAvDuP,EAAKsD,GAAwBvP,KAAKtE,MAAOgB,UAA6B,IAAPuP,OAAgB,EAASA,EAAGpL,QAC5FrE,EAIN,GAAIE,QAAgCF,IAArBsrC,EACX,OAAOA,EAMX,MAAMh9B,EAAS9K,KAAK+nC,uBAAuB/nC,KAAKtE,MAAOmF,GACvD,YAAerE,IAAXsO,GAAyBvH,EAAcuH,QAMRtO,IAA5BwD,KAAKglC,cAAcnkC,SACDrE,IAArBsrC,OACEtrC,EACAwD,KAAK+kC,WAAWlkC,GARXiK,CASf,CACAyS,GAAG5L,EAAW6B,GAIV,OAHKxT,KAAK0c,OAAO/K,KACb3R,KAAK0c,OAAO/K,GAAa,IAAIgK,IAE1B3b,KAAK0c,OAAO/K,GAAW+I,IAAIlH,EACtC,CACA1W,OAAO6U,KAAcq2B,GACjB,IAAI/7B,EAC8B,QAAjCA,EAAKjM,KAAK0c,OAAO/K,UAA+B,IAAP1F,GAAyBA,EAAGnP,UAAUkrC,EACpF,GC/cA7B,yBAAyBpiC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEkkC,wBAAwBjkC,GAAS,GAAK,CACnD,CACA+jC,uBAAuBrsC,EAAOmF,GAC1B,IAAIoL,EACJ,OAA8B,QAAtBA,EAAKvQ,EAAMiO,aAA0B,IAAPsC,OAAgB,EAASA,EAAGpL,EACtE,CACA6mC,2BAA2B7mC,GAAK,KAAE+I,EAAI,MAAED,WAC7BC,EAAK/I,UACL8I,EAAM9I,EACjB,CACAmmC,kCAAiC,WAAE/1B,EAAU,cAAED,KAAkBlG,IAAU,gBAAEK,GAAmB+8B,GAC5F,IAAI/7B,E7DmFZ,SAAmBrB,EAAQmG,EAAYnV,GACnC,IAAImQ,EACJ,MAAME,EAAS,CAAC,EAChB,IAAK,MAAMtL,KAAOiK,EAAQ,CACtB,MAAMq9B,EAAmB7kB,GAAwBziB,EAAKoQ,GACtD9E,EAAOtL,QACkBrE,IAArB2rC,EACMA,EACuC,QAAtCl8B,EAAKnQ,EAAconB,SAASriB,UAAyB,IAAPoL,OAAgB,EAASA,EAAG1J,KACzF,CACA,OAAO4J,CACX,C6D9FqBi8B,CAAUt9B,EAAQmG,GAAc,CAAC,EAAGjR,MAYjD,GARImL,IACI6F,IACAA,EAAgB7F,EAAgB6F,IAChClG,IACAA,EAASK,EAAgBL,IACzBqB,IACAA,EAAShB,EAAgBgB,KAE7B+7B,EAAW,E7DkBvB,SAAiCpsC,EAAegP,EAAQqB,GACpD,IAAIF,EAAI+U,EACR,MAAMqnB,EAAeprC,OAAOqQ,KAAKxC,GAAQ2W,QAAQ5gB,IAAS/E,EAAcmnB,SAASpiB,KAC3EynC,EAAeD,EAAa5iC,OAClC,GAAK6iC,EAEL,IAAK,IAAI1vB,EAAI,EAAGA,EAAI0vB,EAAc1vB,IAAK,CACnC,MAAM/X,EAAMwnC,EAAazvB,GACnB2vB,EAAcz9B,EAAOjK,GAC3B,IAAIY,EAAQ,KAKRlE,MAAMC,QAAQ+qC,KACd9mC,EAAQ8mC,EAAY,IAOV,OAAV9mC,IACAA,EAAoG,QAA3Fuf,EAA4B,QAAtB/U,EAAKE,EAAOtL,UAAyB,IAAPoL,EAAgBA,EAAKnQ,EAAc6rC,UAAU9mC,UAAyB,IAAPmgB,EAAgBA,EAAKlW,EAAOjK,IAMxIY,UAEiB,iBAAVA,IxBhFc,iBAAiBsB,KwBiFnBtB,IAAUoX,GAAkBpX,IAE/CA,EAAQkD,WAAWlD,IAEbohB,GAAcphB,IAAUsf,GAAQhe,KAAKwlC,KAC3C9mC,EAAQ,GAAkBZ,EAAK0nC,IAEnCzsC,EAAcqnB,SAAStiB,EAAK4d,GAAYhd,EAAO,CAAE2b,MAAOthB,UACpCU,IAAhB2P,EAAOtL,KACPsL,EAAOtL,GAAOY,GAEJ,OAAVA,GACA3F,EAAc+rC,cAAchnC,EAAKY,GACzC,CACJ,C6D/DY+mC,CAAwBxoC,KAAM8K,EAAQqB,GACtC,MAAM+U,EAAS6iB,GAAgB/jC,KAAM8K,EAAQqB,EAAQ6E,GACrDA,EAAgBkQ,EAAOlQ,cACvBlG,EAASoW,EAAOpW,MACpB,CACA,MAAO,CACHmG,aACAD,mBACGlG,EAEX,EGjCJ,MAAM29B,WAA0BlE,GAC5BqD,sBAAsBjmC,EAAUd,GAC5B,GAAIqC,EAAeT,IAAI5B,GAAM,CACzB,MAAM6nC,EAAcpmB,GAAoBzhB,GACxC,OAAO6nC,GAAcA,EAAY5jC,SAAe,CACpD,CACK,CACD,MAAM6jC,GAVQj6B,EAUyB/M,EATxCkW,OAAOypB,iBAAiB5yB,IAUjBjN,GAASwC,EAAcpD,GACvB8nC,EAAcpH,iBAAiB1gC,GAC/B8nC,EAAc9nC,KAAS,EAC7B,MAAwB,iBAAVY,EAAqBA,EAAMiJ,OAASjJ,CACtD,CAfR,IAA0BiN,CAgBtB,CACAm4B,2BAA2BllC,GAAU,mBAAEhH,IACnC,OAAOqhC,GAAmBr6B,EAAUhH,EACxC,CACAisC,MAAM33B,EAAazF,EAAcC,EAAS/N,GACtC4N,GAAgB2F,EAAazF,EAAcC,EAAS/N,EAAMgO,kBAC9D,CACA0F,4BAA4B1T,GACxB,OAAO0T,GAA4B1T,EACvC,CACAmpC,eAAeljC,EAAUsN,EAAaN,EAAWC,GAC7CH,GAAW9M,EAAUsN,EAAaN,EAAWC,EACjD,EC1BJ,MAAMg6B,WAAyBrE,GAC3B3oB,cACIitB,SAASC,WACT9oC,KAAK+M,UAAW,CACpB,CACAg7B,uBAAuBrsC,EAAOmF,GAC1B,OAAOnF,EAAMmF,EACjB,CACA+mC,sBAAsBjmC,EAAUd,GAC5B,IAAIoL,EACJ,OAAI/I,EAAeT,IAAI5B,IACyB,QAAnCoL,EAAKqW,GAAoBzhB,UAAyB,IAAPoL,OAAgB,EAASA,EAAGnH,UAAY,GAEhGjE,EAAOkO,GAAoBtM,IAAI5B,GAA0BA,EAAnByN,GAAYzN,GAC3Cc,EAASonC,aAAaloC,GACjC,CACAgmC,6BACI,MbjBgB,CACpBnjC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,GamBrC,CACA6K,4BAA4B1T,GACxB,OAAO,GAA4BA,EACvC,CACAkrC,MAAM33B,EAAazF,EAAcC,EAAS/N,GACtC8Q,GAAcyC,EAAazF,EAAcC,EAASzJ,KAAK+M,SAAUrR,EAAMgO,kBAC3E,CACAm7B,eAAeljC,EAAUsN,EAAaN,EAAWC,GAC7CI,GAAUrN,EAAUsN,EAAaN,EAAWC,EAChD,CACAhN,MAAMD,GACF3B,KAAK+M,SAAWA,GAASpL,EAAS4P,SAClCs3B,MAAMjnC,MAAMD,EAChB,ECtCJ,MAAM,GAAyB,CAACnG,EAAWiO,IAChC7G,EAAepH,GAChB,IAAIotC,GAAiBn/B,EAAS,CAAEY,4BAA4B,IAC5D,IAAIo+B,GAAkBh/B,EAAS,CAAEY,4BAA4B,ICLvE,SAAS2+B,GAAgBC,EAAQ/P,GAC7B,OAAIA,EAAK30B,MAAQ20B,EAAK50B,IACX,EACH2kC,GAAU/P,EAAK30B,IAAM20B,EAAK50B,KAAQ,GAC9C,CAQA,MAAM4kC,GAAsB,CACxBC,QAAS,CAACr8B,EAAQs8B,KACd,IAAKA,EAAKt+B,OACN,OAAOgC,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAIlH,GAAG7C,KAAK+J,GAIR,OAAOA,EAHPA,EAASnI,WAAWmI,EAK5B,CAOA,MAAO,GAFGk8B,GAAgBl8B,EAAQs8B,EAAKt+B,OAAOpH,OACpCslC,GAAgBl8B,EAAQs8B,EAAKt+B,OAAOnH,KAC1B,GChCtB0lC,GAAW,QACXC,GAAmB,CACrBH,QAAS,CAACr8B,GAAUy8B,YAAWC,sBAC3B,MAAMC,EAAW38B,EAIX48B,EAAuB58B,EAAOjK,SAAS,QACvC8mC,EAAe,GACjBD,IACA58B,EAASA,EAAO0B,QAAQwyB,IAAmBhiB,IACvC2qB,EAAav/B,KAAK4U,GACXqqB,OAGf,MAAMO,EAAS7oB,GAAQrc,MAAMoI,GAE7B,GAAI88B,EAAOnkC,OAAS,EAChB,OAAOgkC,EACX,MAAM3jB,EAAW/E,GAAQJ,kBAAkB7T,GACrCV,EAA8B,iBAAdw9B,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgB9lC,EAAEmB,MAAQ0kC,EAAU7lC,EAC7ComC,EAASN,EAAgB7lC,EAAEkB,MAAQ0kC,EAAU5lC,EACnDimC,EAAO,EAAIx9B,IAAWy9B,EACtBD,EAAO,EAAIx9B,IAAW09B,EAOtB,MAAMC,EAAej6B,GAAI+5B,EAAQC,EAAQ,IAEP,iBAAvBF,EAAO,EAAIx9B,KAClBw9B,EAAO,EAAIx9B,IAAW29B,GAEQ,iBAAvBH,EAAO,EAAIx9B,KAClBw9B,EAAO,EAAIx9B,IAAW29B,GAC1B,IAAIlpB,EAASiF,EAAS8jB,GACtB,GAAIF,EAAsB,CACtB,IAAI9wB,EAAI,EACRiI,EAASA,EAAOrS,QAAQ66B,IAAU,KAC9B,MAAMW,EAAcL,EAAa/wB,GAEjC,OADAA,IACOoxB,CAAW,GAE1B,CACA,OAAOnpB,CAAM,GC1CrB,MAAMopB,WAAiC,YAMnCC,oBACI,MAAM,cAAEpuC,EAAa,YAAEquC,EAAW,kBAAEC,EAAiB,SAAEjpC,GAAanB,KAAKtE,OACnE,WAAEkT,GAAe9S,EtJjB/B,IAA2BuuC,IsJkBDC,GtJjBtBrtC,OAAOgO,OAAOjI,EAAiBqnC,GsJkBvBz7B,IACIu7B,EAAYI,OACZJ,EAAYI,MAAM7vB,IAAI9L,GACtBw7B,GAAqBA,EAAkB9xB,UAAYnX,GACnDipC,EAAkB9xB,SAAS1J,GAE/BA,EAAWkG,KAAK01B,YAChB57B,EAAWkD,iBAAiB,qBAAqB,KAC7C9R,KAAKg3B,cAAc,IAEvBpoB,EAAW43B,WAAW,IACf53B,EAAWnF,QACd4O,eAAgB,IAAMrY,KAAKg3B,kBAGnCt3B,EAAsBE,gBAAiB,CAC3C,CACAG,wBAAwB0qC,GACpB,MAAM,iBAAEC,EAAgB,cAAE5uC,EAAa,KAAEoD,EAAI,UAAEkZ,GAAcpY,KAAKtE,MAC5DkT,EAAa9S,EAAc8S,WACjC,OAAKA,GASLA,EAAWwJ,UAAYA,EACnBlZ,GACAurC,EAAUC,mBAAqBA,QACVluC,IAArBkuC,EACA97B,EAAW+7B,aAGX3qC,KAAKg3B,eAELyT,EAAUryB,YAAcA,IACpBA,EACAxJ,EAAWg8B,UAELh8B,EAAWi8B,YAMjB7vB,GAAK4B,YAAW,KACZ,IAAI3Q,GACmC,QAAhCA,EAAK2C,EAAWk8B,kBAA+B,IAAP7+B,OAAgB,EAASA,EAAG8+B,QAAQtlC,SAC/EzF,KAAKg3B,cACT,KAIL,MAnCI,IAoCf,CACA92B,qBACI,MAAM,WAAE0O,GAAe5O,KAAKtE,MAAMI,cAC9B8S,IACAA,EAAWkG,KAAK01B,aACX57B,EAAWkjB,kBAAoBljB,EAAWo8B,UAC3ChrC,KAAKg3B,eAGjB,CACAiU,uBACI,MAAM,cAAEnvC,EAAa,YAAEquC,EAAaC,kBAAmBc,GAAoBlrC,KAAKtE,OAC1E,WAAEkT,GAAe9S,EACnB8S,IACAA,EAAWu8B,6BACPhB,aAAiD,EAASA,EAAYI,QACtEJ,EAAYI,MAAMpW,OAAOvlB,IACzBs8B,aAAuD,EAASA,EAAeE,aAC/EF,EAAeE,WAAWx8B,GAEtC,CACAooB,eACI,MAAM,aAAEA,GAAiBh3B,KAAKtE,MAC9Bs7B,SAA4DA,GAChE,CACAr6B,SACI,OAAO,IACX,EAOJ,MAAM2tC,GAAyB,CAC3BhkC,aAAc,IACP4iC,GACHmC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGR7kC,oBAAqB0iC,GACrBziC,qBAAsByiC,GACtBviC,uBAAwBuiC,GACxBxiC,wBAAyBwiC,GACzBoC,UAAWhC,IC3HTiC,GAAiB,CACnBxsC,cDuGJ,SAAuBrD,GACnB,MAAO0c,EAAW4e,GAAgB7e,KAC5BgyB,GAAc,IAAAtuC,YAAWgE,GAC/B,OAAQ,gBAA6BoqC,GAA0B,IAAKvuC,EAAOyuC,YAAaA,EAAaC,mBAAmB,IAAAvuC,YAAWuE,GAA2BgY,UAAWA,EAAW4e,aAAcA,GACtM,GExGA,MAAMwU,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ/lC,OACrBimC,GAAYjqC,GAA2B,iBAAVA,EAAqBkD,WAAWlD,GAASA,EACtEkqC,GAAQlqC,GAA2B,iBAAVA,GAAsBmE,GAAG7C,KAAKtB,GA0C7D,SAASmqC,GAAUp7B,EAAQq7B,GACvB,YAA8BrvC,IAAvBgU,EAAOq7B,GACRr7B,EAAOq7B,GACPr7B,EAAOlK,YACjB,CAwBA,MAAMwlC,GAAkBC,GAAS,EAAG,GAAKxjB,IACnCyjB,GAAmBD,GAAS,GAAK,IAAM7kB,IAC7C,SAAS6kB,GAASznC,EAAKC,EAAK4f,GACxB,OAAQvpB,GAEAA,EAAI0J,EACG,EACP1J,EAAI2J,EACG,EACJ4f,EAAOM,GAASngB,EAAKC,EAAK3J,GAEzC,CCrFA,SAASqxC,GAAa/S,EAAMgT,GACxBhT,EAAK50B,IAAM4nC,EAAW5nC,IACtB40B,EAAK30B,IAAM2nC,EAAW3nC,GAC1B,CAMA,SAAS4nC,GAAYhR,EAAKiR,GACtBH,GAAa9Q,EAAIz3B,EAAG0oC,EAAU1oC,GAC9BuoC,GAAa9Q,EAAIx3B,EAAGyoC,EAAUzoC,EAClC,CCVA,SAAS0oC,GAAiB/5B,EAAOinB,EAAW10B,EAAOy0B,EAAa0B,GAM5D,OAJA1oB,EAAQwoB,GADRxoB,GAASinB,EACiB,EAAI10B,EAAOy0B,QACpB98B,IAAbw+B,IACA1oB,EAAQwoB,GAAWxoB,EAAO,EAAI0oB,EAAU1B,IAErChnB,CACX,CAsBA,SAASg6B,GAAqBpT,EAAMuC,GAAa56B,EAAK66B,EAAUC,GAAYxvB,EAAQogC,IAlBpF,SAAyBrT,EAAMK,EAAY,EAAG10B,EAAQ,EAAGsH,EAAS,GAAK6uB,EAAUkR,EAAahT,EAAMqT,EAAarT,GACzGvzB,EAAQ5C,KAAKw2B,KACbA,EAAY50B,WAAW40B,GAEvBA,EADyBzpB,GAAIy8B,EAAWjoC,IAAKioC,EAAWhoC,IAAKg1B,EAAY,KAC1CgT,EAAWjoC,KAE9C,GAAyB,iBAAdi1B,EACP,OACJ,IAAID,EAAcxpB,GAAIo8B,EAAW5nC,IAAK4nC,EAAW3nC,IAAK4H,GAClD+sB,IAASgT,IACT5S,GAAeC,GACnBL,EAAK50B,IAAM+nC,GAAiBnT,EAAK50B,IAAKi1B,EAAW10B,EAAOy0B,EAAa0B,GACrE9B,EAAK30B,IAAM8nC,GAAiBnT,EAAK30B,IAAKg1B,EAAW10B,EAAOy0B,EAAa0B,EACzE,CAMIwR,CAAgBtT,EAAMuC,EAAW56B,GAAM46B,EAAWC,GAAWD,EAAWE,GAAYF,EAAW52B,MAAOsH,EAAQogC,EAClH,CAIA,MAAM,GAAQ,CAAC,IAAK,SAAU,WACxB,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASE,GAAoBtR,EAAKM,EAAY2Q,EAAWM,GACrDJ,GAAqBnR,EAAIz3B,EAAG+3B,EAAY,GAAO2Q,aAA6C,EAASA,EAAU1oC,EAAGgpC,aAA6C,EAASA,EAAUhpC,GAClL4oC,GAAqBnR,EAAIx3B,EAAG83B,EAAY,GAAO2Q,aAA6C,EAASA,EAAUzoC,EAAG+oC,aAA6C,EAASA,EAAU/oC,EACtL,CCjDA,SAASgpC,GAAgB5zB,GACrB,OAA2B,IAApBA,EAAMwgB,WAAmC,IAAhBxgB,EAAMlU,KAC1C,CACA,SAAS+nC,GAAY7zB,GACjB,OAAO4zB,GAAgB5zB,EAAMrV,IAAMipC,GAAgB5zB,EAAMpV,EAC7D,CACA,SAASkpC,GAAU9oC,EAAGC,GAClB,OAAQD,EAAEL,EAAEY,MAAQN,EAAEN,EAAEY,KACpBP,EAAEL,EAAEa,MAAQP,EAAEN,EAAEa,KAChBR,EAAEJ,EAAEW,MAAQN,EAAEL,EAAEW,KAChBP,EAAEJ,EAAEY,MAAQP,EAAEL,EAAEY,GACxB,CACA,SAASuoC,GAAY3R,GACjB,OAAOlC,GAAWkC,EAAIz3B,GAAKu1B,GAAWkC,EAAIx3B,EAC9C,CCdA,MAAMopC,GACFnxB,cACI5b,KAAK+qC,QAAU,EACnB,CACArwB,IAAI0uB,GACA7tB,GAAcvb,KAAK+qC,QAAS3B,GAC5BA,EAAKtE,gBACT,CACA3Q,OAAOiV,GAKH,GAJA1tB,GAAW1b,KAAK+qC,QAAS3B,GACrBA,IAASppC,KAAKgtC,WACdhtC,KAAKgtC,cAAWxwC,GAEhB4sC,IAASppC,KAAKitC,KAAM,CACpB,MAAMD,EAAWhtC,KAAK+qC,QAAQ/qC,KAAK+qC,QAAQtlC,OAAS,GAChDunC,GACAhtC,KAAK4qC,QAAQoC,EAErB,CACJ,CACAnC,SAASzB,GACL,MAAM8D,EAAcltC,KAAK+qC,QAAQoC,WAAWC,GAAWhE,IAASgE,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIp0B,EAAIs0B,EAAat0B,GAAK,EAAGA,IAAK,CACnC,MAAMw0B,EAASptC,KAAK+qC,QAAQnyB,GAC5B,IAAyB,IAArBw0B,EAAOh1B,UAAqB,CAC5B40B,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAhtC,KAAK4qC,QAAQoC,IACN,EAKf,CACApC,QAAQxB,EAAMiE,GACV,IAAIphC,EACJ,MAAM+gC,EAAWhtC,KAAKitC,KACtB,GAAI7D,IAAS4D,IAEbhtC,KAAKgtC,SAAWA,EAChBhtC,KAAKitC,KAAO7D,EACZA,EAAKkE,OACDN,GAAU,CACVA,EAASrrC,UAAYqrC,EAASlI,iBAC9BsE,EAAKtE,iBACLsE,EAAKmE,WAAaP,EACdK,IACAjE,EAAKmE,WAAWC,iBAAkB,GAElCR,EAASS,WACTrE,EAAKqE,SAAWT,EAASS,SACzBrE,EAAKqE,SAASjkC,aACVwjC,EAASU,iBAAmBV,EAASxjC,eAEpB,QAApByC,EAAKm9B,EAAKt0B,YAAyB,IAAP7I,OAAgB,EAASA,EAAG0hC,cACzDvE,EAAKwE,eAAgB,GAEzB,MAAM,UAAEC,GAAczE,EAAK3/B,SACT,IAAdokC,GACAb,EAASc,MAcjB,CACJ,CACAC,wBACI/tC,KAAK+qC,QAAQj6B,SAASs4B,IAClB,IAAIn9B,EAAI+U,EAAI4kB,EAAIoI,EAAIC,EAC0B,QAA7CjtB,GAAM/U,EAAKm9B,EAAK3/B,SAAS4O,sBAAmC,IAAP2I,GAAyBA,EAAG5jB,KAAK6O,GACmB,QAAzGgiC,EAAkC,QAA5BrI,EAAKwD,EAAK8E,oBAAiC,IAAPtI,OAAgB,GAAUoI,EAAKpI,EAAGn8B,SAAS4O,sBAAmC,IAAP41B,GAAyBA,EAAG7wC,KAAK4wC,EAAG,GAE9J,CACAlJ,iBACI9kC,KAAK+qC,QAAQj6B,SAASs4B,IAClBA,EAAKznC,UAAYynC,EAAKtE,gBAAe,EAAM,GAEnD,CAKAqJ,qBACQnuC,KAAKitC,MAAQjtC,KAAKitC,KAAKQ,WACvBztC,KAAKitC,KAAKQ,cAAWjxC,EAE7B,EC1GJ,SAAS4xC,GAAyBr1B,EAAOwwB,EAAW8E,GAChD,IAAIjqC,EAAY,GAOhB,MAAMkqC,EAAav1B,EAAMrV,EAAE61B,UAAYgQ,EAAU7lC,EAC3C6qC,EAAax1B,EAAMpV,EAAE41B,UAAYgQ,EAAU5lC,EAWjD,IAVI2qC,GAAcC,KACdnqC,EAAY,eAAekqC,QAAiBC,YAM5B,IAAhBhF,EAAU7lC,GAA2B,IAAhB6lC,EAAU5lC,IAC/BS,GAAa,SAAS,EAAImlC,EAAU7lC,MAAM,EAAI6lC,EAAU5lC,OAExD0qC,EAAiB,CACjB,MAAM,OAAEtmC,EAAM,QAAEC,EAAO,QAAEC,GAAYomC,EACjCtmC,IACA3D,GAAa,UAAU2D,UACvBC,IACA5D,GAAa,WAAW4D,UACxBC,IACA7D,GAAa,WAAW6D,SAChC,CAKA,MAAMumC,EAAgBz1B,EAAMrV,EAAEmB,MAAQ0kC,EAAU7lC,EAC1C+qC,EAAgB11B,EAAMpV,EAAEkB,MAAQ0kC,EAAU5lC,EAIhD,OAHsB,IAAlB6qC,GAAyC,IAAlBC,IACvBrqC,GAAa,SAASoqC,MAAkBC,MAErCrqC,GAAa,MACxB,CCvCA,MAAMsqC,GAAiB,CAAC3qC,EAAGC,IAAMD,EAAEm9B,MAAQl9B,EAAEk9B,MCG7C,MAAMyN,GACF/yB,cACI5b,KAAKG,SAAW,GAChBH,KAAK4uC,SAAU,CACnB,CACAl0B,IAAI5G,GACAyH,GAAcvb,KAAKG,SAAU2T,GAC7B9T,KAAK4uC,SAAU,CACnB,CACAza,OAAOrgB,GACH4H,GAAW1b,KAAKG,SAAU2T,GAC1B9T,KAAK4uC,SAAU,CACnB,CACA99B,QAAQ0C,GACJxT,KAAK4uC,SAAW5uC,KAAKG,SAASsK,KAAKikC,IACnC1uC,KAAK4uC,SAAU,EACf5uC,KAAKG,SAAS2Q,QAAQ0C,EAC1B,ECEJ,MAAMq7B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,IAAI,GAAK,EACT,SAASC,IAAqB,qBAAEC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,IACnG,OAAO,MACHvzB,YAAYwzB,EAAW5lC,EAAe,CAAC,EAAG5N,GAASozC,aAAqD,EAASA,MAI7GhvC,KAAKzD,GAAK,KAIVyD,KAAK2jB,YAAc,EAOnB3jB,KAAKG,SAAW,IAAIgD,IAKpBnD,KAAKyJ,QAAU,CAAC,EAMhBzJ,KAAKqvC,iBAAkB,EACvBrvC,KAAKk9B,oBAAqB,EAO1Bl9B,KAAK4tC,eAAgB,EACrB5tC,KAAKgmC,kBAAmB,EAKxBhmC,KAAKsvC,mBAAoB,EAIzBtvC,KAAKuvC,uBAAwB,EAC7BvvC,KAAKwvC,uBAAwB,EAK7BxvC,KAAK2tC,YAAa,EAIlB3tC,KAAKyvC,OAAQ,EAKbzvC,KAAK0vC,YAAa,EAIlB1vC,KAAK2vC,sBAAuB,EAS5B3vC,KAAKupC,UAAY,CAAE7lC,EAAG,EAAGC,EAAG,GAI5B3D,KAAK4vC,cAAgB,IAAIttC,IAEzBtC,KAAK6vC,eAAiB,IAAIvtC,IAC1BtC,KAAK8vC,kBAAoB,KACjB9vC,KAAK2tC,aACL3tC,KAAK2tC,YAAa,EAClB3tC,KAAK+vC,oBACT,EAOJ/vC,KAAKgwC,iBAAmB,KACpBhwC,KAAKiwC,MAAMn/B,QAAQo/B,IACnBlwC,KAAKiwC,MAAMn/B,QAAQq/B,IACnBnwC,KAAKiwC,MAAMn/B,QAAQs/B,GAAe,EAEtCpwC,KAAKqwC,cAAe,EACpBrwC,KAAKswC,WAAY,EACjBtwC,KAAKuwC,kBAAoB,EAKzBvwC,KAAKwwC,YAAc,IAAIluC,IACvBtC,KAAKovC,UAAYA,EACjBpvC,KAAKwJ,aAAeA,EACpBxJ,KAAK8U,KAAOlZ,EAASA,EAAOkZ,MAAQlZ,EAASoE,KAC7CA,KAAKywC,KAAO70C,EAAS,IAAIA,EAAO60C,KAAM70C,GAAU,GAChDoE,KAAKpE,OAASA,EACdoE,KAAKkhC,MAAQtlC,EAASA,EAAOslC,MAAQ,EAAI,EACzCkO,GAAapvC,KAAK8U,KAAK47B,sBAAsBtB,EAAWpvC,MACxD,IAAK,IAAI4Y,EAAI,EAAGA,EAAI5Y,KAAKywC,KAAKhrC,OAAQmT,IAClC5Y,KAAKywC,KAAK73B,GAAG+2B,sBAAuB,EAEpC3vC,KAAK8U,OAAS9U,OACdA,KAAKiwC,MAAQ,IAAItB,GACzB,CACA78B,iBAAiB/T,EAAM6T,GAInB,OAHK5R,KAAK4vC,cAAcntC,IAAI1E,IACxBiC,KAAK4vC,cAAcltC,IAAI3E,EAAM,IAAI4d,IAE9B3b,KAAK4vC,cAAcrtC,IAAIxE,GAAM2c,IAAI9I,EAC5C,CACA++B,gBAAgB5yC,KAASiqC,GACrB,MAAM4I,EAAsB5wC,KAAK4vC,cAAcrtC,IAAIxE,GACnD6yC,SAA0EA,EAAoB9zC,UAAUkrC,EAC5G,CACA6I,aAAa9yC,GACT,OAAOiC,KAAK4vC,cAAcntC,IAAI1E,EAClC,CACA2yC,sBAAsBtB,EAAWhG,GAC7BppC,KAAK6vC,eAAentC,IAAI0sC,EAAWhG,EACvC,CAIAxnC,MAAMD,EAAUisC,GAAgB,GAC5B,IAAI3hC,EACJ,GAAIjM,KAAK2B,SACL,OACJ3B,KAAKyvC,MACD9tC,aAAoBmvC,YAAmC,QAArBnvC,EAAS4P,QAC/CvR,KAAK2B,SAAWA,EAChB,MAAM,SAAER,EAAQ,OAAEkC,EAAM,cAAEvH,GAAkBkE,KAAKyJ,QAUjD,GATI3N,IAAkBA,EAAcO,SAChCP,EAAc8F,MAAMD,GAExB3B,KAAK8U,KAAKm7B,MAAMv1B,IAAI1a,MACG,QAAtBiM,EAAKjM,KAAKpE,cAA2B,IAAPqQ,GAAyBA,EAAG9L,SAASua,IAAI1a,MACxEA,KAAKovC,WAAapvC,KAAK8U,KAAK+6B,eAAev6B,OAAOtV,KAAKovC,WACnDxB,IAAkBvqC,GAAUlC,KAC5BnB,KAAK4tC,eAAgB,GAErBmB,EAAsB,CACtB,IAAIgC,EACJ,MAAMC,EAAsB,IAAOhxC,KAAK8U,KAAK06B,uBAAwB,EACrET,EAAqBptC,GAAU,KAC3B3B,KAAK8U,KAAK06B,uBAAwB,EAClCuB,GAAeA,IACfA,EAAcrjB,GAAMsjB,EAAqB,KACrCtxC,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/CK,KAAKiwC,MAAMn/B,QAAQmgC,IACvB,GAER,CACI9vC,GACAnB,KAAK8U,KAAKo8B,mBAAmB/vC,EAAUnB,OAGd,IAAzBA,KAAKyJ,QAAQ5L,SACb/B,IACCqF,GAAYkC,IACbrD,KAAK8R,iBAAiB,aAAa,EAAGiH,QAAOynB,mBAAkB2Q,2BAA0B9tC,OAAQ+tC,MAC7F,IAAInlC,EAAI+U,EAAI4kB,EAAIoI,EAAIC,EACpB,GAAIjuC,KAAKqxC,yBAGL,OAFArxC,KAAK8K,YAAStO,OACdwD,KAAKsxC,oBAAiB90C,GAI1B,MAAM+0C,EAAmI,QAA/GvwB,EAAwC,QAAlC/U,EAAKjM,KAAKyJ,QAAQwH,kBAA+B,IAAPhF,EAAgBA,EAAKnQ,EAAc00B,8BAA2C,IAAPxP,EAAgBA,EAAKwwB,IAChK,uBAAEC,EAAsB,0BAAEC,GAA+B51C,EAAcsa,WAKvEu7B,GAAiB3xC,KAAK4xC,eACvB/E,GAAU7sC,KAAK4xC,aAAcR,IAC9BD,EAMEU,GAAgCrR,GAAoB2Q,EAC1D,IAAgC,QAA1BvL,EAAK5lC,KAAKutC,kBAA+B,IAAP3H,OAAgB,EAASA,EAAGjkC,WAChEkwC,GACCrR,IACImR,IAAkB3xC,KAAK8xB,kBAAoB,CAC5C9xB,KAAKutC,aACLvtC,KAAKkuC,aAAeluC,KAAKutC,WACzBvtC,KAAKkuC,aAAaA,kBAAe1xC,GAErCwD,KAAK8xC,mBAAmB/4B,EAAO84B,GAC/B,MAAME,EAAmB,IAClBjhB,GAAmBygB,EAAkB,UACxCnjB,OAAQqjB,EACRnjB,WAAYojB,GAEZ51C,EAAcm4B,qBACd8d,EAAiBrkB,MAAQ,EACzBqkB,EAAiB5tC,MAAO,GAE5BnE,KAAKiyB,eAAe8f,EACxB,MAOSvR,GAC0B,IAA3BxgC,KAAKuwC,mBACLU,GAAgBjxC,MAEpBA,KAAKgrC,WAA2D,QAA7CiD,GAAMD,EAAKhuC,KAAKyJ,SAAS4O,sBAAmC,IAAP41B,GAAyBA,EAAG7wC,KAAK4wC,IAE7GhuC,KAAK4xC,aAAeR,CAAS,GAGzC,CACAvvC,UACI,IAAIoK,EAAI+U,EACRhhB,KAAKyJ,QAAQtI,UAAYnB,KAAK2qC,aAC9B3qC,KAAK8U,KAAKm7B,MAAM9b,OAAOn0B,MACI,QAA1BiM,EAAKjM,KAAK8qC,kBAA+B,IAAP7+B,GAAyBA,EAAGkoB,OAAOn0B,MAC/C,QAAtBghB,EAAKhhB,KAAKpE,cAA2B,IAAPolB,GAAyBA,EAAG7gB,SAASmV,OAAOtV,MAC3EA,KAAK2B,cAAWnF,EAChB0e,GAAW82B,UAAUhyC,KAAKgwC,iBAC9B,CAEAiC,cACIjyC,KAAKuvC,uBAAwB,CACjC,CACA2C,gBACIlyC,KAAKuvC,uBAAwB,CACjC,CACA4C,kBACI,OAAOnyC,KAAKuvC,uBAAyBvvC,KAAKwvC,qBAC9C,CACA6B,yBACI,IAAIplC,EACJ,OAAQjM,KAAKk9B,qBACe,QAAtBjxB,EAAKjM,KAAKpE,cAA2B,IAAPqQ,OAAgB,EAASA,EAAGolC,4BAC5D,CACR,CAEAe,cACI,IAAInmC,EACAjM,KAAKmyC,oBAETnyC,KAAK2tC,YAAa,EACI,QAArB1hC,EAAKjM,KAAKiwC,aAA0B,IAAPhkC,GAAyBA,EAAG6E,QAAQuhC,IAClEryC,KAAK2jB,cACT,CACAgnB,WAAW2H,GAAwB,GAC/B,IAAIrmC,EAAI+U,EAAI4kB,EACZ,GAAI5lC,KAAK8U,KAAKq9B,kBAEV,YAD8C,QAA7CnxB,GAAM/U,EAAKjM,KAAKyJ,SAAS4O,sBAAmC,IAAP2I,GAAyBA,EAAG5jB,KAAK6O,IAI3F,IADCjM,KAAK8U,KAAK64B,YAAc3tC,KAAK8U,KAAKs9B,cAC/BpyC,KAAK4tC,cACL,OACJ5tC,KAAK4tC,eAAgB,EACrB,IAAK,IAAIh1B,EAAI,EAAGA,EAAI5Y,KAAKywC,KAAKhrC,OAAQmT,IAAK,CACvC,MAAMwwB,EAAOppC,KAAKywC,KAAK73B,GACvBwwB,EAAKuG,sBAAuB,EAC5BvG,EAAKpJ,aAAa,WACtB,CACA,MAAM,SAAE7+B,EAAQ,OAAEkC,GAAWrD,KAAKyJ,QAClC,QAAiBjN,IAAb2E,IAA2BkC,EAC3B,OACJ,MAAMqG,EAA0D,QAArCk8B,EAAK5lC,KAAKyJ,QAAQ3N,qBAAkC,IAAP8pC,OAAgB,EAASA,EAAGxvB,WAAW1M,kBAC/G1J,KAAKuyC,2BAA6B7oC,aAA6D,EAASA,EAAkB1J,KAAKwJ,aAAc,IAC7IxJ,KAAKwyC,iBACLF,GAAyBtyC,KAAK2wC,gBAAgB,aAClD,CAEAnG,YAKI,GAJyBxqC,KAAKmyC,kBAQ1B,OAHAnyC,KAAKkyC,gBACLlyC,KAAK+vC,yBACL/vC,KAAKiwC,MAAMn/B,QAAQ2hC,IAGlBzyC,KAAK2tC,aAEV3tC,KAAK2tC,YAAa,EAOd3tC,KAAK6vC,eAAe7oC,OACpBhH,KAAK6vC,eAAe/+B,QAAQ4hC,IAC5B1yC,KAAK6vC,eAAe5zB,SAKxBjc,KAAKiwC,MAAMn/B,QAAQ6hC,IAKnB3yC,KAAKiwC,MAAMn/B,QAAQmvB,IAKnBjgC,KAAKiwC,MAAMn/B,QAAQ8hC,IACnB5yC,KAAK+vC,oBAEL50B,GAAUyS,SACVzS,GAAU62B,YACV72B,GAAUxe,SACd,CACAozC,oBACI/vC,KAAKiwC,MAAMn/B,QAAQ+hC,IACnB7yC,KAAKwwC,YAAY1/B,QAAQgiC,GAC7B,CACAC,2BACI/3B,GAAKg3B,UAAUhyC,KAAKgwC,kBAAkB,GAAO,EACjD,CACA7E,4BAMInwB,GAAK4B,YAAW,KACR5c,KAAK4tC,cACL5tC,KAAK8U,KAAK01B,YAGVxqC,KAAK8U,KAAKg7B,mBACd,GAER,CAIA0C,kBACQxyC,KAAKytC,UAAaztC,KAAK2B,WAE3B3B,KAAKytC,SAAWztC,KAAKgzC,UACzB,CACA/S,eACI,IAAIh0B,EACJ,IAAKjM,KAAK2B,SACN,OAGJ,GADA3B,KAAKggC,iBACChgC,KAAKyJ,QAAQg9B,qBAAuBzmC,KAAKgrC,UAC1ChrC,KAAK4tC,eACN,OASJ,GAAI5tC,KAAKutC,aAAevtC,KAAKutC,WAAW5rC,SACpC,IAAK,IAAIiX,EAAI,EAAGA,EAAI5Y,KAAKywC,KAAKhrC,OAAQmT,IAAK,CAC1B5Y,KAAKywC,KAAK73B,GAClBonB,cACT,CAEJ,MAAMiT,EAAajzC,KAAKqD,OACxBrD,KAAKqD,OAASrD,KAAKgzC,SAAQ,GAC3BhzC,KAAKkzC,gB3BxZO,CACpBxvC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2B0Z7BvE,KAAK4tC,eAAgB,EACrB5tC,KAAKwpC,qBAAkBhtC,EACvBwD,KAAK2wC,gBAAgB,UAAW3wC,KAAKqD,OAAOg6B,WACN,QAArCpxB,EAAKjM,KAAKyJ,QAAQ3N,qBAAkC,IAAPmQ,GAAyBA,EAAGnP,OAAO,gBAAiBkD,KAAKqD,OAAOg6B,UAAW4V,aAA+C,EAASA,EAAW5V,UAChM,CACA2C,aAAamT,EAAQ,WACjB,IAAIC,EAAmBn1C,QAAQ+B,KAAKyJ,QAAQ88B,cAAgBvmC,KAAK2B,UAC7D3B,KAAK8+B,QACL9+B,KAAK8+B,OAAOnb,cAAgB3jB,KAAK8U,KAAK6O,aACtC3jB,KAAK8+B,OAAOqU,QAAUA,IACtBC,GAAmB,GAEnBA,IACApzC,KAAK8+B,OAAS,CACVnb,YAAa3jB,KAAK8U,KAAK6O,YACvBwvB,QACAE,OAAQnE,EAAkBlvC,KAAK2B,UAC/ByK,OAAQ6iC,EAAcjvC,KAAK2B,WAGvC,CACAwtC,iBACI,IAAIljC,EACJ,IAAKkjC,EACD,OACJ,MAAMmE,EAAmBtzC,KAAK4tC,eAAiB5tC,KAAK2vC,qBAC9C4D,EAAgBvzC,KAAKwpC,kBAAoBoD,GAAY5sC,KAAKwpC,iBAC1D9/B,EAA0D,QAArCuC,EAAKjM,KAAKyJ,QAAQ3N,qBAAkC,IAAPmQ,OAAgB,EAASA,EAAGmK,WAAW1M,kBACzG8pC,EAAyB9pC,aAA6D,EAASA,EAAkB1J,KAAKwJ,aAAc,IACpIiqC,EAA8BD,IAA2BxzC,KAAKuyC,2BAChEe,IACCC,GACGxpC,GAAa/J,KAAKwJ,eAClBiqC,KACJtE,EAAenvC,KAAK2B,SAAU6xC,GAC9BxzC,KAAK2vC,sBAAuB,EAC5B3vC,KAAK8kC,iBAEb,CACAkO,QAAQU,GAAkB,GACtB,MAAMC,EAAU3zC,KAAK++B,iBACrB,IAAI1B,EAAYr9B,KAAK4zC,oBAAoBD,GA00BrD,IAAkBxY,EAh0BN,OAJIuY,IACArW,EAAYr9B,KAAK0zC,gBAAgBrW,IAo0B7CwW,IADc1Y,EAj0BGkC,GAk0BH35B,GACdmwC,GAAU1Y,EAAIx3B,GAl0BC,CACHggB,YAAa3jB,KAAK8U,KAAK6O,YACvBmwB,YAAaH,EACbtW,YACA7zB,aAAc,CAAC,EACfuB,OAAQ/K,KAAKzD,GAErB,CACAwiC,iBACI,MAAM,cAAEjjC,GAAkBkE,KAAKyJ,QAC/B,IAAK3N,EACD,M3BvdQ,CACpB4H,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2Byd7B,MAAM42B,EAAMr/B,EAAckgC,sBAEpB,OAAE8C,GAAW9+B,KAAK8U,KAKxB,OAJIgqB,IACAvD,GAAcJ,EAAIz3B,EAAGo7B,EAAO1yB,OAAO1I,GACnC63B,GAAcJ,EAAIx3B,EAAGm7B,EAAO1yB,OAAOzI,IAEhCw3B,CACX,CACAyY,oBAAoBzY,GAChB,MAAM4Y,E3BleM,CACpBrwC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2Boe7B4nC,GAAY4H,EAAkB5Y,GAK9B,IAAK,IAAIviB,EAAI,EAAGA,EAAI5Y,KAAKywC,KAAKhrC,OAAQmT,IAAK,CACvC,MAAMwwB,EAAOppC,KAAKywC,KAAK73B,IACjB,OAAEkmB,EAAM,QAAEr1B,GAAY2/B,EAC5B,GAAIA,IAASppC,KAAK8U,MAAQgqB,GAAUr1B,EAAQ88B,aAAc,CAKtD,GAAIzH,EAAOuU,OAAQ,CACflH,GAAY4H,EAAkB5Y,GAC9B,MAAQ2D,OAAQkV,GAAeh0C,KAAK8U,KAKhCk/B,IACAzY,GAAcwY,EAAiBrwC,GAAIswC,EAAW5nC,OAAO1I,GACrD63B,GAAcwY,EAAiBpwC,GAAIqwC,EAAW5nC,OAAOzI,GAE7D,CACA43B,GAAcwY,EAAiBrwC,EAAGo7B,EAAO1yB,OAAO1I,GAChD63B,GAAcwY,EAAiBpwC,EAAGm7B,EAAO1yB,OAAOzI,EACpD,CACJ,CACA,OAAOowC,CACX,CACAE,eAAe9Y,EAAK+Y,GAAgB,GAChC,MAAMC,E3BngBM,CACpBzwC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2BqgB7B4nC,GAAYgI,EAAgBhZ,GAC5B,IAAK,IAAIviB,EAAI,EAAGA,EAAI5Y,KAAKywC,KAAKhrC,OAAQmT,IAAK,CACvC,MAAMwwB,EAAOppC,KAAKywC,KAAK73B,IAClBs7B,GACD9K,EAAK3/B,QAAQ88B,cACb6C,EAAKtK,QACLsK,IAASA,EAAKt0B,MACdinB,GAAaoY,EAAgB,CACzBzwC,GAAI0lC,EAAKtK,OAAO1yB,OAAO1I,EACvBC,GAAIylC,EAAKtK,OAAO1yB,OAAOzI,IAG1BoG,GAAaq/B,EAAK5/B,eAEvBuyB,GAAaoY,EAAgB/K,EAAK5/B,aACtC,CAIA,OAHIO,GAAa/J,KAAKwJ,eAClBuyB,GAAaoY,EAAgBn0C,KAAKwJ,cAE/B2qC,CACX,CACAT,gBAAgBvY,GACZ,IAAIlvB,EACJ,MAAMmoC,E3B3hBM,CACpB1wC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2B6hB7B4nC,GAAYiI,EAAqBjZ,GACjC,IAAK,IAAIviB,EAAI,EAAGA,EAAI5Y,KAAKywC,KAAKhrC,OAAQmT,IAAK,CACvC,MAAMwwB,EAAOppC,KAAKywC,KAAK73B,GACvB,IAAKwwB,EAAKznC,SACN,SACJ,IAAKoI,GAAaq/B,EAAK5/B,cACnB,SACJmxB,GAASyO,EAAK5/B,eAAiB4/B,EAAKoJ,iBACpC,MAAM9F,E3BpiBE,CACpBhpC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2BuiBzB4nC,GAAYO,EADItD,EAAKrK,kBAErB0N,GAAoB2H,EAAqBhL,EAAK5/B,aAAuC,QAAxByC,EAAKm9B,EAAKqE,gBAA6B,IAAPxhC,OAAgB,EAASA,EAAGoxB,UAAWqP,EACxI,CAIA,OAHI3iC,GAAa/J,KAAKwJ,eAClBijC,GAAoB2H,EAAqBp0C,KAAKwJ,cAE3C4qC,CACX,CAIAC,eAAet7B,GACX/Y,KAAKs0C,YAAcv7B,EACnB/Y,KAAKsvC,mBAAoB,EACzBtvC,KAAK8U,KAAKi+B,0BACd,CACAvM,WAAW/8B,GACPzJ,KAAKyJ,QAAU,IACRzJ,KAAKyJ,WACLA,EACHokC,eAAiCrxC,IAAtBiN,EAAQokC,WAA0BpkC,EAAQokC,UAE7D,CACA4E,oBACIzyC,KAAK8+B,YAAStiC,EACdwD,KAAKqD,YAAS7G,EACdwD,KAAKytC,cAAWjxC,EAChBwD,KAAKuyC,gCAA6B/1C,EAClCwD,KAAKs0C,iBAAc93C,EACnBwD,KAAK8K,YAAStO,EACdwD,KAAK4tC,eAAgB,CACzB,CAIAuC,qBACI,IAAIlkC,EAMJ,MAAMghC,EAAOjtC,KAAKu0C,UAOlB,GANAv0C,KAAKsvC,oBAAsBtvC,KAAKsvC,kBAAoBrC,EAAKqC,mBACzDtvC,KAAKgmC,mBAAqBhmC,KAAKgmC,iBAAmBiH,EAAKjH,mBAKlDhmC,KAAKsvC,oBAAsBtvC,KAAKw0C,+BACjC,OACJ,MAAM,OAAEnxC,EAAM,SAAElC,GAAanB,KAAKyJ,QAIlC,GAAKzJ,KAAKqD,SAAYA,GAAUlC,GAAhC,CAQA,IAAKnB,KAAKs0C,cAAgBt0C,KAAKsxC,eAAgB,CAE3C,MAAMmD,EAAiBz0C,KAAK00C,6BACxBD,GAAkBA,EAAepxC,QACjCrD,KAAKy0C,eAAiBA,EACtBz0C,KAAKsxC,e3B1mBD,CACpB5tC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2B4mBrBvE,KAAK20C,qB3B3mBD,CACpBjxC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2B6mBrBq1B,GAAqB55B,KAAK20C,qBAAsB30C,KAAKqD,OAAOg6B,UAAWoX,EAAepxC,OAAOg6B,WAC7F8O,GAAYnsC,KAAKsxC,eAAgBtxC,KAAK20C,uBAGtC30C,KAAKy0C,eAAiBz0C,KAAKsxC,oBAAiB90C,CAEpD,CnClmBZ,IAAyBsO,EAAQ4uB,EAAU99B,EmCumB/B,GAAKoE,KAAKsxC,gBAAmBtxC,KAAKs0C,YAuClC,GAlCKt0C,KAAK8K,SACN9K,KAAK8K,O3B7nBG,CACpBpH,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2B+nBzBvE,KAAK40C,qB3B9nBG,CACpBlxC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,K2BooBzBvE,KAAKsxC,gBACLtxC,KAAK20C,uBAC2B,QAA9B1oC,EAAKjM,KAAKy0C,sBAAmC,IAAPxoC,OAAgB,EAASA,EAAGnB,SnCrnB3DA,EmCsnBO9K,KAAK8K,OnCtnBJ4uB,EmCsnBY15B,KAAKsxC,enCtnBP11C,EmCsnBuBoE,KAAKy0C,eAAe3pC,OnCrnBlF2uB,GAAiB3uB,EAAOpH,EAAGg2B,EAASh2B,EAAG9H,EAAO8H,GAC9C+1B,GAAiB3uB,EAAOnH,EAAG+1B,EAAS/1B,EAAG/H,EAAO+H,ImCynB7B3D,KAAKs0C,aACNr2C,QAAQ+B,KAAKkuC,cAEbluC,KAAK8K,OAAS9K,KAAKi0C,eAAej0C,KAAKqD,OAAOg6B,WAG9C8O,GAAYnsC,KAAK8K,OAAQ9K,KAAKqD,OAAOg6B,WAEzCnC,GAAcl7B,KAAK8K,OAAQ9K,KAAKs0C,cAMhCnI,GAAYnsC,KAAK8K,OAAQ9K,KAAKqD,OAAOg6B,WAKrCr9B,KAAKw0C,+BAAgC,CACrCx0C,KAAKw0C,gCAAiC,EACtC,MAAMC,EAAiBz0C,KAAK00C,6BACxBD,GACAx2C,QAAQw2C,EAAevG,gBACnBjwC,QAAQ+B,KAAKkuC,gBAChBuG,EAAehrC,QAAQ88B,cACxBkO,EAAe3pC,QACf9K,KAAKy0C,eAAiBA,EACtBz0C,KAAKsxC,e3BvqBD,CACpB5tC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2ByqBrBvE,KAAK20C,qB3BxqBD,CACpBjxC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2B0qBrBq1B,GAAqB55B,KAAK20C,qBAAsB30C,KAAK8K,OAAQ2pC,EAAe3pC,QAC5EqhC,GAAYnsC,KAAKsxC,eAAgBtxC,KAAK20C,uBAGtC30C,KAAKy0C,eAAiBz0C,KAAKsxC,oBAAiB90C,CAEpD,CAjFU,CAkFd,CACAk4C,6BACI,GAAK10C,KAAKpE,SACN++B,GAAS36B,KAAKpE,OAAO4N,gBACrBoxB,GAAe56B,KAAKpE,OAAO4N,cAE/B,OAAKxJ,KAAKpE,OAAO01C,gBAAkBtxC,KAAKpE,OAAO04C,cAC3Ct0C,KAAKpE,OAAOyH,OACLrD,KAAKpE,OAGLoE,KAAKpE,OAAO84C,4BAE3B,CACAtE,iBACI,IAAInkC,EACJ,MAAM,kBAAEqjC,EAAiB,iBAAEtJ,GAAqBhmC,KAChDA,KAAKsvC,kBAAoBtvC,KAAKgmC,kBAAmB,EACjD,MAAMiH,EAAOjtC,KAAKu0C,UACZM,EAAW52C,QAAQ+B,KAAKkuC,eAAiBluC,OAASitC,EACxD,IAAI6H,GAAU,EAKd,GAJIxF,IACAwF,GAAU,GACVD,GAAY7O,IACZ8O,GAAU,GACVA,EACA,OACJ,MAAM,OAAEzxC,EAAM,SAAElC,GAAanB,KAAKyJ,QAWlC,GANAzJ,KAAKqvC,gBAAkBpxC,SAAgC,QAAtBgO,EAAKjM,KAAKpE,cAA2B,IAAPqQ,OAAgB,EAASA,EAAGojC,kBACvFrvC,KAAK8xB,kBACL9xB,KAAK+0C,kBACJ/0C,KAAKqvC,kBACNrvC,KAAKs0C,YAAct0C,KAAKsxC,oBAAiB90C,IAExCwD,KAAKqD,SAAYA,IAAUlC,EAC5B,OAKJgrC,GAAYnsC,KAAKkzC,gBAAiBlzC,KAAKqD,OAAOg6B,W9B/rB1D,SAAyBlC,EAAKoO,EAAWyL,EAAUC,GAAqB,GACpE,IAAIhpC,EAAI+U,EACR,MAAMk0B,EAAaF,EAASvvC,OAC5B,IAAKyvC,EACD,OAGJ,IAAI9L,EACArwB,EAFJwwB,EAAU7lC,EAAI6lC,EAAU5lC,EAAI,EAG5B,IAAK,IAAIiV,EAAI,EAAGA,EAAIs8B,EAAYt8B,IAC5BwwB,EAAO4L,EAASp8B,GAChBG,EAAQqwB,EAAKI,gBACuH,cAAjD,QAA7ExoB,EAA8B,QAAxB/U,EAAKm9B,EAAKznC,gBAA6B,IAAPsK,OAAgB,EAASA,EAAGtC,aAA0B,IAAPqX,OAAgB,EAASA,EAAGwiB,WAEnHyR,GACA7L,EAAK3/B,QAAQ88B,cACb6C,EAAKtK,QACLsK,IAASA,EAAKt0B,MACdinB,GAAaZ,EAAK,CACdz3B,GAAI0lC,EAAKtK,OAAO1yB,OAAO1I,EACvBC,GAAIylC,EAAKtK,OAAO1yB,OAAOzI,IAG3BoV,IAEAwwB,EAAU7lC,GAAKqV,EAAMrV,EAAEmB,MACvB0kC,EAAU5lC,GAAKoV,EAAMpV,EAAEkB,MAEvBq2B,GAAcC,EAAKpiB,IAEnBk8B,GAAsBlrC,GAAaq/B,EAAK5/B,eACxCuyB,GAAaZ,EAAKiO,EAAK5/B,eAO/B+/B,EAAU7lC,EAAI03B,GAAcmO,EAAU7lC,GACtC6lC,EAAU5lC,EAAIy3B,GAAcmO,EAAU5lC,EAC1C,C8B4pBYwxC,CAAgBn1C,KAAKkzC,gBAAiBlzC,KAAKupC,UAAWvpC,KAAKywC,KAAMoE,GACjE,MAAM,OAAE/pC,GAAWmiC,EACnB,IAAKniC,EACD,OACC9K,KAAKwpC,kBACNxpC,KAAKwpC,gB3B3uBK,CACtB9lC,EAP0B,CAC1B61B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,GAIb31B,EAR0B,CAC1B41B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,I2B8uBDt5B,KAAKo1C,6B3B5uBK,CACtB1xC,EAP0B,CAC1B61B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,GAIb31B,EAR0B,CAC1B41B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,K2BgvBL,MAAM+b,EAAiBr1C,KAAKupC,UAAU7lC,EAChC4xC,EAAiBt1C,KAAKupC,UAAU5lC,EAChC4xC,EAA0Bv1C,KAAKw1C,oBAUrChc,GAAax5B,KAAKwpC,gBAAiBxpC,KAAKkzC,gBAAiBpoC,EAAQ9K,KAAKwJ,cACtExJ,KAAKw1C,oBAAsBpH,GAAyBpuC,KAAKwpC,gBAAiBxpC,KAAKupC,WAC3EvpC,KAAKw1C,sBAAwBD,GAC7Bv1C,KAAKupC,UAAU7lC,IAAM2xC,GACrBr1C,KAAKupC,UAAU5lC,IAAM2xC,IACrBt1C,KAAKqwC,cAAe,EACpBrwC,KAAK8kC,iBACL9kC,KAAK2wC,gBAAgB,mBAAoB7lC,GAEjD,CACAgjC,OACI9tC,KAAKswC,WAAY,CAErB,CACAhD,OACIttC,KAAKswC,WAAY,CAErB,CACAxL,eAAe2Q,GAAY,GACvB,IAAIxpC,EAAI+U,EAAI4kB,EACkC,QAA7C5kB,GAAM/U,EAAKjM,KAAKyJ,SAASq7B,sBAAmC,IAAP9jB,GAAyBA,EAAG5jB,KAAK6O,GACvFwpC,IAAyC,QAA1B7P,EAAK5lC,KAAK8qC,kBAA+B,IAAPlF,GAAyBA,EAAGd,kBACzE9kC,KAAKkuC,eAAiBluC,KAAKkuC,aAAavsC,WACxC3B,KAAKkuC,kBAAe1xC,EAE5B,CACAs1C,mBAAmB/4B,EAAO84B,GAA+B,GACrD,IAAI5lC,EAAI+U,EACR,MAAMysB,EAAWztC,KAAKytC,SAChBiI,GAAwBjI,aAA2C,EAASA,EAASjkC,eAAiB,CAAC,EACvGmsC,EAAc,IAAK31C,KAAKwJ,cACxB8qC,E3BzxBQ,CACtB5wC,EAP0B,CAC1B61B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,GAIb31B,EAR0B,CAC1B41B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,I2B4xBLt5B,KAAKsxC,eAAiBtxC,KAAK20C,0BAAuBn4C,EAClDwD,KAAKw0C,gCAAkC3C,EACvC,MAAM+D,E3BvxBM,CACpBlyC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2ByxBvBsxC,GAA2BpI,aAA2C,EAASA,EAAS1iC,WAAoC,QAAtBkB,EAAKjM,KAAKqD,cAA2B,IAAP4I,OAAgB,EAASA,EAAGlB,QAChK+qC,IAA4C,QAA1B90B,EAAKhhB,KAAK8qC,kBAA+B,IAAP9pB,OAAgB,EAASA,EAAG+pB,QAAQtlC,SAAW,IAAM,EACzGswC,EAAyB93C,QAAQ43C,IAClCC,IAC0B,IAA3B91C,KAAKyJ,QAAQokC,YACZ7tC,KAAKywC,KAAK3yC,KAAKk4C,KACpBh2C,KAAKuwC,kBAAoB,EACzBvwC,KAAKi2C,eAAkBnpC,IACnB,IAAIb,EACJ,MAAMwY,EAAW3X,EAAS,IA2c1C,IAAgB+T,EAAQ0C,EAAMiB,EAAI5pB,EA1clBs7C,GAAa5B,EAAY5wC,EAAGqV,EAAMrV,EAAG+gB,GACrCyxB,GAAa5B,EAAY3wC,EAAGoV,EAAMpV,EAAG8gB,GACrCzkB,KAAKq0C,eAAeC,GAChBt0C,KAAKsxC,gBACLtxC,KAAK20C,sBACL30C,KAAKqD,SAC2B,QAA9B4I,EAAKjM,KAAKy0C,sBAAmC,IAAPxoC,OAAgB,EAASA,EAAG5I,UACpEu2B,GAAqBgc,EAAgB51C,KAAKqD,OAAOg6B,UAAWr9B,KAAKy0C,eAAepxC,OAAOg6B,WAmc3Fxc,EAlcW7gB,KAAKsxC,eAkcR/tB,EAlcwBvjB,KAAK20C,qBAkcvBnwB,EAlc6CoxB,EAkczCh7C,EAlcyD6pB,EAmcvF0xB,GAAQt1B,EAAOnd,EAAG6f,EAAK7f,EAAG8gB,EAAG9gB,EAAG9I,GAChCu7C,GAAQt1B,EAAOld,EAAG4f,EAAK5f,EAAG6gB,EAAG7gB,EAAG/I,IAlchBi7C,IACA71C,KAAK0tC,gBAAkBiI,ER9yB3C,SAAmB7qC,EAAQsrC,EAAQnJ,EAAMxoB,EAAUsxB,EAAwBD,GACnEC,GACAjrC,EAAOhC,QAAUgH,GAAI,OAEJtT,IAAjBywC,EAAKnkC,QAAwBmkC,EAAKnkC,QAAU,EAAGgjC,GAAgBrnB,IAC/D3Z,EAAOurC,YAAcvmC,QAAuBtT,IAAnB45C,EAAOttC,QAAwBstC,EAAOttC,QAAU,EAAG,EAAGkjC,GAAiBvnB,KAE3FqxB,IACLhrC,EAAOhC,QAAUgH,QAAuBtT,IAAnB45C,EAAOttC,QAAwBstC,EAAOttC,QAAU,OAAoBtM,IAAjBywC,EAAKnkC,QAAwBmkC,EAAKnkC,QAAU,EAAG2b,IAK3H,IAAK,IAAI7L,EAAI,EAAGA,EAAI6yB,GAAY7yB,IAAK,CACjC,MAAM09B,EAAc,SAAS9K,GAAQ5yB,WACrC,IAAI29B,EAAe3K,GAAUwK,EAAQE,GACjCE,EAAa5K,GAAUqB,EAAMqJ,QACZ95C,IAAjB+5C,QAA6C/5C,IAAfg6C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA7K,GAAK4K,KAAkB5K,GAAK6K,IAE5B1rC,EAAOwrC,GAAe9xC,KAAKD,IAAIuL,GAAI47B,GAAS6K,GAAe7K,GAAS8K,GAAa/xB,GAAW,IACxF9e,EAAQ5C,KAAKyzC,IAAe7wC,EAAQ5C,KAAKwzC,MACzCzrC,EAAOwrC,IAAgB,MAI3BxrC,EAAOwrC,GAAeE,EAE9B,EAIIJ,EAAOruC,QAAUklC,EAAKllC,UACtB+C,EAAO/C,OAAS+H,GAAIsmC,EAAOruC,QAAU,EAAGklC,EAAKllC,QAAU,EAAG0c,GAElE,CQuwBoBgyB,CAAUd,EAAaD,EAAsB11C,KAAKwJ,aAAcib,EAAUsxB,EAAwBD,IAEtG91C,KAAK8U,KAAKi+B,2BACV/yC,KAAK8kC,iBACL9kC,KAAKuwC,kBAAoB9rB,CAAQ,EAErCzkB,KAAKi2C,eAAe,EACxB,CACAhkB,eAAexoB,GACX,IAAIwC,EAAI+U,EACRhhB,KAAK2wC,gBAAgB,kBACY,QAAhC1kC,EAAKjM,KAAK8xB,wBAAqC,IAAP7lB,GAAyBA,EAAG6R,OACjE9d,KAAKkuC,eACyC,QAA7CltB,EAAKhhB,KAAKkuC,aAAapc,wBAAqC,IAAP9Q,GAAyBA,EAAGlD,QAElF9d,KAAK+0C,mBACL75B,GAAW0S,OAAO5tB,KAAK+0C,kBACvB/0C,KAAK+0C,sBAAmBv4C,GAO5BwD,KAAK+0C,iBAAmB/5B,GAAK4S,QAAO,KAChCluB,EAAsBC,wBAAyB,EAC/CK,KAAK8xB,iBCpzBrB,SAAiBvO,EAAMiB,EAAIvT,EAAa,CAAC,GACrC,MAAMxP,EAAQ8B,EAAcggB,GAAQA,EAAO9E,GAAY8E,GAEvD,OADA9hB,EAAM/D,MAAM2zB,GAA2B,GAAI5vB,EAAO+iB,EAAIvT,IAC/C,CACH6M,KAAM,IAAMrc,EAAMqc,OAClBS,YAAa,IAAM9c,EAAM8c,cAEjC,CD6yBwC,CAAQ,EAxzBxB,IAwzB4C,IAC7C9U,EACH+kB,SAAW1hB,IACP,IAAIb,EACJjM,KAAKi2C,eAAenpC,GACQ,QAA3Bb,EAAKxC,EAAQ+kB,gBAA6B,IAAPviB,GAAyBA,EAAG7O,KAAKqM,EAASqD,EAAO,EAEzFwhB,WAAY,KACR,IAAIriB,EAC0B,QAA7BA,EAAKxC,EAAQ6kB,kBAA+B,IAAPriB,GAAyBA,EAAG7O,KAAKqM,GACvEzJ,KAAK02C,mBAAmB,IAG5B12C,KAAKkuC,eACLluC,KAAKkuC,aAAapc,iBAAmB9xB,KAAK8xB,kBAE9C9xB,KAAK+0C,sBAAmBv4C,CAAS,GAEzC,CACAk6C,oBACI,IAAIzqC,EACAjM,KAAKkuC,eACLluC,KAAKkuC,aAAapc,sBAAmBt1B,EACrCwD,KAAKkuC,aAAaV,qBAAkBhxC,GAEb,QAA1ByP,EAAKjM,KAAK8qC,kBAA+B,IAAP7+B,GAAyBA,EAAG8hC,wBAC/D/tC,KAAKkuC,aACDluC,KAAK8xB,iBACD9xB,KAAK0tC,qBACDlxC,EACZwD,KAAK2wC,gBAAgB,oBACzB,CACAM,kBACI,IAAIhlC,EACAjM,KAAK8xB,mBAC0B,QAA9B7lB,EAAKjM,KAAKi2C,sBAAmC,IAAPhqC,GAAyBA,EAAG7O,KAAK4C,KA31BhE,KA41BRA,KAAK8xB,iBAAiBhU,QAE1B9d,KAAK02C,mBACT,CACAC,0BACI,MAAM1J,EAAOjtC,KAAKu0C,UAClB,IAAI,qBAAEK,EAAoB,OAAE9pC,EAAM,OAAEzH,EAAM,aAAEmG,GAAiByjC,EAC7D,GAAK2H,GAAyB9pC,GAAWzH,EAAzC,CAOA,GAAIrD,OAASitC,GACTjtC,KAAKqD,QACLA,GACAuzC,GAA0B52C,KAAKyJ,QAAQi9B,cAAe1mC,KAAKqD,OAAOg6B,UAAWh6B,EAAOg6B,WAAY,CAChGvyB,EAAS9K,KAAK8K,Q3B93BN,CACpBpH,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2Bg4BzB,MAAMsyC,EAAU5d,GAAWj5B,KAAKqD,OAAOg6B,UAAU35B,GACjDoH,EAAOpH,EAAEY,IAAM2oC,EAAKniC,OAAOpH,EAAEY,IAC7BwG,EAAOpH,EAAEa,IAAMuG,EAAOpH,EAAEY,IAAMuyC,EAC9B,MAAMC,EAAU7d,GAAWj5B,KAAKqD,OAAOg6B,UAAU15B,GACjDmH,EAAOnH,EAAEW,IAAM2oC,EAAKniC,OAAOnH,EAAEW,IAC7BwG,EAAOnH,EAAEY,IAAMuG,EAAOnH,EAAEW,IAAMwyC,CAClC,CACA3K,GAAYyI,EAAsB9pC,GAMlCixB,GAAa6Y,EAAsBprC,GAOnCgwB,GAAax5B,KAAKo1C,6BAA8Bp1C,KAAKkzC,gBAAiB0B,EAAsBprC,EA/BlF,CAgCd,CACA0nC,mBAAmB/vC,EAAUioC,GACzB,IAAIn9B,EAAI+U,EAAI4kB,EACP5lC,KAAKwwC,YAAY/tC,IAAItB,IACtBnB,KAAKwwC,YAAY9tC,IAAIvB,EAAU,IAAI4rC,IAEzB/sC,KAAKwwC,YAAYjuC,IAAIpB,GAC7BuZ,IAAI0uB,GACVA,EAAKwB,QAAQ,CACT35B,WAA2D,QAA9ChF,EAAKm9B,EAAK3/B,QAAQk9B,8BAA2C,IAAP16B,OAAgB,EAASA,EAAGgF,WAC/Fo8B,sBAAiJ,QAAzHzH,EAAoD,QAA9C5kB,EAAKooB,EAAK3/B,QAAQk9B,8BAA2C,IAAP3lB,OAAgB,EAASA,EAAG+1B,mCAAgD,IAAPnR,OAAgB,EAASA,EAAGxoC,KAAK4jB,EAAIooB,IAEtM,CACA4B,SACI,MAAMgM,EAAQh3C,KAAK8qC,WACnB,OAAOkM,GAAQA,EAAM/J,OAASjtC,IAClC,CACAu0C,UACI,IAAItoC,EACJ,MAAM,SAAE9K,GAAanB,KAAKyJ,QAC1B,OAAOtI,IAAuC,QAA1B8K,EAAKjM,KAAK8qC,kBAA+B,IAAP7+B,OAAgB,EAASA,EAAGghC,OAAgBjtC,IACtG,CACAi3C,cACI,IAAIhrC,EACJ,MAAM,SAAE9K,GAAanB,KAAKyJ,QAC1B,OAAOtI,EAAsC,QAA1B8K,EAAKjM,KAAK8qC,kBAA+B,IAAP7+B,OAAgB,EAASA,EAAG+gC,cAAWxwC,CAChG,CACAsuC,WACI,MAAM,SAAE3pC,GAAanB,KAAKyJ,QAC1B,GAAItI,EACA,OAAOnB,KAAK8U,KAAK07B,YAAYjuC,IAAIpB,EACzC,CACAypC,SAAQ,WAAE8E,EAAU,WAAEz+B,EAAU,sBAAEo8B,GAA2B,CAAC,GAC1D,MAAM2J,EAAQh3C,KAAK8qC,WACfkM,GACAA,EAAMpM,QAAQ5qC,KAAMqtC,GACpBqC,IACA1vC,KAAKwpC,qBAAkBhtC,EACvBwD,KAAK0vC,YAAa,GAElBz+B,GACAjR,KAAKwmC,WAAW,CAAEv1B,cAC1B,CACA45B,WACI,MAAMmM,EAAQh3C,KAAK8qC,WACnB,QAAIkM,GACOA,EAAMnM,SAAS7qC,KAK9B,CACAqyC,gBACI,MAAM,cAAEv2C,GAAkBkE,KAAKyJ,QAC/B,IAAK3N,EACD,OAEJ,IAAIo7C,GAAY,EAKhB,MAAM,aAAE1tC,GAAiB1N,EAQzB,IAPI0N,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACbgvC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAIv+B,EAAI,EAAGA,EAAIi2B,GAAcppC,OAAQmT,IAAK,CAC3C,MAAM/X,EAAM,SAAWguC,GAAcj2B,GAEjCpP,EAAa3I,KACbs2C,EAAYt2C,GAAO2I,EAAa3I,GAChC/E,EAAc2nC,eAAe5iC,EAAK,GAE1C,CAGA/E,SAA8DA,EAAca,SAE5E,IAAK,MAAMkE,KAAOs2C,EACdr7C,EAAc2nC,eAAe5iC,EAAKs2C,EAAYt2C,IAIlD/E,EAAcgpC,gBAClB,CACAj2B,oBAAoBF,EAAY,CAAC,GAC7B,IAAI1C,EAAI+U,EAAI4kB,EAEZ,MAAMwR,EAAS,CAAC,EAChB,IAAKp3C,KAAK2B,UAAY3B,KAAKyvC,MACvB,OAAO2H,EACX,IAAKp3C,KAAKswC,UACN,MAAO,CAAE+G,WAAY,UAGrBD,EAAOC,WAAa,GAExB,MAAM3tC,EAA0D,QAArCuC,EAAKjM,KAAKyJ,QAAQ3N,qBAAkC,IAAPmQ,OAAgB,EAASA,EAAGmK,WAAW1M,kBAC/G,GAAI1J,KAAK0vC,WAQL,OAPA1vC,KAAK0vC,YAAa,EAClB0H,EAAOtuC,QAAU,GACjBsuC,EAAOE,cACH1nC,GAAmBjB,EAAU2oC,gBAAkB,GACnDF,EAAOhzC,UAAYsF,EACbA,EAAkB1J,KAAKwJ,aAAc,IACrC,OACC4tC,EAEX,MAAMnK,EAAOjtC,KAAKu0C,UAClB,IAAKv0C,KAAKwpC,kBAAoBxpC,KAAKqD,SAAW4pC,EAAKniC,OAAQ,CACvD,MAAMysC,EAAc,CAAC,EAerB,OAdIv3C,KAAKyJ,QAAQtI,WACbo2C,EAAYzuC,aACsBtM,IAA9BwD,KAAKwJ,aAAaV,QACZ9I,KAAKwJ,aAAaV,QAClB,EACVyuC,EAAYD,cACR1nC,GAAmBjB,EAAU2oC,gBAAkB,IAEnDt3C,KAAKqwC,eAAiBtmC,GAAa/J,KAAKwJ,gBACxC+tC,EAAYnzC,UAAYsF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN1J,KAAKqwC,cAAe,GAEjBkH,CACX,CACA,MAAMC,EAAiBvK,EAAKS,iBAAmBT,EAAKzjC,aACpDxJ,KAAK22C,0BACLS,EAAOhzC,UAAYgqC,GAAyBpuC,KAAKo1C,6BAA8Bp1C,KAAKupC,UAAWiO,GAC3F9tC,IACA0tC,EAAOhzC,UAAYsF,EAAkB8tC,EAAgBJ,EAAOhzC,YAEhE,MAAM,EAAEV,EAAC,EAAEC,GAAM3D,KAAKwpC,gBACtB4N,EAAOttC,gBAAkB,GAAc,IAAXpG,EAAEyI,WAA4B,IAAXxI,EAAEwI,YAC7C8gC,EAAKS,gBAKL0J,EAAOtuC,QACHmkC,IAASjtC,KACiG,QAAnG4lC,EAAuC,QAAjC5kB,EAAKw2B,EAAe1uC,eAA4B,IAAPkY,EAAgBA,EAAKhhB,KAAKwJ,aAAaV,eAA4B,IAAP88B,EAAgBA,EAAK,EACjI5lC,KAAKwtC,gBACDxtC,KAAKwJ,aAAaV,QAClB0uC,EAAenB,YAO7Be,EAAOtuC,QACHmkC,IAASjtC,UACwBxD,IAA3Bg7C,EAAe1uC,QACX0uC,EAAe1uC,QACf,QAC2BtM,IAA/Bg7C,EAAenB,YACXmB,EAAenB,YACf,EAKlB,IAAK,MAAMx1C,KAAOmC,EAAiB,CAC/B,QAA4BxG,IAAxBg7C,EAAe32C,GACf,SACJ,MAAM,QAAEsoC,EAAO,QAAEkC,GAAYroC,EAAgBnC,GACvC42C,EAAYtO,EAAQqO,EAAe32C,GAAMosC,GAC/C,GAAI5B,EAAS,CACT,MAAMqM,EAAMrM,EAAQ5lC,OACpB,IAAK,IAAImT,EAAI,EAAGA,EAAI8+B,EAAK9+B,IACrBw+B,EAAO/L,EAAQzyB,IAAM6+B,CAE7B,MAEIL,EAAOv2C,GAAO42C,CAEtB,CAYA,OANIz3C,KAAKyJ,QAAQtI,WACbi2C,EAAOE,cACHrK,IAASjtC,KACH4P,GAAmBjB,EAAU2oC,gBAAkB,GAC/C,QAEPF,CACX,CACAvE,gBACI7yC,KAAKutC,WAAavtC,KAAKytC,cAAWjxC,CACtC,CAEAm7C,YACI33C,KAAK8U,KAAKm7B,MAAMn/B,SAASs4B,IAAW,IAAIn9B,EAAI,OAAwC,QAAhCA,EAAKm9B,EAAKtX,wBAAqC,IAAP7lB,OAAgB,EAASA,EAAG6R,MAAM,IAC9H9d,KAAK8U,KAAKm7B,MAAMn/B,QAAQ2hC,IACxBzyC,KAAK8U,KAAK07B,YAAYv0B,OAC1B,EAER,CACA,SAASgkB,GAAamJ,GAClBA,EAAKnJ,cACT,CACA,SAAS2S,GAAmBxJ,GACxB,IAAIn9B,EAAI+U,EAAI4kB,EACZ,MAAM6H,GAAuC,QAA1BxhC,EAAKm9B,EAAKmE,kBAA+B,IAAPthC,OAAgB,EAASA,EAAGwhC,WAAarE,EAAKqE,SACnG,GAAIrE,EAAK4B,UACL5B,EAAK/lC,QACLoqC,GACArE,EAAKyH,aAAa,aAAc,CAChC,MAAQxT,UAAWh6B,EAAQywC,YAAa8D,GAAmBxO,EAAK/lC,QAC1D,cAAEqjC,GAAkB0C,EAAK3/B,QACzBorC,EAAWpH,EAAS1iC,SAAWq+B,EAAK/lC,OAAO0H,OAG3B,SAAlB27B,EACAlM,IAAUtB,IACN,MAAM2e,EAAehD,EACfpH,EAASqG,YAAY5a,GACrBuU,EAASpQ,UAAUnE,GACnBzzB,EAASwzB,GAAW4e,GAC1BA,EAAavzC,IAAMjB,EAAO61B,GAAM50B,IAChCuzC,EAAatzC,IAAMszC,EAAavzC,IAAMmB,CAAM,IAG3CmxC,GAA0BlQ,EAAe+G,EAASpQ,UAAWh6B,IAClEm3B,IAAUtB,IACN,MAAM2e,EAAehD,EACfpH,EAASqG,YAAY5a,GACrBuU,EAASpQ,UAAUnE,GACnBzzB,EAASwzB,GAAW51B,EAAO61B,IACjC2e,EAAatzC,IAAMszC,EAAavzC,IAAMmB,CAAM,IAGpD,MAAMqyC,E3B9oCY,CACtBp0C,EAP0B,CAC1B61B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,GAIb31B,EAR0B,CAC1B41B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,I2BipCTE,GAAase,EAAaz0C,EAAQoqC,EAASpQ,WAC3C,MAAM0a,E3BhpCY,CACtBr0C,EAP0B,CAC1B61B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,GAIb31B,EAR0B,CAC1B41B,UAAW,EACX10B,MAAO,EACPsH,OAAQ,EACRmtB,YAAa,I2BmpCLub,EACArb,GAAaue,EAAa3O,EAAK6K,eAAe2D,GAAgB,GAAOnK,EAASqG,aAG9Eta,GAAaue,EAAa10C,EAAQoqC,EAASpQ,WAE/C,MAAMmD,GAAoBoM,GAAYkL,GACtC,IAAI3G,GAA2B,EAC/B,IAAK/H,EAAKmE,WAAY,CAClB,MAAMkH,EAAiBrL,EAAKsL,6BAK5B,GAAID,IAAmBA,EAAelH,WAAY,CAC9C,MAAQE,SAAUuK,EAAgB30C,OAAQ40C,GAAiBxD,EAC3D,GAAIuD,GAAkBC,EAAc,CAChC,MAAMC,E3B7pCF,CACpBx0C,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2B+pCrBq1B,GAAqBse,EAAkBzK,EAASpQ,UAAW2a,EAAe3a,WAC1E,MAAMuY,E3B/pCF,CACpBlyC,EAFqB,CAAGY,IAAK,EAAGC,IAAK,GAGrCZ,EAHqB,CAAGW,IAAK,EAAGC,IAAK,I2BiqCrBq1B,GAAqBgc,EAAgBvyC,EAAQ40C,EAAa5a,WACrDwP,GAAUqL,EAAkBtC,KAC7BzE,GAA2B,EAEnC,CACJ,CACJ,CACA/H,EAAKuH,gBAAgB,YAAa,CAC9BttC,SACAoqC,WACA10B,MAAOg/B,EACPD,cACAtX,mBACA2Q,4BAER,MACS/H,EAAK4B,WACoC,QAA7CpF,GAAM5kB,EAAKooB,EAAK3/B,SAAS4O,sBAAmC,IAAPutB,GAAyBA,EAAGxoC,KAAK4jB,IAO3FooB,EAAK3/B,QAAQwH,gBAAazU,CAC9B,CACA,SAAS0zC,GAAoB9G,GAKzBA,EAAKkG,oBAAsBlG,EAAKkG,kBAAoBrxC,QAAQmrC,EAAKxtC,QAAUwtC,EAAKxtC,OAAO0zC,oBAIvFlG,EAAKpD,mBAAqBoD,EAAKpD,iBAAmB/nC,QAAQmrC,EAAKxtC,QAAUwtC,EAAKxtC,OAAOoqC,kBACzF,CACA,SAAS6M,GAAczJ,GACnBA,EAAKyJ,eACT,CACA,SAASJ,GAAkBrJ,GACvBA,EAAKqJ,mBACT,CACA,SAASE,GAAoBvJ,GACzB,MAAM,cAAEttC,GAAkBstC,EAAK3/B,SAC3B3N,aAAqD,EAASA,EAAcsa,WAAW+hC,wBACvFr8C,EAAcgB,OAAO,uBAEzBssC,EAAK+F,gBACT,CACA,SAAS8B,GAAgB7H,GACrBA,EAAK6H,kBACL7H,EAAKkL,YAAclL,EAAKkI,eAAiBlI,EAAKt+B,YAAStO,CAC3D,CACA,SAAS2zC,GAAmB/G,GACxBA,EAAK+G,oBACT,CACA,SAASC,GAAehH,GACpBA,EAAKgH,gBACT,CACA,SAASiC,GAAcjJ,GACnBA,EAAKiJ,eACT,CACA,SAASS,GAAoBkE,GACzBA,EAAM7I,oBACV,CACA,SAAS+H,GAAar1B,EAAQ9H,EAAOne,GACjCimB,EAAO0Y,UAAYzpB,GAAIiJ,EAAMwgB,UAAW,EAAG3+B,GAC3CimB,EAAOhc,MAAQiL,GAAIiJ,EAAMlU,MAAO,EAAGjK,GACnCimB,EAAO1U,OAAS4M,EAAM5M,OACtB0U,EAAOyY,YAAcvgB,EAAMugB,WAC/B,CACA,SAAS6c,GAAQt1B,EAAQ0C,EAAMiB,EAAI5pB,GAC/BimB,EAAOvc,IAAMwL,GAAIyT,EAAKjf,IAAKkgB,EAAGlgB,IAAK1J,GACnCimB,EAAOtc,IAAMuL,GAAIyT,EAAKhf,IAAKigB,EAAGjgB,IAAK3J,EACvC,CAKA,SAASo7C,GAAoB5M,GACzB,OAAQA,EAAKsE,sBAAwDlxC,IAArC4sC,EAAKsE,gBAAgB2I,WACzD,CACA,MAAM7E,GAA0B,CAC5BhoB,SAAU,IACVpD,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAASssB,GAAetJ,EAAMgG,GAK1B,IAAIgJ,EAAahP,EAAKt0B,KACtB,IAAK,IAAI8D,EAAIwwB,EAAKqH,KAAKhrC,OAAS,EAAGmT,GAAK,EAAGA,IACvC,GAAI3a,QAAQmrC,EAAKqH,KAAK73B,GAAGjX,UAAW,CAChCy2C,EAAahP,EAAKqH,KAAK73B,GACvB,KACJ,CAEJ,MACMlK,GADgB0pC,GAAcA,IAAehP,EAAKt0B,KAAOsjC,EAAWz2C,SAAW1G,UACvDo9C,cAAc,wBAAwBjJ,OAChE1gC,GACA06B,EAAKxnC,MAAM8M,GAAS,EAC5B,CACA,SAASmlC,GAAU3a,GACfA,EAAK50B,IAAME,KAAKQ,MAAMk0B,EAAK50B,KAC3B40B,EAAK30B,IAAMC,KAAKQ,MAAMk0B,EAAK30B,IAC/B,CAKA,SAASqyC,GAA0BlQ,EAAe+G,EAAUpqC,GACxD,MAA0B,aAAlBqjC,GACe,oBAAlBA,IACIvN,GAAO2T,GAAYW,GAAWX,GAAYzpC,GAAS,GAChE,CE5xCA,MAAMi1C,GAAyBxJ,GAAqB,CAChDC,qBAAsB,CAAC/xC,EAAKF,IAAW4U,GAAY1U,EAAK,SAAUF,GAClEmyC,cAAe,KAAM,CACjBvrC,EAAGzI,SAASs9C,gBAAgBC,YAAcv9C,SAASw9C,KAAKD,WACxD70C,EAAG1I,SAASs9C,gBAAgBG,WAAaz9C,SAASw9C,KAAKC,YAE3DxJ,kBAAmB,KAAM,ICNvBtQ,GAAqB,CACvBviC,aAASG,GAEP,GAAqBsyC,GAAqB,CAC5CG,cAAgBttC,IAAa,CACzB+B,EAAG/B,EAAS62C,WACZ70C,EAAGhC,EAAS+2C,YAEhB1J,cAAe,KACX,IAAKpQ,GAAmBviC,QAAS,CAC7B,MAAMs8C,EAAe,IAAIL,GAAuB,EAAG,CAAC,GACpDK,EAAa/2C,MAAMiW,QACnB8gC,EAAanS,WAAW,CAAED,cAAc,IACxC3H,GAAmBviC,QAAUs8C,CACjC,CACA,OAAO/Z,GAAmBviC,OAAO,EAErC8yC,eAAgB,CAACxtC,EAAUF,KACvBE,EAASgI,MAAMvF,eAAsB5H,IAAViF,EAAsBA,EAAQ,MAAM,EAEnEytC,kBAAoBvtC,GAAa1D,QAAuD,UAA/C4Z,OAAOypB,iBAAiB3/B,GAAUi3C,YCbzEC,GAAgB,IACfvlB,MACA1c,MACA1X,MACAqsC,IAQDuN,GAAuB92C,GAAkB,CAACxG,EAAWyU,ICjB3D,SAA+BzU,GAAW,mBAAEwS,GAAqB,GAASxN,EAAmB7E,EAAqB8E,GAI9G,MAAO,IAHYmC,EAAepH,GAC5B2V,GACAK,GAGFhR,oBACAE,UAAWqN,GAAgBC,GAC3BrS,sBACA8E,4BACAjF,YAER,CDKsE,CAAsBA,EAAWyU,EAAQ4oC,GAAe,GAAwB,K","sources":["webpack://chez-moi/./src/components/UnstyledLocalLink/index.tsx","webpack://chez-moi/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/types.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/events/use-dom-event.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/warn-once.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/PanSession.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://chez-moi/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst UnstyledLink = styled(Link)`\ntext-decoration: none;\nbox-shadow: none;\n`\nexport default UnstyledLink;\n\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","/**\n * Specifically match against false here as incomplete versions of\n * PointerEvents in very old browser might have it set as undefined.\n */\nconst isPrimaryPointer = (event) => event.isPrimary !== false;\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? (event) => isPrimaryPointer(event) && listener(event)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction isMouseEvent(event) {\n    return event.type !== \"pen\" && event.type !== \"touch\";\n}\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.0.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (!isPrimaryPointer(event))\n                return;\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            if (!isPrimaryPointer(event))\n                return;\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.0.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.0.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["UnstyledLink","styled","Link","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","children","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","isPrimary","extractEventInfo","pointType","point","wrapHandler","shouldFilterPrimaryPointer","listener","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","isMouseEvent","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","window","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","constructor","subscriptions","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","clearListeners","eventManagers","attach","passiveEffect","setWithVelocity","getPrevious","stop","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","appearStoreId","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","timeout","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","super","arguments","getAttribute","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","documentNode","position","featureBundle","motion"],"sourceRoot":""}